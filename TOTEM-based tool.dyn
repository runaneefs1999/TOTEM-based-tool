{
  "Uuid": "ac557e88-f819-4aac-88f6-a9c763c9d441",
  "IsCustomNode": false,
  "Description": "",
  "Name": "TOTEM-based tool",
  "ElementResolver": {
    "ResolutionMap": {
      "Parameter": {
        "Key": "Revit.Elements.Parameter",
        "Value": "RevitNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [],
  "Outputs": [
    {
      "Id": "2fbacf3fb3194bd5a63fa74a450f6253",
      "Name": "Data.ExportToExcel",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "1e3b5d82-c924-4649-a653-7fa7ead9cd1c",
      "FunctionType": "Graph",
      "Id": "a975e6b79f8a4068972a73d99999a2f6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c8d05e3127554b45b6bc199dbddfb56a",
          "Name": "elementType",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ebd3420b5e29406b9899f713f25a346b",
          "Name": "materials",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ccfe03516904779bd6948d56bf055c8",
          "Name": "functions",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9ff2dca437a48ceb7bb4ecb0b2a9730",
          "Name": "widths",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f7d3575a26548a486e003d02257a826",
          "Name": "isCore",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c4b22209348431dac6e009992e3327a",
          "Name": "wraps",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c89ff38027d240e38dd1d8a2ee23c99e",
          "Name": "isVariable",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64cb01eaa62c456199ded507b8e59e1e",
          "Name": "isStructuralDeck",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af473279a2614f3780cf3585df8285af",
          "Name": "layers",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the compound layers of any layered family type (wall types, roof types, floor types etc.)"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 241,
      "SelectedString": "OST_Floors",
      "Id": "5c5b52526f8c46a7805cd9f1aa57b6fb",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "144833ad46aa49e88f72bbeb5be609cd",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "1d81ce4cbed34cc094082864e2830842",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "7cf7ea764a0c4dec992364338eae20a1",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "542a7ec5088f4c95a80228955940fb53",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8d0706a8455e4025938c3ec51bef2877",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4b9a630c33c24a578625133b36dd8c36",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a4161a57f0794a5295e4a72616a47016",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0f42916b474b460db609a1cc7fe81d1a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "dbb698c82a3045e793391e2b97d2703f",
          "Name": "material",
          "Description": "Revit.Elements.Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01b960976da047baa0b36a81f30677ab",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Material.Name",
      "Replication": "Auto",
      "Description": "Get Material Name\n\nMaterial.Name: string"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 727,
      "SelectedString": "OST_Walls",
      "Id": "df296e0a91ad49a0b6747af37157bb72",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "438bbefede2d435e852dd7f171176420",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "69e3ee7f12c74e7d91324ddca16a0311",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "aa203bd2884548ce85b25cbf06bc64d2",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ecbd6c03adf743719b06522fbfe4512e",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a33ae200948e4b38be754515f3e53a1e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f3832dae4d9349ac952927ee0fc78348",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a5446e2f89141dcbefe28c54e6fa486",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "1e3b5d82-c924-4649-a653-7fa7ead9cd1c",
      "FunctionType": "Graph",
      "Id": "22796d8cfc1b4864ae62a00255262743",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2fa289bee8814499b283a43bf3428c2a",
          "Name": "elementType",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d5bd91144d94fb1b261282cf52c8d0c",
          "Name": "materials",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27ed90d39b5945b5a5e81361618346e1",
          "Name": "functions",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "933d5ae9fd7b4b1a9fe60abc41cf3627",
          "Name": "widths",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8212fc59016048848c65a402864b7d12",
          "Name": "isCore",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0ddfd7b22cd4772adb0f54c1aa8dbe7",
          "Name": "wraps",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "662e309f5be74af8bcd389179dc82f85",
          "Name": "isVariable",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f29502c41c444067bb33494de38f132b",
          "Name": "isStructuralDeck",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3286438fa25c418a8f26280a38a426bd",
          "Name": "layers",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the compound layers of any layered family type (wall types, roof types, floor types etc.)"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7012804b290d429fa70ff0126f871775",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0f29a2f1fdd44f4eb4e128aebe2178d8",
          "Name": "material",
          "Description": "Revit.Elements.Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c87e220e487f4d12985bee8e0870b493",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Material.Name",
      "Replication": "Auto",
      "Description": "Get Material Name\n\nMaterial.Name: string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\ninput_lists = IN[0]\r\n\r\ninput_lists = [[x.casefold() for x in sublst] for sublst in input_lists]\r\n\r\n# Place your code below this line\r\ndef categorize_string(input_string):\r\n    keywords = {\r\n        \"hcs\": \"HCS\",\r\n        \"clt\": \"CLT\",\r\n        \"screed\": \"SCREED\",\r\n        \"wood\": \"WOOD\",\r\n        \"oak\": \"WOOD\",\r\n        \"lumber\": \"WOOD\",\r\n        \"plywood\": \"WOOD\",\r\n        \"pine\": \"WOOD\",\r\n        \"aluminium\": \"STEEL\",\r\n        \"steel\": \"STEEL\",\r\n        \"metal\": \"STEEL\",\r\n        \"iron\": \"STEEL\",\r\n        \"brick\": \"MASONRY\",\r\n        \"masonry\": \"MASONRY\",\r\n        \"concrete\": \"CONCRETE\",\r\n        \"rock wool\": \"FLEXIBLE INSULATION\",\r\n        \"glass wool\": \"FLEXIBLE INSULATION\",\r\n        \"flexible insulation\": \"FLEXIBLE INSULATION\",\r\n        \"rigid insulation\": \"RIGID INSULATION\",\r\n        \"gypsum\": \"GYPSUM\"\r\n        # Add more keywords and categories as needed\r\n    }\r\n\r\n\r\n    for keyword, category in keywords.items():\r\n        if keyword in input_string:\r\n            return category\r\n\r\n    # If no keyword matches, return None or a default category\r\n    return None\r\n\r\ndef transform_strings(input_lists):\r\n    transformed_lists = []\r\n    for inner_list in input_lists:\r\n        transformed_inner_list = []\r\n        for string in inner_list:\r\n            category = categorize_string(string)\r\n            if category:\r\n                transformed_inner_list.append(category)\r\n            else:\r\n                # Handle cases where no category matches\r\n                transformed_inner_list.append(\"OTHER\")  # Or any default category you prefer\r\n        transformed_lists.append(transformed_inner_list)\r\n    return transformed_lists\r\n\r\ntransformed_lists = transform_strings(input_lists)\r\nOUT = transformed_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "55c5a1fd2a474c3a8474ab5d8d8a8690",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "aa61a60969694ed1b8bed0ba1ee268a6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dacfda3598204beda18899f95bd5a0af",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nwords_lists = IN[0]\r\nnumbers_lists = IN[1]\r\n           \r\n\r\ndef combine_lists(words_lists, numbers_lists):\r\n    combined_lists = []\r\n    for words, numbers in zip(words_lists, numbers_lists):\r\n        combined_inner_list = []\r\n        for word, number in zip(words, numbers):\r\n            combined_inner_list.append(f\"{word} - {number}\")\r\n        combined_lists.append(combined_inner_list)\r\n    return combined_lists\r\n\r\ncombined_lists = combine_lists(words_lists, numbers_lists)\r\n\r\nOUT = combined_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "88f0fa71830944cc95eb553dd98e6294",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "fc18a772fb5442938b2ae4ed1fe8b9a0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f85541cba4c3492da4484f82a70d5691",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a22175edc98d47deba2ea2e7f88730b4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ninput_lists = IN[0]\r\n               \r\ndef remove_names_with_other(names_lists):\r\n    cleaned_lists = []\r\n    for inner_list in names_lists:\r\n        cleaned_inner_list = [name for name in inner_list if \"OTHER\" not in name]\r\n        cleaned_lists.append(cleaned_inner_list)\r\n    return cleaned_lists\r\n\r\ncleaned_lists = remove_names_with_other(input_lists)\r\nOUT = cleaned_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "931bc355c2c448c18ef78b2b922682ea",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "74d3d4e5117449a6ab93100f5c9fd237",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97d03041afd0459dbd1a51699fe75a0b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ninput_lists = IN[0]\r\n\r\ndef transform_name(name):\r\n    name_parts = name.split(\" - \")\r\n    category = name_parts[0]\r\n    number = float(name_parts[1])\r\n\r\n    if category == \"WOOD\":\r\n        if 0 <= number < 30:\r\n            return \"Wooden plate - Floor - 22\"\r\n        elif 30 <= number < 60:\r\n            return \"Wooden plate - Floor - 50\"\r\n        elif 200 <= number < 250:\r\n            return \"Wooden beams - Floor - 225\" \r\n    elif category == \"STEEL\":\r\n        if 0 <= number < 10:\r\n            return \"Steel plate - Floor - 1\"\r\n        elif 250 <= number < 360:\r\n            return \"Steel beams - Floor - 300\"\r\n    elif category == \"CONCRETE\":\r\n        if 40 <= number < 60:\r\n            return \"Concrete - Floor - 50\" \r\n        elif 140 <= number < 165:\r\n            return \"Concrete - Floor - 150\"   \r\n        elif 165 <= number < 190:\r\n            return \"Concrete - Floor - 180\" \r\n        elif 190 <= number < 210:\r\n            return \"Concrete - Floor - 200\"   \r\n        elif 210 <= number < 235:\r\n            return \"Concrete - Floor - 220\"\r\n        elif 235 <= number < 275:\r\n            return \"Concrete - Floor - 250\"\r\n        elif 275 <= number < 325:\r\n            return \"Concrete - Floor - 300\"\r\n        elif 325 <= number < 375:\r\n            return \"Concrete - Floor - 350\"\r\n    elif category == \"RIGID INSULATION\":\r\n        if 20 <= number < 40:\r\n            return \"Rigid insulation - Floor - 30\"\r\n        elif 40 <= number < 60:\r\n            return \"Rigid insulation - Floor - 50\"\r\n        elif 100 <= number < 140:\r\n            return \"Rigid insulation - Floor - 120\"            \r\n    elif category == \"FLEXIBLE INSULATION\":\r\n        if 20 <= number < 40:\r\n            return \"Flexible insulation - Floor - 30\"        \r\n    elif category == \"SCREED\":\r\n        if 40 <= number < 60:\r\n            return \"Screed - Floor - 50\"\r\n    elif category == \"HCS\":\r\n        if 100 <= number < 135:\r\n            return \"HCS - Floor - 120\"\r\n        elif 135 <= number < 158:\r\n            return \"HCS - Floor - 150\"\r\n        elif 158 <= number < 183:\r\n            return \"HCS - Floor - 165\"\r\n        elif 183 <= number < 233:\r\n            return \"HCS - Floor - 200\"\r\n        elif 233 <= number < 300:\r\n            return \"HCS - Floor - 265\"\r\n    elif category == \"CLT\":\r\n        if 50 <= number < 70:\r\n            return \"CLT - Floor - 60\"\r\n        elif 70 <= number < 90:\r\n            return \"CLT - Floor - 80\"\r\n        elif 90 <= number < 110:\r\n            return \"CLT - Floor - 100\"\r\n        elif 110 <= number < 130:\r\n            return \"CLT - Floor - 120\"\r\n        elif 130 <= number < 150:\r\n            return \"CLT - Floor - 140\"\r\n        elif 150 <= number < 170:\r\n            return \"CLT - Floor - 160\"\r\n        elif 170 <= number < 190:\r\n            return \"CLT - Floor - 180\"\r\n        elif 190 <= number < 210:\r\n            return \"CLT - Floor - 200\"\r\n        elif 210 <= number < 230:\r\n            return \"CLT - Floor - 220\"\r\n        elif 230 <= number < 250:\r\n            return \"CLT - Floor - 240\"\r\n        elif 250 <= number < 270:\r\n            return \"CLT - Floor - 260\"\r\n        elif 270 <= number < 290:\r\n            return \"CLT - Floor - 280\"\r\n        elif 290 <= number < 310:\r\n            return \"CLT - Floor - 300\"\r\n        elif 310 <= number < 330:\r\n            return \"CLT - Floor - 320\"\r\n    elif category == \"GYPSUM\":\r\n        if 10 <= number < 15:\r\n            return \"Gypsum - Floor - 12\"\r\n        # Add more range checks and transformations as needed\r\n\r\n    # If the category or number range doesn't match, return the original name\r\n    return name\r\n\r\ndef transform_names_in_list_of_lists(names_lists):\r\n    transformed_lists = []\r\n    for inner_list in names_lists:\r\n        transformed_names = []\r\n        for name in inner_list:\r\n            transformed_names.append(transform_name(name))\r\n        transformed_lists.append(transformed_names)\r\n    return transformed_lists\r\n\r\n# Example usage:\r\ntransformed_lists = transform_names_in_list_of_lists(input_lists)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = transformed_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "6f4c62ff056d49c0937963fd3fd9a0e3",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "9cf0e2b2dd654d6691ae01610fd20bf7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27cc0f4a9f4541d788faa6efb6fd1782",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ninput_lists = IN[0]\r\n               \r\ndef remove_names_with_other(names_lists):\r\n    cleaned_lists = []\r\n    for inner_list in names_lists:\r\n        cleaned_inner_list = [name for name in inner_list if \"OTHER\" not in name]\r\n        cleaned_lists.append(cleaned_inner_list)\r\n    return cleaned_lists\r\n\r\n# Example usage:\r\ncleaned_lists = remove_names_with_other(input_lists)\r\n# Assign your output to the OUT variable.\r\nOUT = cleaned_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "7ad21306b8574aecbe348ba16898a334",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "02c0c29d18d145918e72c5919dae776b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd26a0b50b8649428ef0ceae6e7e5c17",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ninput_lists = IN[0]\r\n\r\ndef transform_name(name):\r\n    name_parts = name.split(\" - \")\r\n    category = name_parts[0]\r\n    number = float(name_parts[1])\r\n\r\n    if category == \"CONCRETE\":\r\n        if 140 <= number < 160:\r\n            return \"Concrete - Wall - 150\"\r\n        elif 160 <= number < 200:\r\n            return \"Concrete - Wall - 175\"\r\n        elif 200 <= number < 250:\r\n            return \"Concrete - Wall - 220\"\r\n        elif 250 <= number < 350:\r\n            return \"Concrete - Wall - 300\"\r\n    elif category == \"MASONRY\":\r\n        if 75 <= number < 110:\r\n            return \"Masonry - Wall - 88\"\r\n        elif 175 <= number < 250:\r\n            return \"Masonry - Wall - 188\"\r\n        elif 250 <= number < 350:\r\n            return \"Masonry - Wall - 300\"\r\n    elif category == \"RIGID INSULATION\":\r\n        if 60 <= number < 90:\r\n            return \"Rigid insulation - Wall - 80\"\r\n        elif 90 <= number < 110:\r\n            return \"Rigid insulation - Wall - 100\"\r\n    elif category == \"GYPSUM\":\r\n        if 10 <= number < 15:\r\n            return \"Gypsum - Wall - 12\"\r\n        # Add more range checks and transformations as needed\r\n\r\n    # If the category or number range doesn't match, return the original name\r\n    return name\r\n\r\ndef transform_names_in_list_of_lists(names_lists):\r\n    transformed_lists = []\r\n    for inner_list in names_lists:\r\n        transformed_names = []\r\n        for name in inner_list:\r\n            transformed_names.append(transform_name(name))\r\n        transformed_lists.append(transformed_names)\r\n    return transformed_lists\r\n\r\n# Example usage:\r\ntransformed_lists = transform_names_in_list_of_lists(input_lists)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = transformed_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "087bb1e2c69246bcb92818ae458a89a2",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "86de79244f7247a38516fea4785389b6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b294c78a7ea74de78e3c2358e55cb212",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nwords_lists = IN[0]\r\nnumbers_lists = IN[1]\r\n           \r\n\r\ndef combine_lists(words_lists, numbers_lists):\r\n    combined_lists = []\r\n    for words, numbers in zip(words_lists, numbers_lists):\r\n        combined_inner_list = []\r\n        for word, number in zip(words, numbers):\r\n            combined_inner_list.append(f\"{word} - {number}\")\r\n        combined_lists.append(combined_inner_list)\r\n    return combined_lists\r\n\r\n# Example usage:\r\ncombined_lists = combine_lists(words_lists, numbers_lists)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = combined_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "10cc29e69b374d3b916e9ded897dd23f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "aa872138ebe14ded9f454afd703e481b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d18a4072cdfc4949af62eb2cab5aa82a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e515c2acd974163a509974ba30f5d72",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3df28d2cc6b544e083d060d8f8d046a3",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "722cfd01ce3c44b9a49f6ffe4c95d8fb",
          "Name": "t1",
          "Description": "t1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23211c7c3282461aa063dd2aa3188481",
          "Name": "",
          "Description": "parameter1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d3cb05cd1b84a0180d73898c7343d8c",
          "Name": "",
          "Description": "parameter2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c60f7dfc4cd4a65a4e8ece0d6eeeee3",
          "Name": "",
          "Description": "parameter3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "parameter1 = Parameter.ParameterByName(t1, \"IfcGUID\");\nparameter2 = Parameter.ParameterByName(t1, \"Family and Type\");\nparameter3 = Parameter.ParameterByName(t1, \"Area\");"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "fa4ef2679f11478593ec27c0b0ef9461",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "b7fc14514b09459996f3228e262ae181",
          "Name": "parameter1",
          "Description": "parameter1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e9c3c17177143198fd879ae6b71c8d2",
          "Name": "parameter2",
          "Description": "parameter2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "190eceaaad164b43bfa4ce6cbe50b541",
          "Name": "parameter3",
          "Description": "parameter3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f2d4ac6ba44436d835c2a016144a81b",
          "Name": "",
          "Description": "t1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ef18fa195f549028292983b122c773e",
          "Name": "",
          "Description": "t2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8f0fbbe1f5d42bb8ddc62651a1f7bbe",
          "Name": "",
          "Description": "t4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "t1 = Parameter.Value(parameter1);\nt2 = Parameter.Value(parameter2);\nt4 = Parameter.Value(parameter3);"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b579bf5b27024521b2cf90a412388aa2",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "496bdf5dbcb94e71a40e3b6e20f5596d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "true;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "088ae7061e96410baca2a18a4ba90836",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0d010a29d7174c5b939f7a5db39e1ec9",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ef7882caff74ef0be40a0b6e220de24",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2fbacf3fb3194bd5a63fa74a450f6253",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f1f0ed9c6bb1461297ff13cf8f4432ab",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ed83efe951e4c22b2fa64326be926c0",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "10aaed81308f4b5ea5eeb258c2579fe1",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc237979884f46afa7cde92646315239",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4536725ab746458494a80425a0b6131d",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "158f018348aa4fd7b432fa4209b11d1e",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30130e1c5ca54ccf96392e9299a54e9b",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4482e0c985864d11be59778fbc0495b0",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "72c5cad1fefc492293f312d0f43c389b",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fcac8d3cba1940269f128bd5486d9a5f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0;"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "27a8d8b4e0594a72bb1211a112f6f7b1",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "4f0c7bfe35784e3ab99e2f791c9a4d45",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90f7ee40996b4ee6bab0481645d990b5",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "236a524804cd4762a807f100e6c83645",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "975f769f14514a64b970dd3433a963dd",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb7dbc9bc84a444ebc50dbea640d07ae",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8667f90511aa47729995f42b6ecec93a",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac7c6d428abc4e19ae787b2296e9e8ed",
          "Name": "item6",
          "Description": "Item Index #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99f20ec0a8fa4b80ba0bee94973dde5f",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "bda07696a17949ee926ec6e1fad5f086",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dbb708c2836944b3b650d60e6e8970e4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "42f77b38a5c548c085fb9a5cb3eb9456",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a3ec03d1f5a44472bfff1cdb6a9f0708",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "Template"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "Id": "ce6c483604b54a27895ab91ae2f68d66",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "47bebec519cb43faa02f2455603e5b82",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system and returns its file path",
      "HintPath": "C:\\Users\\runan\\Documents\\Masterproef\\Revit\\Excel Proof of concept_masonry concrete.xlsx",
      "InputValue": ".\\Excel Proof of concept_masonry concrete.xlsx"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "5608cb51ead74ac6a8d65528d221b3a5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e2cd55e4e0d546d884316013b7a9610e",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a56a7b5f86947a1b2497ea35a6fa934",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "257aa00d924e40feb251d4b1869c75a7",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7f18289929c4b718a53efa8a5b9e8bb",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cdd6990f1b6e4ec78c333bab54023207",
          "Name": "list4",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8fed9b28e5284ea489cd0c8011b0f319",
          "Name": "list5",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bea3db8d01d47779c5fa75ac70be2b2",
          "Name": "list6",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77ae0893b9da44d1a38ce7dcbaaa90ca",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "17ed9339974a4e72af05b4e91bf29e51",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "66181bb5290c456783c5e8fdec5d5d46",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "794545cda55f485ebfda3fecb8165a35",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8161da4c9c8c41499b8c96f38fb8a5bd",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "155c1c924919498dad828cfd5f2b3d14",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b4b7b31ba56435582d02fcf0c147700",
          "Name": "list4",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f242ff2d84542619e58942650923334",
          "Name": "list5",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "207656a274d042fe8ae55fe8765eec48",
          "Name": "list6",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1a28da287fb4695af58323fa6ba7981",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "aa7d57a1a901450aa43702c9d0d41238",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4f293d3bf98f4eed99ac533d67bb64ad",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e279045b02e4ed8889d9d834a427bca",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0249d378e3134c529577ca42963f5130",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcdeb5d7666f478f802d94d4fc594ce0",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5eaa295cc214d6e80c5246ec21e6c83",
          "Name": "list4",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57dc6a2297114ed586621948f3960565",
          "Name": "list5",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65d97881128b41fd8ffa2e93ccf37fa1",
          "Name": "list6",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3501ee897f714eea9d6843a0d64ae51f",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "5a25a2191cbf4c7b93e5b01836374649",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a1f8fbb12f8f4c0dbacde9b7f88a62ec",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45d305f09f67439d9ae3421cadfe641c",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89678d1d974f46d998bfb1c1670a653d",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b38710b4a0948339431d1f0bea183a9",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d51892cd3334a05b5ee968afafec1f8",
          "Name": "list4",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4619a1684f1a4300a41bf1a8ab964141",
          "Name": "list5",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db28ee14215140058710c534833d28f3",
          "Name": "list6",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a94c6afffb8443918e31b841618b6e9b",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "2be3422d122044cb8ddb0e96cec10275",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ef35d95309c14d45a9d9b422ddc08382",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "426d01a0b8e0464cad981cc941f9a0a7",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3b8ecdaf831f487b8c8f86ae5d410bcd",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f677f6e86bd4348b6593ccceef14565",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f8d9ac071a4347b086bf8c64e71be565",
          "Name": "list4",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99056c8923dc4f4a8c5e77d531c3cc9d",
          "Name": "list5",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "302eb7da78cc482d99cfeb92c74de6dc",
          "Name": "list6",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55fc6093d95d47b4ab209d1dca7dfa19",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "828d07cc5ae14fe6bcc0c28b6f5ee72f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "eb493d4e384c477198146d9f624d7217",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "466a8399a4144ae18369171759015518",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a13edef2ffb644adb805c1910b14aff5",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c02e579ad7d43489db71d9c6d70405f",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81d07b3e483141b783951d21bfe932c4",
          "Name": "list4",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74c542dcef424ab29624c6f645fbc064",
          "Name": "list5",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f43bc3b25316441498ac2ff8c7915737",
          "Name": "list6",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "735efaaf20ee4dfc95c1e5b9991faf0b",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "7505a4f3a33b4c128f61eab8cc063da9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a82081374928427cb733e41389cd26bf",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f28499fc94c4e629794008eb42040dc",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d25834b72fcd43acb9c7957cd08322a9",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7dbf6de7424444488db6d0ce0d3b0443",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "682c9c5593214827900e72b8ec3a9061",
          "Name": "list4",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21b13105e8f24fc9aaf20b9b0f4942ea",
          "Name": "list5",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dceb26fb856448c69f598a82ae11f45a",
          "Name": "list6",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3786d11fbc2c42cdb59997617e6257b1",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "e84928e55c34410ea2e680a365cffb53",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "18f84385c2604d109a88b15b899413e3",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "TOTEM element type name"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5190b62c61c942fc810ab3f05891b703",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e95542850f354197a9f5e6c9d7715972",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "885f46175b15450babe5d55daa45972c",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5664107981e14c48a67bd7aa7688ca69",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "3100f7a31cbb47a3ae8b103c36a3cc5f",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7fcdc9f306534e968f6ab8399601a35c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "Name of the element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "a83877eadb274bf691e09f3fc4a61e43",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "add96527cbb14a8fa1a88f94ed8f7b92",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "Unique id"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "ec09e5d8f8344cc09c0fb2b1b1243ae0",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2db2f4c54af042978bc5a7fe1063a625",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "Number"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "df07be3636254d47bd0d13f279b30b56",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d70b3f1161b84b13b607704280125961",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "Surface"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "5dbfed54f9c142da94db28def06eb3a5",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0ace266b170a4bbda39d7521456253fc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "Length"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "5313b933b62d41d49b815d7f12f0e416",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "04bc103f419c418c9e0ccc922b804b58",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "TOTEM element category"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e63feaa12e974736912340647bb8385f",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "6ffd254c03734fb1a917aadf1c28b55f",
          "Name": "t1",
          "Description": "t1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "874f6ca5975b4141aef7582f75644aa3",
          "Name": "",
          "Description": "parameter1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa4c535614bc4f7b990888260b849f65",
          "Name": "",
          "Description": "parameter2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a6e7ec6bdfd24221b163f9eb56931ed1",
          "Name": "",
          "Description": "parameter3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "parameter1 = Parameter.ParameterByName(t1, \"IfcGUID\");\nparameter2 = Parameter.ParameterByName(t1, \"Family and Type\");\nparameter3 = Parameter.ParameterByName(t1, \"Area\");"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "4ab78c5bce36424cbba618c7e8104d0e",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "e2455d39443d4edd958347fcd2fc7841",
          "Name": "parameter1",
          "Description": "parameter1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7987ba8ab4ae4fafbd5a06daa15de7f0",
          "Name": "parameter2",
          "Description": "parameter2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52ee6d41214f4d529953201f5077342d",
          "Name": "parameter3",
          "Description": "parameter3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc76e6dde5744b62b14bcc482642f282",
          "Name": "",
          "Description": "t1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be7e85ce7342410da3ea2e335f37d6ea",
          "Name": "",
          "Description": "t2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bbe2a6c11b8b435083154cb70343d841",
          "Name": "",
          "Description": "t4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "t1 = Parameter.Value(parameter1);\nt2 = Parameter.Value(parameter2);\nt4 = Parameter.Value(parameter3);"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "1dc7ff49935c4508bc9ee8698f55f10a",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f1351a41053947a38a7ab7fd8be2a9ca",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"1\";"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nlist_of_lists = IN[0]\r\n\r\ndef get_inner_list_lengths(list_of_lists):\r\n    lengths = [len(inner_list) for inner_list in list_of_lists]\r\n    return lengths\r\n\r\n# Example usage:\r\nlengths = get_inner_list_lengths(list_of_lists)\r\n# Assign your output to the OUT variable.\r\nOUT = lengths",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ffe7e1fbdd6240a1a47d6c7665ebcbf6",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "7a3a3664cf1e45d0b10f5454aef7d833",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d23f5e86e2754b49a34735995152bef9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "704fde05c8b747c2a44149441944e111",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "deeeccde59964521964b1625dae81093",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "777d58aa0f7b495da23e977201ea481d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94ca09bb7c2d46058ffc9af6f41d836f",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nlist_of_lists = IN[0]\r\n\r\ndef get_inner_list_lengths(list_of_lists):\r\n    lengths = [len(inner_list) for inner_list in list_of_lists]\r\n    return lengths\r\n\r\n# Example usage:\r\nlengths = get_inner_list_lengths(list_of_lists)\r\n# Assign your output to the OUT variable.\r\nOUT = lengths",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ac7ff8e2e7784eebb948b65364980e02",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "21f43bba84a94c38b5a606ef920766d2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f83a74d4a6647258caad261f9502551",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "07b0d3804cd44e92997e1a0bc409ed4d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "04a3fabf8a4d4043b098f6209f4b55fd",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a066b5c5a7f24ac78997ec5a7eaef009",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc213da47ac7462a9cc6d7658aafd513",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "69827da524eb49069455c3509d0e004b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "04e07b4b348e443aa26dd7ce8015ebfc",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a754f9b7574642228cdc0f047e4a246e",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "84dcdbf82ca24e93889700fd314bb104",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c776cd2fd22648a9b6f5168cf8874c45",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "77764e0f0f4b4935ab73c2736e0d01f5",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b72af982b934c30a95df3a04745d51d",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5fa69358138240a0a270aec525bc6876",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "1f7434e1253442d5b0770fab3457f64d",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "784d52d7cf7c4731b5cc1ba4270201e2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"0\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "57a5609ed5c341d387ab3cd720738564",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "491bd880c4ad414e88cb8eb710a4ffc9",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00cffa79fcab4d549038c991d7b54542",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34aafbe1e745498cae5f581ae890f98e",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e2f8fda0a5fc4afa8dba7e6511a740a7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1b10763092334e67bb926261146d7087",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3ddb8dffdce4041b5f27f87294abeac",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "692a8729cb8b48f08240d3ed7e7d18e1",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "416184afdd0e4a7eb511dc64bcb5bb43",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "de4cb520c9d8470d9e318f20ad59e9b7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "Storey floor"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "fffa4f3e28ea42938ce27f9deefeed02",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cee4c88bdb8b4b1e950fef771f12ea38",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "External wall"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nnames = IN[0]\r\nnumbers = IN[1]\r\n\r\ndef alter_names(names, numbers):\r\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\r\n    altered_names = []\r\n    for name, number in zip(names, numbers):\r\n        for i in range(1, number + 1):\r\n            altered_names.append(name + alphabet[i - 1])\r\n    return altered_names\r\n\r\n# Example usage:\r\nresult = alter_names(names, numbers)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "914ad6fc76c64fc2bd5e1c2a37decea2",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "9765943f068a4eb2972917ee5c601377",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0cafc4f38674921bdd03507f12287e2",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1c50fbce8f8421f88714112c5d333ac",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nnames = IN[0]\r\nnumbers = IN[1]\r\n\r\ndef alter_names(names, numbers):\r\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\r\n    altered_names = []\r\n    for name, number in zip(names, numbers):\r\n        for i in range(1, number + 1):\r\n            altered_names.append(name + alphabet[i - 1])\r\n    return altered_names\r\n\r\n# Example usage:\r\nresult = alter_names(names, numbers)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "c5c87a3b15c042398b825cc133ce3714",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "1ac391f40f4e48d398484e5b1448c821",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e42ec12f48054bb8973c99402c9ce5f5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb3637a584f74f4d92c56e89f512293a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "bb05da2aaf72482ab2f7293a742a1f2d",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "9a0bb8a5550f4ca2b42ffc068733f6c3",
          "Name": "t1",
          "Description": "t1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "96857c8febda4507b7e0bebf3a0e907e",
          "Name": "",
          "Description": "parameter1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15e84f8bb8ce497382d85e36f17c4e90",
          "Name": "",
          "Description": "parameter2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9377b48b48814e3bafeaf1642ff804e0",
          "Name": "",
          "Description": "num1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d915315f93664383ac20f59586f59290",
          "Name": "",
          "Description": "t2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7de39594e4c74761968bb00230756c0c",
          "Name": "",
          "Description": "t3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5bb3b1ca2be14c33893939d03c642381",
          "Name": "",
          "Description": "parameter3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4754f4e48d4f4c1db1bce694f5973373",
          "Name": "",
          "Description": "parameter4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dbac25c052a147e1a87693dedf18e626",
          "Name": "",
          "Description": "parameter5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "parameter1 = Parameter.ParameterByName(t1, \"IfcGUID\");\nparameter2 = Parameter.ParameterByName(t1, \"Family and Type\");\nnum1 = List.Count(t1);\nt2 = List.Cycle(\"Column\", num1);\nt3 = List.Cycle(\"0\", num1);\nparameter3 = Parameter.ParameterByName(t1, \"Cut Length\");\nparameter4 = Parameter.ParameterByName(t1, \"Structural Material\");\nparameter5 = Parameter.ParameterByName(t1, \"Volume\");"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0f727c362c6242f482c5168d1becdc2f",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "f12be7ea5bdb4884849fd31bbd4d938f",
          "Name": "parameter1",
          "Description": "parameter1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fcf76d56b574209a37faf5d56317cb2",
          "Name": "parameter2",
          "Description": "parameter2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f53a5fc7d54440fba30e64c1d308a2fa",
          "Name": "parameter3",
          "Description": "parameter3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b79cf93a9dc4a8db2c98336cb2e2ac2",
          "Name": "parameter4",
          "Description": "parameter4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bda411e45abc42d1abb6b6e94a6b2321",
          "Name": "parameter5",
          "Description": "parameter5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39745c7eafea485bbc1ea2d0cd6a0fa2",
          "Name": "",
          "Description": "t1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "800ce02617c94db580e5082167a902c3",
          "Name": "",
          "Description": "t2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c01970a67e484e7e8cc7f795e93a1fd3",
          "Name": "",
          "Description": "t3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "297935e15f774eecadcd027c0ff388cf",
          "Name": "",
          "Description": "t4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3c1940df633453eaff32562fdcb94c7",
          "Name": "",
          "Description": "t5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2fd3f4c0d4a4e38bf4a7fea50051af3",
          "Name": "",
          "Description": "t6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81178fc943564c1583382568a7e59cbd",
          "Name": "",
          "Description": "t7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "t1 = Parameter.Value(parameter1);\nt2 = Parameter.Value(parameter2);\nt3 = Parameter.Value(parameter3);\nt4 = 1000;\nt5 = t3 / t4;\nt6 = Parameter.Value(parameter4);\nt7 = Parameter.Value(parameter5);"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "6482684b313d4264b1cc702a2d5710d8",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "f4f1b4c51aa54ef99f7add5578fa82e2",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ed6e4dbbd094427beb3376c066528a8",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 592,
      "SelectedString": "OST_StructuralColumns",
      "Id": "b4dd0b7d3e5a4bd39643882efca52afb",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7da06384f2114bd08794b1da7da49be4",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 620,
      "SelectedString": "OST_StructuralFraming",
      "Id": "78d20b6b3e2d4fac8716431e2b5fbf79",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "20f191d3a7944a42ae4f0e595d1001b4",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "7b3bde0c94624f5b94bc5b141f386322",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "2d0e85b3b2054f20aac8d7f22d8e2d17",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a58e826bc4a54ee69f5f7deaf45d6d1f",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e1ed349ab790433a9b6d6f63a337b1f8",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "661b5f0867ed40c893f01ffab4c7f584",
          "Name": "t1",
          "Description": "t1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa778b9b70f7458ab28bafa467157729",
          "Name": "",
          "Description": "parameter1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63f08792eec64b66afccd7cfe72344ff",
          "Name": "",
          "Description": "parameter2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20916a2f6ad14eb49a107562c739586d",
          "Name": "",
          "Description": "parameter3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "217389dcd9c54507a0d9c8211c951483",
          "Name": "",
          "Description": "num1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3921b49e17d24d96889ed0daa4bf11ca",
          "Name": "",
          "Description": "t2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab5093c4fafe4ad595674ee6ed16be25",
          "Name": "",
          "Description": "t3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcd0af535d014194a4a70ff69ca846bd",
          "Name": "",
          "Description": "parameter4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8cb4398a4638467c85bcd259d8b3c3d5",
          "Name": "",
          "Description": "parameter5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "parameter1 = Parameter.ParameterByName(t1, \"IfcGUID\");\nparameter2 = Parameter.ParameterByName(t1, \"Family and Type\");\nparameter3 = Parameter.ParameterByName(t1, \"Cut Length\");\nnum1 = List.Count(t1);\nt2 = List.Cycle(\"Beam\", num1);\nt3 = List.Cycle(\"0\", num1);\nparameter4 = Parameter.ParameterByName(t1, \"Structural Material\");\nparameter5 = Parameter.ParameterByName(t1, \"Volume\");"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ac6933419c1d4682836c24c45cd3a799",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "b744a752a5764734ad1146b476d0000f",
          "Name": "parameter1",
          "Description": "parameter1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc707223a0a24328acf1d69d9e14ada8",
          "Name": "parameter2",
          "Description": "parameter2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "831cb10d52de40aab19a25281cf79555",
          "Name": "parameter3",
          "Description": "parameter3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63dceede743e4ced94478b22199f9101",
          "Name": "parameter4",
          "Description": "parameter4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca2103fbb05a4727808006bb9dd4773d",
          "Name": "parameter5",
          "Description": "parameter5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b8b2d39343f4148bfe7a443b5d37d08",
          "Name": "",
          "Description": "t1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "862f19d6904648d28770e3cd285f8d9a",
          "Name": "",
          "Description": "t2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "323852c7366741baa6841c960b66456d",
          "Name": "",
          "Description": "t3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb53cfaa64d44812bad514c0d174ff63",
          "Name": "",
          "Description": "t4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a9795d9977e4be5ace3802bdcd2aff2",
          "Name": "",
          "Description": "t5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e515ee163839419d936e2904833b9037",
          "Name": "",
          "Description": "t6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5bf533d6984c4280ad1ab3c0aaeea357",
          "Name": "",
          "Description": "t7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "t1 = Parameter.Value(parameter1);\nt2 = Parameter.Value(parameter2);\nt3 = 1000;\nt4 = t2 / t3;\nt5 = Parameter.Value(parameter3);\nt6 = Parameter.Value(parameter4);\nt7 = Parameter.Value(parameter5);"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef duplicate_names(names, values):\r\n    result = []\r\n    for name, sublist in zip(names, values):\r\n        result.extend([name] * len(sublist))\r\n    return result\r\n\r\n# Example input\r\nnames = IN[0]\r\nvalues = IN[1]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = duplicate_names(names, values)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "1ae00912519e4fae8325e1a6031ff35e",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "71c54b360eda40a6be5b17fc534663ac",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2f9319574e64cf680a40c8f91d8b128",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d31e1ae7c51444f6b40909c3b85afabb",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef duplicate_names(names, values):\r\n    result = []\r\n    for name, sublist in zip(names, values):\r\n        result.extend([name] * len(sublist))\r\n    return result\r\n\r\n# Example input\r\nnames = IN[0]\r\nvalues = IN[1]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = duplicate_names(names, values)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "cc8217525f4a46dbaecc229b0243a345",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "164a268282f74c088c8abb0184581718",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7105b4d4020e433998a0c8e356e680bc",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25cabde6782744eaa53f7727540c9696",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef sum_numbers(numbers):\r\n    return sum(numbers)\r\n\r\n# Example input\r\nnumbers = IN[0]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = sum_numbers(numbers)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "fe577cfd310142d98ac81272779f6234",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "ae4d2859364d4e5087e66491ea8df613",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "deb80e1729a04e1495971043197a7a97",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef sum_numbers(numbers):\r\n    return sum(numbers)\r\n\r\n# Example input\r\nnumbers = IN[0]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = sum_numbers(numbers)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "6d721c8d75f145a598700f6af7342c01",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "cce42e911f294d0ab140a1d6b83474dd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c930442174c04674b73e5ade76c43dff",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef duplicate_names(names, values):\r\n    result = []\r\n    for name, sublist in zip(names, values):\r\n        result.extend([name] * len(sublist))\r\n    return result\r\n\r\n# Example input\r\nnames = IN[0]\r\nvalues = IN[1]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = duplicate_names(names, values)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "79bba4d65c754bdfab6e8669fd92ea7d",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "acfcc54c74b34556829b39c9a9f6bea8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d400307699a4b708110f8984feb8cf9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82174ec7aebd47d7972769025d3d9e24",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef duplicate_names(names, values):\r\n    result = []\r\n    for name, sublist in zip(names, values):\r\n        result.extend([name] * len(sublist))\r\n    return result\r\n\r\n# Example input\r\nnames = IN[0]\r\nvalues = IN[1]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = duplicate_names(names, values)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "3837f707df6c405099d90d9f5bbd989e",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "dac8e9344d9341fba24999ac54bff22c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6263bec9e5624205bd7856ec30e555d5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "96dc621563884d96abeb5b9d02b2d156",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef duplicate_names(names, values):\r\n    result = []\r\n    for name, sublist in zip(names, values):\r\n        result.extend([name] * len(sublist))\r\n    return result\r\n\r\n# Example input\r\nnames = IN[0]\r\nvalues = IN[1]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = duplicate_names(names, values)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "1b5ab5ec7eec4c97bed4da1295b7197d",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "7a2f7bedac6e428b936af27de8f48316",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b73d08e5cf949a7ac001b7b1ba4da5e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2789f1bd8dfc40b8b3c7244ce4c258e2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nnames = IN[0]\r\nnumbers = IN[1]\r\n\r\ndef alter_names(names, numbers):\r\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\r\n    altered_names = []\r\n    for name, number in zip(names, numbers):\r\n        for i in range(1, number + 1):\r\n            altered_names.append(name + alphabet[i - 1])\r\n    return altered_names\r\n\r\n# Example usage:\r\nresult = alter_names(names, numbers)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "43639c70c13540d7a3bd9bb1e64a70dc",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "b63df2addd7646f280bb26578879ff5e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4c8cc06a58d4f739d8e6599de264aa4",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d8a81aa546f4c96baaf636bcea2a506",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef duplicate_names(names, values):\r\n    result = []\r\n    for name, sublist in zip(names, values):\r\n        result.extend([name] * len(sublist))\r\n    return result\r\n\r\n# Example input\r\nnames = IN[0]\r\nvalues = IN[1]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = duplicate_names(names, values)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "c858a6c7a2d043758f653df541b7f54f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "b9425c8cb3f840a6805cd23407ada47d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba4499fb9a7d43478a29bfc201c00f0b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12605238fe574208b215f8eef3f5f6af",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nlist_of_lists = IN[0]\r\n\r\ndef get_inner_list_lengths(list_of_lists):\r\n    lengths = [len(inner_list) for inner_list in list_of_lists]\r\n    return lengths\r\n\r\n# Example usage:\r\nlengths = get_inner_list_lengths(list_of_lists)\r\n# Assign your output to the OUT variable.\r\nOUT = lengths",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "71490e41cc79484ebbae384e74a3186e",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "1f372b1432904ee3bae62d41d01e44b1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8803d1ef0337421ba1d139ce54b20d00",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef sum_numbers(numbers):\r\n    return sum(numbers)\r\n\r\n# Example input\r\nnumbers = IN[0]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = sum_numbers(numbers)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "17c05d244ae347efa353fd96588dcfb3",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "9332704e473347e4948b6e498fc425a2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5711809868d44ff98df98c5d5e3838fc",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3dbaee4f09d24f888a58d423f2dbf237",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "58050bfa88304666a3b1639a841a025f",
          "Name": "parameter1",
          "Description": "parameter1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f10043f235c4c0689d46506925f639f",
          "Name": "parameter2",
          "Description": "parameter2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4afc608a1ea94b0e9be6c7cb444e860f",
          "Name": "parameter3",
          "Description": "parameter3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1db8ddc91d2484ca40388bb3e950349",
          "Name": "",
          "Description": "t1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab660beeff7549c1a81ecc728722cd93",
          "Name": "",
          "Description": "t2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fbb3332ece1a4a4ab2ea5ee10c87f022",
          "Name": "",
          "Description": "t4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "t1 = Parameter.Value(parameter1);\nt2 = Parameter.Value(parameter2);\nt4 = Parameter.Value(parameter3);"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "1e3b5d82-c924-4649-a653-7fa7ead9cd1c",
      "FunctionType": "Graph",
      "Id": "b3d8cf9e75f646469bdc3154df538dc7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b39e407e8b5c41f786e8ddbdbfb3d640",
          "Name": "elementType",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d5f149768534f83aa0c078e5911c4d2",
          "Name": "materials",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf9d7c2d3277435daa509dd8f7a5e719",
          "Name": "functions",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af40552f2b6f4b3b8a2a2418d40d6a89",
          "Name": "widths",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "243183c46fad49d88fa28af83eeb8e17",
          "Name": "isCore",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "275007d3147c47948c310439a2996f46",
          "Name": "wraps",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a534a13bb4e452ba0f951db33c93270",
          "Name": "isVariable",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e727419ae8dd4f64ad49396c20d2a1ec",
          "Name": "isStructuralDeck",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f56850edf9454bb0956b758b33445d53",
          "Name": "layers",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the compound layers of any layered family type (wall types, roof types, floor types etc.)"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "dc1bb84ff612438a90e486a143f3ba38",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "b06ef7b198b14b83af0f0cbc18e63fc6",
          "Name": "t1",
          "Description": "t1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70b1a97a21324bd19d2debb4cc9b8923",
          "Name": "",
          "Description": "parameter1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e23acdb784a74f03a29d7a2a2fa46ee7",
          "Name": "",
          "Description": "parameter2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d8cbedbf8d04660bca8b5837dd24ff9",
          "Name": "",
          "Description": "parameter3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "parameter1 = Parameter.ParameterByName(t1, \"IfcGUID\");\nparameter2 = Parameter.ParameterByName(t1, \"Family and Type\");\nparameter3 = Parameter.ParameterByName(t1, \"Area\");"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 618,
      "SelectedString": "OST_StructuralFoundation",
      "Id": "d88d6b191060473c9b2b2d6795af55b0",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8ddd94b71df14662bb72beb737036dd2",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "3b52460c4d254ad8acf724eaffb1ea81",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "42ec41bffa924c27ad523602a25b2c25",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e356a8000e3740ad8228302563a6aab5",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "031f99e390564be7b354b48fad96f312",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0490c987124c4333afef6b2fd23e4919",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "380d1e593d134848b655186ea01429b9",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "14e30cbd154c4547a4fd38904c35169b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2ccd817db9ff4375828abdddd8a62403",
          "Name": "material",
          "Description": "Revit.Elements.Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f99ca65ff074551a0ec4f849d0e79c7",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Material.Name",
      "Replication": "Auto",
      "Description": "Get Material Name\n\nMaterial.Name: string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ninput_lists = IN[0]\r\n               \r\ndef remove_names_with_other(names_lists):\r\n    cleaned_lists = []\r\n    for inner_list in names_lists:\r\n        cleaned_inner_list = [name for name in inner_list if \"OTHER\" not in name]\r\n        cleaned_lists.append(cleaned_inner_list)\r\n    return cleaned_lists\r\n\r\n# Example usage:\r\ncleaned_lists = remove_names_with_other(input_lists)\r\n# Assign your output to the OUT variable.\r\nOUT = cleaned_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "c3bd046e7427449d92c5192cd558ae09",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "66742c9865a4486b8f21a366937f623e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ffce78cc5fd94be4b9bab156f88a6a21",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nwords_lists = IN[0]\r\nnumbers_lists = IN[1]\r\n           \r\n\r\ndef combine_lists(words_lists, numbers_lists):\r\n    combined_lists = []\r\n    for words, numbers in zip(words_lists, numbers_lists):\r\n        combined_inner_list = []\r\n        for word, number in zip(words, numbers):\r\n            combined_inner_list.append(f\"{word} - {number}\")\r\n        combined_lists.append(combined_inner_list)\r\n    return combined_lists\r\n\r\n# Example usage:\r\ncombined_lists = combine_lists(words_lists, numbers_lists)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = combined_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "7460f07099ac45fbafb219392f01c05f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "3c5074bb4a29465cba27ee3aa26c52db",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06bbae1e61d14a11984fe3cc5aefe2e0",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67fc4ce935af4e23a75c498c62d373df",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "073477b06d7b49fb8ab4844470d542d3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3cdd606922364403949adef2e367aba6",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13816aa9e7754fafbe829360d87dd825",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2653bbb15a7d435d9f4597b4f9e930a3",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2785d5d6e9e4409e8464dc240a3b540a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "71ed4c6c30194e0ab6db101df5f6c896",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7d875fc3e83444da6c10ef28e1f8cd0",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "326838d989cd4f0fa1678ebaecba8164",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "0db6f7f5ed264f0e84c7f6cdff9ed09b",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7746e3d24cdc4b2ba1eae9364c75a144",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "Floor on grade"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d3bee63053dc45ce8211937608af2cce",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "59dc7b0a203a43f284a095dc248fd4c2",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae6d2c3fd55644f1b5f34e245b4d2d51",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b181175aa6a4d01917422a53d59bb22",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "f09e60f1dfca4fcbbd4350fa00974b15",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3e7f6f3223e545f8944bbd1c4edf8b84",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"0\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b76df0a328d34efe936eacdb22298ade",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fdb1582510aa48afac972552669e0bb3",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba6b22a638b847df954fc4dc92c29747",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5519d5a0420d4b468dc4710061f8f7d3",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "1cd376cb528c4e1ba76767575de0d4e5",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0bba07cd9bf143ca83fb84ddcc08fbac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"0\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ce901ea759a14ec985f64f1855dc0bce",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fa608a39a1ff4e328aaf83fa9d783fc1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"1\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "69c8afb0f3f24356ae2b9edc68dd7361",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "40213240e31c4406bf720c2a9aabda18",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"1\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3b7a293910b6471aaeecacf2fa89a84f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f5c305ae57414f63b9ed86a6918aa302",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "287ea668156b4eebb1ae249e4a24f811",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eec4759c087b4ea4b69690a46eb9ec24",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 487,
      "SelectedString": "OST_Roofs",
      "Id": "7175c5b4e07349daaafc281c78ef563a",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "18d7797729094ccb89573b5715f905d1",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "d1f2d0b7273941b1bddaebac51123294",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "7d86d47ec3a04428831e1762cd372a22",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8fc92692570b49b99bfae8f205bb78ba",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "9ded324208b84c4b99428a2b65260f71",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "9dc9dcfde22545bb9128c04de46e9c14",
          "Name": "t1",
          "Description": "t1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6d07fd3dcd04c64a591751a44516f65",
          "Name": "",
          "Description": "parameter1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3584e715bc444210a2cfb80acfd86567",
          "Name": "",
          "Description": "parameter2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3fa2637a0144961a3234c3f62ca28cb",
          "Name": "",
          "Description": "parameter3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "parameter1 = Parameter.ParameterByName(t1, \"IfcGUID\");\nparameter2 = Parameter.ParameterByName(t1, \"Family and Type\");\nparameter3 = Parameter.ParameterByName(t1, \"Area\");"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ff3a3d2ea845449aa067967661f7e457",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "da7ebd93130c46eeae028c1250650141",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1b10bcb7db440d68a2c291d8490c394",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0d28148d9c584220b45ad2f548b07669",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "27e0df6d923a411397da918ba6515b62",
          "Name": "parameter1",
          "Description": "parameter1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4673402fea43485d9e1b54a9b445c22b",
          "Name": "parameter2",
          "Description": "parameter2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a53856c3a2a4dfb9c67c25ace7f9dd4",
          "Name": "parameter3",
          "Description": "parameter3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6baab637c8c6458b96a0b19cff2af5eb",
          "Name": "",
          "Description": "t1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "735026e1229a43a9a27951ab0156386f",
          "Name": "",
          "Description": "t2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dbdc70cb0da54bb3aca2b726ef3933eb",
          "Name": "",
          "Description": "t4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "t1 = Parameter.Value(parameter1);\nt2 = Parameter.Value(parameter2);\nt4 = Parameter.Value(parameter3);"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "1e3b5d82-c924-4649-a653-7fa7ead9cd1c",
      "FunctionType": "Graph",
      "Id": "996460e1f3c9423a857a45d6935c8b6d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "08f6a70988764dc28b5e31ed414fce58",
          "Name": "elementType",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e31dc00a560546c1865e8c016136f2e7",
          "Name": "materials",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bd17127a0a442a1be2be7b4580019a3",
          "Name": "functions",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43dff7833abc4d51a93773a08f83457e",
          "Name": "widths",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "734a58a147e6415aa52e1f2a82691d88",
          "Name": "isCore",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bd0b6aa67ab43b59452654df86aeb67",
          "Name": "wraps",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5bca6bf21aa4140ad12eeb8be219138",
          "Name": "isVariable",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd08a1f682e24540bf1991270bb8b2a5",
          "Name": "isStructuralDeck",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "610ee6f107e540b5846644b492f252a9",
          "Name": "layers",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the compound layers of any layered family type (wall types, roof types, floor types etc.)"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "abdc9d376af44e71a01f13959179288d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4ce460cab9ee48ef8d85492cbdfc442c",
          "Name": "material",
          "Description": "Revit.Elements.Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4697e84ee55943c5be37ce087b8420d7",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Material.Name",
      "Replication": "Auto",
      "Description": "Get Material Name\n\nMaterial.Name: string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nwords_lists = IN[0]\r\nnumbers_lists = IN[1]\r\n           \r\n\r\ndef combine_lists(words_lists, numbers_lists):\r\n    combined_lists = []\r\n    for words, numbers in zip(words_lists, numbers_lists):\r\n        combined_inner_list = []\r\n        for word, number in zip(words, numbers):\r\n            combined_inner_list.append(f\"{word} - {number}\")\r\n        combined_lists.append(combined_inner_list)\r\n    return combined_lists\r\n\r\n# Example usage:\r\ncombined_lists = combine_lists(words_lists, numbers_lists)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = combined_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "36a12f2ec68e4c72a9b94a7a0afd6159",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "bcc0f57592bf400d802b71e8d520c5f9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f8f1f064fc274215b071b6fcae57339b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59adfe2667e34256ba11df767f5e5c5f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef duplicate_names(names, values):\r\n    result = []\r\n    for name, sublist in zip(names, values):\r\n        result.extend([name] * len(sublist))\r\n    return result\r\n\r\n# Example input\r\nnames = IN[0]\r\nvalues = IN[1]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = duplicate_names(names, values)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "c765b218c33c4f979b1575b8ec90c20d",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "8bbb1b9013eb40f69315d60b557665ce",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67ec7fbb33484d4b93ac518d45db5fb7",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aae3cfa4996645008f15422e270252d2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ninput_lists = IN[0]\r\n               \r\ndef remove_names_with_other(names_lists):\r\n    cleaned_lists = []\r\n    for inner_list in names_lists:\r\n        cleaned_inner_list = [name for name in inner_list if \"OTHER\" not in name]\r\n        cleaned_lists.append(cleaned_inner_list)\r\n    return cleaned_lists\r\n\r\n# Example usage:\r\ncleaned_lists = remove_names_with_other(input_lists)\r\n# Assign your output to the OUT variable.\r\nOUT = cleaned_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "98204f8f18da40d6ada73b6441cf2bf0",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c99285c2d1544d9bac9c572fc1a5f723",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a09900e13a54fbcbdbeab43609ddee8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nlist_of_lists = IN[0]\r\n\r\ndef get_inner_list_lengths(list_of_lists):\r\n    lengths = [len(inner_list) for inner_list in list_of_lists]\r\n    return lengths\r\n\r\n# Example usage:\r\nlengths = get_inner_list_lengths(list_of_lists)\r\n# Assign your output to the OUT variable.\r\nOUT = lengths",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "79e3b53ff5b8467abe53b868fa07bd40",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "33b515b781f34b0fb3f790eb4f78698f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2ea90195ea84ac1a5f8974c59d5b4c9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ninput_lists = IN[0]\r\n\r\ndef transform_name(name):\r\n    name_parts = name.split(\" - \")\r\n    category = name_parts[0]\r\n    number = float(name_parts[1])\r\n\r\n    if category == \"WOOD\":\r\n        if 0 <= number < 30:\r\n            return \"Wooden plate - Roof - 18\"\r\n        elif 30 <= number < 60:\r\n            return \"Wooden plate - Roof - 50\"\r\n    if category == \"SCREED\":\r\n        if 40 <= number < 60:\r\n            return \"Screed - Roof - 50\"\r\n    elif category == \"STEEL\":\r\n        if 0 <= number < 10:\r\n            return \"Steel plate - Roof - 1\"\r\n        elif 120 <= number < 150:\r\n            return \"Steel - Roof - 140\"\r\n    elif category == \"CONCRETE\":\r\n        if 40 <= number < 60:\r\n            return \"Concrete - Roof - 50\"\r\n        elif 100 <= number < 160:\r\n            return \"Concrete - Roof - 150\"\r\n        elif 165 <= number < 200:\r\n            return \"Concrete - Roof - 180\" \r\n        elif 200 <= number < 250:\r\n            return \"Concrete - Roof - 220\"  \r\n        elif 250 <= number < 350:\r\n            return \"Concrete - Roof - 300\"\r\n    elif category == \"RIGID INSULATION\":\r\n        if 40 <= number < 75:\r\n            return \"Rigid insulation - Roof - 50\"\r\n        elif 75 <= number < 125:\r\n            return \"Rigid insulation - Roof - 100\"\r\n        elif 125 <= number < 200:\r\n            return \"Rigid insulation - Roof - 150\"\r\n    elif category == \"HCS\":\r\n        if 100 <= number < 135:\r\n            return \"HCS - Roof - 120\"\r\n        elif 135 <= number < 158:\r\n            return \"HCS - Roof - 150\"\r\n        elif 158 <= number < 183:\r\n            return \"HCS - Roof - 165\"\r\n        elif 183 <= number < 233:\r\n            return \"HCS - Roof - 200\"\r\n        elif 233 <= number < 300:\r\n            return \"HCS - Roof - 265\"\r\n    elif category == \"CLT\":\r\n        if 50 <= number < 70:\r\n            return \"CLT - Floor - 60\"\r\n        elif 70 <= number < 90:\r\n            return \"CLT - Floor - 80\"\r\n        elif 90 <= number < 110:\r\n            return \"CLT - Floor - 100\"\r\n        elif 110 <= number < 130:\r\n            return \"CLT - Floor - 120\"\r\n        elif 130 <= number < 150:\r\n            return \"CLT - Floor - 140\"\r\n        elif 150 <= number < 170:\r\n            return \"CLT - Floor - 160\"\r\n        elif 170 <= number < 190:\r\n            return \"CLT - Floor - 180\"\r\n        elif 190 <= number < 210:\r\n            return \"CLT - Floor - 200\"\r\n        elif 210 <= number < 230:\r\n            return \"CLT - Floor - 220\"\r\n        elif 230 <= number < 250:\r\n            return \"CLT - Floor - 240\"\r\n        elif 250 <= number < 270:\r\n            return \"CLT - Floor - 260\"\r\n        elif 270 <= number < 290:\r\n            return \"CLT - Floor - 280\"\r\n        elif 290 <= number < 310:\r\n            return \"CLT - Floor - 300\"\r\n        elif 310 <= number < 330:\r\n            return \"CLT - Floor - 320\"\r\n    elif category == \"GYPSUM\":\r\n        if 10 <= number < 15:\r\n            return \"Gypsum - Roof - 12\"\r\n    elif category == \"BITUMEN\":\r\n        if 5 <= number < 10:\r\n            return \"Bitumen - Roof - 7\"     \r\n        # Add more range checks and transformations as needed\r\n\r\n    # If the category or number range doesn't match, return the original name\r\n    return name\r\n\r\ndef transform_names_in_list_of_lists(names_lists):\r\n    transformed_lists = []\r\n    for inner_list in names_lists:\r\n        transformed_names = []\r\n        for name in inner_list:\r\n            transformed_names.append(transform_name(name))\r\n        transformed_lists.append(transformed_names)\r\n    return transformed_lists\r\n\r\n# Example usage:\r\ntransformed_lists = transform_names_in_list_of_lists(input_lists)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = transformed_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "d9d347a9edb24a88bbbe7ce60e5c4f11",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "85d1a7eeec304f05acb475dc232aea01",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19437d9280e5453aa600b5fcb0cadf3b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nnames = IN[0]\r\nnumbers = IN[1]\r\n\r\ndef alter_names(names, numbers):\r\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\r\n    altered_names = []\r\n    for name, number in zip(names, numbers):\r\n        for i in range(1, number + 1):\r\n            altered_names.append(name + alphabet[i - 1])\r\n    return altered_names\r\n\r\n# Example usage:\r\nresult = alter_names(names, numbers)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "47108b09884c4bbea3da5c20f1aa4a05",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "a6cb841786ea42e8af09b309fc79e46c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79d9def6d7aa4909a5b216f7f7946697",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df91bfac55204ae2aa6c9297b5ae69c3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef duplicate_names(names, values):\r\n    result = []\r\n    for name, sublist in zip(names, values):\r\n        result.extend([name] * len(sublist))\r\n    return result\r\n\r\n# Example input\r\nnames = IN[0]\r\nvalues = IN[1]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = duplicate_names(names, values)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "04462f0bbb7d4402836784f229563ee8",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "7551e29783bb4b8695e1f30124c9f464",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fa9a7a014164f63a2b425439d2b5fe6",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "919217eae1dc4785a5269a306338124e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "bcd27202fe01491d8e0ad5c5ecb4e45f",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2097f3b4a33d435b8291a874e42a9d21",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "Flat roof"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef sum_numbers(numbers):\r\n    return sum(numbers)\r\n\r\n# Example input\r\nnumbers = IN[0]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = sum_numbers(numbers)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "a67d591cd0484471ab6b058ae1b04bc6",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "14f5ca0bcce04d139737b660765b0269",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48534c0083d04a1fb485e99a99d96915",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cf659e4c37d1426cb18736d7b40f993e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "584c6cdb788a4457ada7c7b176363805",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "808977a318884f83b8b3bae768f98f1c",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d443af27905548f8ad3f584e4fdb624c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "cdf3763bd2a24d1087d64c44a54aa0de",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b6007ea2834d44d0b6dd5d314aaccc99",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"0\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "2e8b92074778467a8bbd3f712bbfd9a4",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0064c700a08547f78a028884ae9a4681",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"1\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8c36c72fbc3543389ecf90d7035ad747",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f082a190c71d49aba6f4e51a75a75af9",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b53ef80c5644057be17fe17428ee3e8",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dceb22f332e4427ab7599a5c83be1b2e",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8180696d274d4a93bb3f5b24cce4e770",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c8167f4088af4de3917b1b56419f2594",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4fdb9636ff8b458db9fcdd32a890c21b",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af3d4599302641eba5aa3166dab6b374",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f10c86d2cf434803969a476f23702a38",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "436f67f8896d43ddbdb770deafdae790",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ec3020959454f05ba77200c43b8c728",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d13f0cd45f6641e2b3dfabf36363355f",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nimport math\r\n\r\nlengths = IN[0]\r\n\r\nlengths_rounded = [ round(elem, 2) for elem in lengths ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = lengths_rounded",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "7b4d5388967045d5a9af4506c99adcd6",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "2bd1a0f126b94eecb0ac77c240227e48",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "915d7fd6870d4083a937f2aabdb8c37e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nfrom collections import defaultdict\r\n\r\nbeam_lengths = IN[0]\r\n\r\nbeam_letters = defaultdict(lambda: [])\r\ncurrent_letter = ord('a')\r\n\r\nfor length in beam_lengths:\r\n    length_str = str(length)\r\n    if length_str not in beam_letters:\r\n        beam_letters[length_str] = chr(current_letter)\r\n        current_letter += 1\r\n\r\nassigned_letters = [beam_letters[str(length)] for length in beam_lengths];\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = assigned_letters",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "707d9f63710b4264b8d149c8246f9e4c",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "281f2ed2c63a4454954ef198fdac3ac9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7a63ae19d6a4008877ea5f1830bbed6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "4853de1886ce4cf9a4767e3414027e37",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "e579589e21d7479a8b0deae2f1fc823a",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4697c70a81e94842b4c6a7fd786701fc",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converts an object to a string representation"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "4d214b04ef0947c888281eeb1d049ff0",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "b912792530bb4dbb8744a45c99f1aeba",
          "Name": "combineFunction",
          "Description": "Function to use as combinator",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44717376d0e14e55b5b9dc690cb8567c",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "884ff5c4597845409344a3c14049a5cd",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a59f0040f0d4ef2b2db43ed3e5cbb64",
          "Name": "list",
          "Description": "Combined lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "fdff27a7041441aca41979f03b51ddc1",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ef80de3c7c2d4ad586993390238af930",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": " - "
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "Id": "b359000105c34285bd381ba9596328f0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f0bbd557398643589cb90c9b3b4dca18",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f85cad814a854613b08e57d5d21c26b1",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c8c00d1094148d5b27ce04d3dbf667a",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac62337ecdac4a138f9d2730938d11a7",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nfrom collections import defaultdict\r\n\r\nbeam_lengths = IN[0]\r\n\r\nbeam_letters = defaultdict(lambda: [])\r\ncurrent_letter = ord('a')\r\n\r\nfor length in beam_lengths:\r\n    length_str = str(length)\r\n    if length_str not in beam_letters:\r\n        beam_letters[length_str] = chr(current_letter)\r\n        current_letter += 1\r\n\r\nassigned_letters = [beam_letters[str(length)] for length in beam_lengths];\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = assigned_letters",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "d4c895ebe9ad47b5adea534032a4c0f0",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c40588d22b444c3a81846afc4e00d25b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f71831f298714c258d11fd8f425fdd52",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "034c0bf71fd346fe92a53764635537c6",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "052aa9b96354497e921004080485edc6",
          "Name": "combineFunction",
          "Description": "Function to use as combinator",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "212fb9ac6e77487eab7d703ef84f21ac",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3576b94ecdb41c0acf04c399be9bca2",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8551317d0ac4c0ba099c02f42d753bd",
          "Name": "list",
          "Description": "Combined lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "6be481a367fd43cc8adeb509d9111f9b",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "0746020f010b40b18d12e8294d6d5803",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc74106310f54489a76272da3c2a9bd9",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converts an object to a string representation"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nimport math\r\n\r\nlengths = IN[0]\r\n\r\nlengths_rounded = [ round(elem, 2) for elem in lengths ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = lengths_rounded",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "d0658a039e264a31a23745bda17e9250",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "facaabdf0175414e96e8ba312d38cc93",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de1e9821f2d647bb85fa05a2de1e936b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "Id": "7f7e91215524438fa25a345b5cace7f9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "091e3cd2b32048fe9faf592d2b446c84",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f98237957199494fb8544db7032217de",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1923744a5c9342c7a833639751db7683",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c658f4b3826247ae83a667af014687f0",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "4cb99e3b7b224956826d555b0827c444",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9fca93a4014843cea1a04959cfc8e9bb",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": " - "
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6280223bdc6b454db0e1fcdb6cdc57bc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a0630ea799154ba5a592e1dc756bfd3a",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3b3f90ebee9446558654e8d22e589cda",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d52acf738dcd4e5aa49ba5972a5d4867",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "bbeb4183ae804632bb2e731a6744d1c1",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0b888629fe934dbe8068585404a4b7e2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"1\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c03928f7792d40d98838b81180cbd5bb",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fa083c008adc4a819ed040f89551d100",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"0\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6a17c8a784364248b8468fec74adf6ef",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5dd4fc48a1bd49fe8c0d9ec582cf7fdf",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "05cedca862fe4391bc09508e820b7c38",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3acb77011071414e9b60c5113afe60d1",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "70f76a32d9b64705bc496edcbb648d00",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "69e65147799a46a2bf2275f3192f79f3",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2cad2d20c3534e3ea34b9e8801f62fda",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c84466c11d8f4af29fd4a7ec9880fb36",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a7381936199a4cf5850f034874015641",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c695ec7d3af945b48109402af041aefd",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6cdf46d54604449b5fe9f246bb98838",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d808a81dea36454ea23a2e42a7276559",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "27e02d42e8d3464b9294dd610a7c7a05",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e7fcc1b3ebc3482eab09edb271b5a21f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"1\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e941d96353734eb0b5f38978172ca6df",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "84d0d5eb56554e5fb7be1b910da8a472",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"0\";"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "471765eb41374260b05ce07efa0133f7",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "159376534c314bde863ecb795ff2b56e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "Column"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "701da6648b0d4d87be1520e56a7d2dea",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f008eec30ae54b32971d3be3e861e17a",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46a61ff010294836b4af7f62fab5e5d1",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "519c87080b0c476ea1dc8a27dc939f23",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "4a77b70d38d94d4bac8eace64f5c0aa6",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "011800d6fb444638a33265aba82a9033",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "Beam"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "54661bc7a5494714ab3218aaebd948ed",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a945a3660c4d43e2aa96f7920cf16602",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e0686e947c54faa81c25cd90052091c",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37793f2616d44c30a709e6b1336d1ae0",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "Id": "897aaf5a5606448d835866272bfd0b70",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "18b2b89076c3417a9878a8ee4363001e",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25ad730a1916465ba7e4be64d06ef0cc",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9afa759f0ed643a79ee6f33cdc40cb7a",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fafcf05caf9462a8205064c60e3d802",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "f110b0be94fb46eb8530a0a2f5121d00",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "6bf631d71894457cb771e5b245f21fc8",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4256df9916254effb8de56aa13163182",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converts an object to a string representation"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nimport math\r\n\r\nlengths = IN[0]\r\n\r\nlengths_rounded = [ round(elem, 2) for elem in lengths ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = lengths_rounded",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "3d729d0d1a8444c6bf30cb9bf5953424",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "eb42f8805c42480393bd22dc98586bd1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f938dcb12364ab98e433c060f15df25",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\nfrom collections import defaultdict\r\n\r\nbeam_lengths = IN[0]\r\n\r\nbeam_letters = defaultdict(lambda: [])\r\ncurrent_letter = ord('a')\r\n\r\nfor length in beam_lengths:\r\n    length_str = str(length)\r\n    if length_str not in beam_letters:\r\n        if current_letter <= ord('z'):\r\n            beam_letters[length_str] = chr(current_letter)\r\n        else:\r\n            # If we've reached 'z', start assigning two-letter combinations\r\n            beam_letters[length_str] = chr((current_letter - ord('a')) // 26 + ord('a')) + chr((current_letter - ord('a')) % 26 + ord('a'))\r\n        current_letter += 1\r\n\r\nassigned_letters = [beam_letters[str(length)] for length in beam_lengths]\r\n\r\nOUT = assigned_letters\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "b1d3da2679ab4a4bae3afe1fb7d529a1",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "e65faf68fc544d5ba471d935a900cff4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ccdc8d5ef2b645c4ae2af0c1f76f6264",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "f5a69ec9da1b45d380fe934523cfbdbc",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "906c8abf91b1476faee998f6bb143693",
          "Name": "combineFunction",
          "Description": "Function to use as combinator",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24e7a21172ba4df6981d3a920118d71e",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f8afad5d545d48a583e794e66d8a98ae",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01f7936f3fbf4a958818c25e01e198be",
          "Name": "list",
          "Description": "Combined lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "5efb2080d9f54e20816501b249dd7211",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "70e4201b49354da59d5d4d0c2cfb04b8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": " - "
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "04c57fa96c4b4270b14d75d2ab1a153b",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "009d08f665c642bab14099a40b55ac30",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98164ff4b2624e09be377430ca4c4eb5",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converts an object to a string representation"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "Id": "94145df51cbd4a418ed71d5517778bb3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "75316a45056a4920822ec3dc6275bc14",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed4ce7b92c9e4ccda1990f0fd1ef320c",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c382fdda3f1f4f29b33a37adec7fb768",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "17a8b3e712e6430f83c0b8d66f627052",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nimport math\r\n\r\nlengths = IN[0]\r\n\r\nlengths_rounded = [ round(elem, 2) for elem in lengths ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = lengths_rounded",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ae13a9466efa41cc93af93a9878f16fe",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "b9c223c5d195445b97461792687193fb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50c90d8d134d4cb5b1968ea0b63e885d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nfrom collections import defaultdict\r\n\r\nbeam_lengths = IN[0]\r\n\r\nbeam_letters = defaultdict(lambda: [])\r\ncurrent_letter = ord('a')\r\n\r\nfor length in beam_lengths:\r\n    length_str = str(length)\r\n    if length_str not in beam_letters:\r\n        if current_letter <= ord('z'):\r\n            beam_letters[length_str] = chr(current_letter)\r\n        else:\r\n            # If we've reached 'z', start assigning two-letter combinations\r\n            beam_letters[length_str] = chr((current_letter - ord('a')) // 26 + ord('a')) + chr((current_letter - ord('a')) % 26 + ord('a'))\r\n        current_letter += 1\r\n\r\nassigned_letters = [beam_letters[str(length)] for length in beam_lengths]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = assigned_letters\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "cb0204d13e2b47079d49e306dd023015",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "d84627bde8d5480ba3f9b9334a8cfd13",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "751e9881d7c942e3a50c3897ee4a99df",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "a41dfb8799a545b8a9e4be1cb353964a",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "1e6f7b319ff642ec9a5baf86cce88211",
          "Name": "combineFunction",
          "Description": "Function to use as combinator",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "96e4aa520c324c4b89c46ae6e70b83e5",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "88d40557bbdb4ac4a293f64f97300bda",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d1f46cc3b7a4e7893b9494a5c70ffd4",
          "Name": "list",
          "Description": "Combined lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "52da282d341347e182e336888c8ac0a1",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "74d4855e3de84bcd841a534b9e951d8b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": " - "
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "3d620c4914524ed0be63db72fb7dce13",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "810987cec7c344398744859e69ebd0be",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57755f4a34bb4874ae0dbf1f2569deda",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converts an object to a string representation"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "Id": "f8b28dd666ad4dc7aca5d93921816600",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8c7ff216240c4206a3df0cd07d5f9bd2",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d09d851699884950a4b778996134d4cb",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ff53d6339264d6fa359b8bd88c937c5",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c72b8a536ba04755aaef2231eb868678",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nimport math\r\n\r\nlengths = IN[0]\r\n\r\nlengths_rounded = [ round(elem, 2) for elem in lengths ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = lengths_rounded",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "8dc779a525d343c5acae8c93b85913af",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "1ee50d5652be410f8cc4eb389eb96362",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e0b6ecd27964be19e088eca97c8b8de",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nfrom collections import defaultdict\r\n\r\nbeam_lengths = IN[0]\r\n\r\nbeam_letters = defaultdict(lambda: [])\r\ncurrent_letter = ord('a')\r\n\r\nfor length in beam_lengths:\r\n    length_str = str(length)\r\n    if length_str not in beam_letters:\r\n        beam_letters[length_str] = chr(current_letter)\r\n        current_letter += 1\r\n\r\nassigned_letters = [beam_letters[str(length)] for length in beam_lengths];\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = assigned_letters",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "5a5f5b7145a949369d3bc91766b12a9e",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "e2d334a1a0284551a8d642ae97c980bc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b17c677c7c44a7d969c88652db1eb28",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "0c9882bb45514dd7bc5de7e9c349f381",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "66c6c1449c104d9da4483b2e1e5c2dec",
          "Name": "combineFunction",
          "Description": "Function to use as combinator",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f68ff23063a4cbbb0239623c400f375",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb8141527b6d41d0b350da72f48f79f5",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55f3249ab652452097d0579534069240",
          "Name": "list",
          "Description": "Combined lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "b1871f4d20b043499b5356e9b3a2eaa5",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "b00bea2cdef549dd861813cbd5683602",
          "Name": "combineFunction",
          "Description": "Function to use as combinator",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63c471e1798b41c9a64513f3ab36f1e9",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8820cd1982f548468211873a0541593c",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70d51c73ae6544d3b7693caf7aac3082",
          "Name": "list",
          "Description": "Combined lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nfrom collections import defaultdict\r\n\r\nbeam_lengths = IN[0]\r\n\r\nbeam_letters = defaultdict(lambda: [])\r\ncurrent_letter = ord('a')\r\n\r\nfor length in beam_lengths:\r\n    length_str = str(length)\r\n    if length_str not in beam_letters:\r\n        beam_letters[length_str] = chr(current_letter)\r\n        current_letter += 1\r\n\r\nassigned_letters = [beam_letters[str(length)] for length in beam_lengths];\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = assigned_letters",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "5806ecc563e749d98d2e1c6fc5298052",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "dd7fc1556749462e84e3f5bcca6859e8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1682611a55d47079159ab86888064f2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "83326c1ec49f491d9e10194d5020528e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "753bb6c421fd4e7cbb82a69b0685df59",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc6412cfec9c47b484b0ef030854cf61",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converts an object to a string representation"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nimport math\r\n\r\nlengths = IN[0]\r\n\r\nlengths_rounded = [ round(elem, 2) for elem in lengths ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = lengths_rounded",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "871efa9154ce431e94f6fb792152a7ba",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "9a7a193706a141b2962b019988f16609",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63fff93be86e4af296e6403febca8015",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "Id": "722a77888166477bb7072cf4ea9fb357",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "26393cd1362e42508f466d4e89db9995",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9aa68274cf384ee1ad70ab67f4688d7b",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c445b941b5341738ed47b655ffd7f2d",
          "Name": "string2",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c154a0d8a32348088045ffbd6ad05ab4",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "bfd2f8b4ec9d4828a3286facbb4a7b88",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f503affe4bdc48dd87b8733c1df9e321",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": " - "
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "109dc6bb7d5b4b48af1fbb82568e04ae",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fa8d0e2ccefa4e84a164c56d83c3523a",
          "Name": "material",
          "Description": "Revit.Elements.Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8eb29c90105430699b7d0f279684a6b",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Material.Name",
      "Replication": "Auto",
      "Description": "Get Material Name\n\nMaterial.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c4616780af1c49ff86322c53038c259b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "30aa8328d37940859e58de7c471eac86",
          "Name": "material",
          "Description": "Revit.Elements.Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "158c813758214db3a5d3c816623356f9",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Material.Name",
      "Replication": "Auto",
      "Description": "Get Material Name\n\nMaterial.Name: string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef divide_lists(list1, list2):\r\n    # Check if the two input lists have the same length\r\n    if len(list1) != len(list2):\r\n        return \"Error: Input lists must have the same length\"\r\n    \r\n    # Initialize an empty list to store the result\r\n    result = []\r\n    \r\n    # Iterate over the elements of the input lists and perform division\r\n    for num1, num2 in zip(list1, list2):\r\n        # Check if num2 is zero to avoid division by zero error\r\n        if num2 == 0:\r\n            result.append(\"Error: Division by zero\")\r\n        else:\r\n            result.append(num1 / num2)\r\n    \r\n    return result\r\n\r\n# Example usage:\r\nlist1 = IN[0]\r\nlist2 = IN[1]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = divide_lists(list1, list2)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "68a7ed89beea488ebbc7afea7657ecea",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "783f1ec75b274c53b493a6482dcc7889",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "344ed406cd52455b88a04fa226290c16",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed505ee1b25641399c0e59a3a28f934f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nimport math\r\n\r\nlengths = IN[0]\r\n\r\nlengths_rounded = [ round(elem, 6) for elem in lengths ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = lengths_rounded",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "bf55e8bf574d44758c16dbcad0adf9d2",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "f30695149b064321a744f042aee2e147",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e40696937774d9589b30dbcef985be8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef divide_lists(list1, list2):\r\n    # Check if the two input lists have the same length\r\n    if len(list1) != len(list2):\r\n        return \"Error: Input lists must have the same length\"\r\n    \r\n    # Initialize an empty list to store the result\r\n    result = []\r\n    \r\n    # Iterate over the elements of the input lists and perform division\r\n    for num1, num2 in zip(list1, list2):\r\n        # Check if num2 is zero to avoid division by zero error\r\n        if num2 == 0:\r\n            result.append(\"Error: Division by zero\")\r\n        else:\r\n            result.append(num1 / num2)\r\n    \r\n    return result\r\n\r\n# Example usage:\r\nlist1 = IN[0]\r\nlist2 = IN[1]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = divide_lists(list1, list2)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "34e62b5b4a724797aa206ceaaf8e53ce",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "5e012fb300bb41f4a6cc382d0575fd9f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8cc904937c1144b381c15e7bf3ee3b50",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "680b61bb8b394c5890d56591f3ed1b3b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nimport math\r\n\r\nlengths = IN[0]\r\n\r\nlengths_rounded = [ round(elem, 6) for elem in lengths ]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = lengths_rounded",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "dc266c186ef94872bf3af4e9bb92794a",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "59e997fa7c184a9a95f25282f19f74c4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76860ea62f174e95a9c7625d67b6c1b0",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef combine_lists(words_list, numbers_list):\r\n    combined_list = []\r\n    for word, number in zip(words_list, numbers_list):\r\n        combined_list.append(f\"{word} - {number}\")\r\n    return combined_list\r\n\r\n# Example usage:\r\nwords_list = IN[0]\r\nnumbers_list = IN[1]\r\ncombined_list = combine_lists(words_list, numbers_list)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = combined_list\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ddf1020c59404505b36fd1839ab21271",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "4be8f9af73a64e0e89696ecb3d5e8d1f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9f8dbbf107141b18f0954d297e5756b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "195c9315033343b3851e438af9dd9b3f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ninput_list = IN[0]\r\n\r\n# Place your code below this line\r\ndef categorize_string(input_string):\r\n    keywords = {\r\n        \"wood\": \"WOOD\",\r\n        \"lumber\": \"WOOD\",\r\n        \"plywood\": \"WOOD\",\r\n        \"pine\": \"WOOD\",\r\n        \"aluminium\": \"STEEL\",\r\n        \"steel\": \"STEEL\",\r\n        \"metal\": \"STEEL\",\r\n        \"iron\": \"STEEL\",\r\n        \"concrete\": \"CONCRETE\"\r\n        # Add more keywords and categories as needed\r\n    }\r\n\r\n    input_string = input_string.casefold()  # Convert input string to lowercase\r\n\r\n    for keyword, category in keywords.items():\r\n        if keyword in input_string:\r\n            return category\r\n\r\n    # If no keyword matches, return a default category\r\n    return \"OTHER\"\r\n\r\ndef transform_strings(input_list):\r\n    transformed_list = []\r\n    for string in input_list:\r\n        category = categorize_string(string)\r\n        transformed_list.append(category)\r\n    return transformed_list\r\n\r\n# Example usage:\r\ntransformed_list = transform_strings(input_list)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = transformed_list",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "18ea073df09b43999f9996a619f93942",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "55a741d6b80245a7b6387e4d9d4fab2c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d13314b48f24fabba23fdf55c1df445",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef combine_lists(words_list, numbers_list):\r\n    combined_list = []\r\n    for word, number in zip(words_list, numbers_list):\r\n        combined_list.append(f\"{word} - {number}\")\r\n    return combined_list\r\n\r\n# Example usage:\r\nwords_list = IN[0]\r\nnumbers_list = IN[1]\r\ncombined_list = combine_lists(words_list, numbers_list)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = combined_list\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "73509c22d60043718e6c9eca81e61fd6",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "95f55f301be34287a7c71b612a629138",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6eff19d4f3404f85b6715b0e1f196372",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f87559c42434076bb37f28e4a2a562f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ninput_list = IN[0]\r\n\r\ndef transform_name(name):\r\n    name_parts = name.split(\" - \")\r\n    category = name_parts[0]\r\n    number = float(name_parts[1])\r\n\r\n    if category == \"CONCRETE\":\r\n        if 0 <= number < 0.075:\r\n            return \"Concrete - Column - 0.06\"\r\n        elif 0.075 <= number < 0.105:\r\n            return \"Concrete - Column - 0.09\"\r\n        elif 0.105 <= number < 0.14:\r\n            return \"Concrete - Column - 0.12\"\r\n        elif 0.14 <= number < 0.205:\r\n            return \"Concrete - Column - 0.16\"\r\n        elif 0.205 <= number < 0.3:\r\n            return \"Concrete - Column - 0.25\"\r\n        # Add more range checks and transformations as needed\r\n    elif category == \"STEEL\":\r\n        if 0 <= number < 0.0075:\r\n            return \"Steel - Column - 0.00156\"\r\n        elif 0.0075 <= number < 0.0175:\r\n            return \"Steel - Column - 0.01313\"\r\n        elif 0.0175 <= number < 0.026:\r\n            return \"Steel - Column - 0.02196\"\r\n        elif 0.026 <= number < 0.031:\r\n            return \"Steel - Column - 0.03031\"\r\n        elif 0.031 <= number < 0.032:\r\n            return \"Steel - Column - 0.03158\"\r\n        elif 0.032 <= number < 0.0345:\r\n            return \"Steel - Column - 0.03258\"\r\n        elif 0.0345 <= number < 0.04:\r\n            return \"Steel - Column - 0.03637\"\r\n    elif category == \"WOOD\":\r\n        if 0.008 <= number < 0.0105:\r\n            return \"Wood - Column - 0.01\"\r\n        elif 0.0105 <= number < 0.0125:\r\n            return \"Wood - Column - 0.0108\"\r\n        elif 0.0125 <= number < 0.0275:\r\n            return \"Wood - Column - 0.0144\"\r\n        elif 0.0275 <= number < 0.050:\r\n            return \"Wood - Column - 0.04\"\r\n        # Add more range checks and transformations as needed\r\n\r\n    # If the category or number range doesn't match, return the original name\r\n    return name\r\n\r\ndef transform_names_in_list(names_list):\r\n    transformed_names = []\r\n    for name in names_list:\r\n        transformed_names.append(transform_name(name))\r\n    return transformed_names\r\n\r\n# Example usage:\r\ntransformed_list = transform_names_in_list(input_list)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = transformed_list",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "20635dfc5ed549ff9c538442a44db40d",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "59fcaeaead1e4ebfaf5e002a60514a96",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d3db4da2f814acfb851d231df108a26",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 1  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "072b924f5bd4489fa94cdc2f5a739e7c",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "0ba6798c53184e29b5fceaac09d5d818",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dbf5b32de65b4da8aeed2c36a7d88a5f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = \"No floor on grade\"  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "0bef823df1b545749a5deb1d512335fb",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "3362ca59b95340ac9590f94477f959a0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c46894a0b874acb91d5c5ce5e63e0a6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 0  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "68418b52c0f64dd5adc3a8018ad9baef",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "73f0c5bfbec24bc2ae8718f806ae606c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8def11a3f0a1477ebf590dae7dc01f8b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 1  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "6b0029de073944c5bbb25f9092c93553",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "dcaec83f1e9c4f759cc01f3b0db1c334",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27df731047834fb694adf2e9caf286a7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 1  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "bd62feb4c6bd4ab991756efa8c333759",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c6e0390706b5486984a860602bcf63c8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03642be597c048dfac8996265495ef53",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 1  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "75e3bb4066bf4b0ba8d2a2b2c0eeb111",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "73d9aee056894a75a35a879d6731dc45",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e28628c95e544b03bc67081b9e9d8e49",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 0  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "2ed24ab373794171b666384a7c0861eb",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "4a8f9d940cb941aa9ff789f78f70c473",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "379a38e303c14c43919a1c6394b659c3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 0  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "12843a0cb86a45029b681b1120a66d6b",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "c30ae3b289cf459198929a075b7fbd5e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "454ee545b5d744b6a8177cde8f8652cc",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 0  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "a495dfa869484934ac0ba0dd26d2c24e",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "d24e37db80004305b39c84b4d9858992",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9da7a55268794841834413bb5aa10918",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = \"No storey floor\"  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "a610cfce10ed4261a3f5a818e72ed404",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "d862df1c24ca4ec2a7374e8a0b345392",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2cb29a2ee75a44b6a44d6135d6110c1c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = \"No external wall\"  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "c9c9f4519f17411db50782133ffa24b1",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "17cf973637204267ab737093654d6ad6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4b6ffe228d44272b7ea64393a4ad3a1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = \"No flat roof\"  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "a1ae765ff8224deea44c56b8d0fc1976",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "9f92a4b9fae442b1ada262d15db6efa7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dceb68e534e041309d5892ec8c539fb7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "275015e37d7e4dfaaf16003cd59b16a0",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8ed46648b72f4b1a99f3945df46cd249",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": " - "
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nimport math\r\n\r\n# Assuming IN[0] is a list of lists\r\nlists_of_lists = IN[0]\r\n\r\n# Round each element in each sublist to two decimal places\r\nrounded_lists = [[round(elem, 2) for elem in sublist] for sublist in lists_of_lists]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = rounded_lists\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "69ed4f36943c47deaf56871d3d77c4e5",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "5b513cc5365843519c9ad49b8957d77d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9d735488e844e948dc6d2e97d2a9eef",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\ninput_lists = IN[0]\r\n\r\ninput_lists = [[x.casefold() for x in sublst] for sublst in input_lists]\r\n\r\n# Place your code below this line\r\ndef categorize_string(input_string):\r\n    keywords = {\r\n        \"screed\": \"SCREED\",\r\n        \"wood\": \"WOOD\",\r\n        \"lumber\": \"WOOD\",\r\n        \"plywood\": \"WOOD\",\r\n        \"pine\": \"WOOD\",\r\n        \"aluminium\": \"STEEL\",\r\n        \"steel\": \"STEEL\",\r\n        \"metal\": \"STEEL\",\r\n        \"iron\": \"STEEL\",\r\n        \"brick\": \"MASONRY\",\r\n        \"masonry\": \"MASONRY\",\r\n        \"concrete\": \"CONCRETE\",\r\n        \"rock wool\": \"FLEXIBLE INSULATION\",\r\n        \"glass wool\": \"FLEXIBLE INSULATION\",\r\n        \"rigid insulation\": \"RIGID INSULATION\",\r\n        \"gypsum\": \"GYPSUM\"\r\n        # Add more keywords and categories as needed\r\n    }\r\n\r\n\r\n    for keyword, category in keywords.items():\r\n        if keyword in input_string:\r\n            return category\r\n\r\n    # If no keyword matches, return None or a default category\r\n    return None\r\n\r\ndef transform_strings(input_lists):\r\n    transformed_lists = []\r\n    for inner_list in input_lists:\r\n        transformed_inner_list = []\r\n        for string in inner_list:\r\n            category = categorize_string(string)\r\n            if category:\r\n                transformed_inner_list.append(category)\r\n            else:\r\n                # Handle cases where no category matches\r\n                transformed_inner_list.append(\"OTHER\")  # Or any default category you prefer\r\n        transformed_lists.append(transformed_inner_list)\r\n    return transformed_lists\r\n\r\n# Example usage:\r\ntransformed_lists = transform_strings(input_lists)\r\nOUT = transformed_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "669527a2bbc044f2b530480bba0cadca",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "58bc5c23294b464faac2929cab0d8e59",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc6a09dd4b7c4c1e8b16f068596c836e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\ninput_lists = IN[0]\r\n\r\ninput_lists = [[x.casefold() for x in sublst] for sublst in input_lists]\r\n\r\n# Place your code below this line\r\ndef categorize_string(input_string):\r\n    keywords = {\r\n        \"screed\": \"SCREED\",\r\n        \"wood\": \"WOOD\",\r\n        \"lumber\": \"WOOD\",\r\n        \"plywood\": \"WOOD\",\r\n        \"pine\": \"WOOD\",\r\n        \"aluminium\": \"STEEL\",\r\n        \"steel\": \"STEEL\",\r\n        \"metal\": \"STEEL\",\r\n        \"iron\": \"STEEL\",\r\n        \"brick\": \"MASONRY\",\r\n        \"masonry\": \"MASONRY\",\r\n        \"concrete\": \"CONCRETE\",\r\n        \"rock wool\": \"FLEXIBLE INSULATION\",\r\n        \"glass wool\": \"FLEXIBLE INSULATION\",\r\n        \"rigid insulation\": \"RIGID INSULATION\"\r\n        # Add more keywords and categories as needed\r\n    }\r\n\r\n\r\n    for keyword, category in keywords.items():\r\n        if keyword in input_string:\r\n            return category\r\n\r\n    # If no keyword matches, return None or a default category\r\n    return None\r\n\r\ndef transform_strings(input_lists):\r\n    transformed_lists = []\r\n    for inner_list in input_lists:\r\n        transformed_inner_list = []\r\n        for string in inner_list:\r\n            category = categorize_string(string)\r\n            if category:\r\n                transformed_inner_list.append(category)\r\n            else:\r\n                # Handle cases where no category matches\r\n                transformed_inner_list.append(\"OTHER\")  # Or any default category you prefer\r\n        transformed_lists.append(transformed_inner_list)\r\n    return transformed_lists\r\n\r\n# Example usage:\r\ntransformed_lists = transform_strings(input_lists)\r\nOUT = transformed_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "75c8e839643b44e7a1c53db4f23b9910",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "d5472f2d4de94e1e8ca79c791ef8477f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "377d47a99b0447078cc0e92753ca70e3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\ninput_lists = IN[0]\r\n\r\ninput_lists = [[x.casefold() for x in sublst] for sublst in input_lists]\r\n\r\n# Place your code below this line\r\ndef categorize_string(input_string):\r\n    keywords = {\r\n        \"hcs\": \"HCS\",\r\n        \"clt\": \"CLT\",\r\n        \"screed\": \"SCREED\",\r\n        \"wood\": \"WOOD\",\r\n        \"lumber\": \"WOOD\",\r\n        \"plywood\": \"WOOD\",\r\n        \"pine\": \"WOOD\",\r\n        \"aluminium\": \"STEEL\",\r\n        \"steel\": \"STEEL\",\r\n        \"metal\": \"STEEL\",\r\n        \"iron\": \"STEEL\",\r\n        \"brick\": \"MASONRY\",\r\n        \"masonry\": \"MASONRY\",\r\n        \"concrete\": \"CONCRETE\",\r\n        \"rock wool\": \"FLEXIBLE INSULATION\",\r\n        \"glass wool\": \"FLEXIBLE INSULATION\",\r\n        \"flexible insulation\": \"FLEXIBLE INSULATION\",\r\n        \"rigid insulation\": \"RIGID INSULATION\",\r\n        \"gypsum\": \"GYPSUM\",\r\n        \"bitumen\": \"BITUMEN\"\r\n        # Add more keywords and categories as needed\r\n    }\r\n\r\n\r\n    for keyword, category in keywords.items():\r\n        if keyword in input_string:\r\n            return category\r\n\r\n    # If no keyword matches, return None or a default category\r\n    return None\r\n\r\ndef transform_strings(input_lists):\r\n    transformed_lists = []\r\n    for inner_list in input_lists:\r\n        transformed_inner_list = []\r\n        for string in inner_list:\r\n            category = categorize_string(string)\r\n            if category:\r\n                transformed_inner_list.append(category)\r\n            else:\r\n                # Handle cases where no category matches\r\n                transformed_inner_list.append(\"OTHER\")  # Or any default category you prefer\r\n        transformed_lists.append(transformed_inner_list)\r\n    return transformed_lists\r\n\r\n# Example usage:\r\ntransformed_lists = transform_strings(input_lists)\r\nOUT = transformed_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "9b1fee2f4c5f49ea889e2894e77cf10c",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "b4c973350cbc492db1302a6dc3dca4fc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c75ab1599f004dccad0e3569b11bd61f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ninput_list = IN[0]\r\n\r\n# Place your code below this line\r\ndef categorize_string(input_string):\r\n    keywords = {\r\n        \"wood\": \"WOOD\",\r\n        \"lumber\": \"WOOD\",\r\n        \"plywood\": \"WOOD\",\r\n        \"pine\": \"WOOD\",\r\n        \"aluminium\": \"STEEL\",\r\n        \"steel\": \"STEEL\",\r\n        \"metal\": \"STEEL\",\r\n        \"iron\": \"STEEL\",\r\n        \"concrete\": \"CONCRETE\"\r\n        # Add more keywords and categories as needed\r\n    }\r\n\r\n    input_string = input_string.casefold()  # Convert input string to lowercase\r\n\r\n    for keyword, category in keywords.items():\r\n        if keyword in input_string:\r\n            return category\r\n\r\n    # If no keyword matches, return a default category\r\n    return \"OTHER\"\r\n\r\ndef transform_strings(input_list):\r\n    transformed_list = []\r\n    for string in input_list:\r\n        category = categorize_string(string)\r\n        transformed_list.append(category)\r\n    return transformed_list\r\n\r\n# Example usage:\r\ntransformed_list = transform_strings(input_list)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = transformed_list",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "14661f8b2a9443099753f5a3edf50cc0",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "83aaa3279930411cacd98fc62cbaca64",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a09e7a66c8545aa93b9bcdbd570d6e4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ninput_lists = IN[0]\r\n\r\ndef transform_name(name):\r\n    name_parts = name.split(\" - \")\r\n    category = name_parts[0]\r\n    number = float(name_parts[1])\r\n\r\n    if category == \"CONCRETE\":\r\n        if 140 <= number < 160:\r\n            return \"Concrete - Foundation - 150\"    \r\n        elif 160 <= number < 200:\r\n            return \"Concrete - Foundation - 175\"    \r\n        elif 200 <= number < 250:\r\n            return \"Concrete - Foundation - 220\"\r\n        elif 250 <= number < 350:\r\n            return \"Concrete - Foundation - 300\"\r\n    elif category == \"RIGID INSULATION\":\r\n        if 20 <= number < 40:\r\n            return \"Rigid insulation - Foundation - 30\"\r\n        elif 40 <= number < 60:\r\n            return \"Rigid insulation - Foundation - 50\"\r\n    elif category == \"FLEXIBLE INSULATION\":\r\n        if 20 <= number < 40:\r\n            return \"Flexible insulation - Foundation - 30\"        \r\n    elif category == \"SCREED\":\r\n        if 40 <= number < 60:\r\n            return \"Screed - Floor - 50\"\r\n        # Add more range checks and transformations as needed\r\n\r\n    # If the category or number range doesn't match, return the original name\r\n    return name\r\n\r\ndef transform_names_in_list_of_lists(names_lists):\r\n    transformed_lists = []\r\n    for inner_list in names_lists:\r\n        transformed_names = []\r\n        for name in inner_list:\r\n            transformed_names.append(transform_name(name))\r\n        transformed_lists.append(transformed_names)\r\n    return transformed_lists\r\n\r\n# Example usage:\r\ntransformed_lists = transform_names_in_list_of_lists(input_lists)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = transformed_lists",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "beba10139fe94f09949e0a242be2cbbf",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "819f98357135418e9bfcca3966499380",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd28b52a87f84a418ae868ed7c3e02e5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ninput_list = IN[0]\r\n\r\ndef transform_name(name):\r\n    name_parts = name.split(\" - \")\r\n    category = name_parts[0]\r\n    number = float(name_parts[1])\r\n\r\n    if category == \"CONCRETE\":\r\n        if 0 <= number < 0.075:\r\n            return \"Concrete - Beam - 0.06\"\r\n        elif 0.075 <= number < 0.105:\r\n            return \"Concrete - Beam - 0.09\"\r\n        elif 0.105 <= number < 0.14:\r\n            return \"Concrete - Beam - 0.12\"\r\n        elif 0.14 <= number < 0.205:\r\n            return \"Concrete - Beam - 0.16\"\r\n        elif 0.205 <= number < 0.3:\r\n            return \"Concrete - Beam - 0.25\"\r\n        # Add more range checks and transformations as needed\r\n    elif category == \"STEEL\":\r\n        if 0 <= number < 0.0075:\r\n            return \"Steel - Beam - 0.00156\"\r\n        elif 0.0075 <= number < 0.0175:\r\n            return \"Steel - Beam - 0.01313\"\r\n        elif 0.0175 <= number < 0.026:\r\n            return \"Steel - Beam - 0.02196\"\r\n        elif 0.026 <= number < 0.031:\r\n            return \"Steel - Beam - 0.03031\"\r\n        elif 0.031 <= number < 0.032:\r\n            return \"Steel - Beam - 0.03158\"\r\n        elif 0.032 <= number < 0.0345:\r\n            return \"Steel - Beam - 0.03258\"\r\n        elif 0.0345 <= number < 0.04:\r\n            return \"Steel - Beam - 0.03637\"\r\n    elif category == \"WOOD\":\r\n        if 0.008 <= number < 0.0105:\r\n            return \"Wood - Beam - 0.01\"\r\n        elif 0.0105 <= number < 0.0125:\r\n            return \"Wood - Beam - 0.0108\"\r\n        elif 0.0125 <= number < 0.0275:\r\n            return \"Wood - Beam - 0.0144\"\r\n        elif 0.0275 <= number < 0.050:\r\n            return \"Wood - Beam - 0.04\"\r\n        # Add more range checks and transformations as needed\r\n\r\n    # If the category or number range doesn't match, return the original name\r\n    return name\r\n\r\ndef transform_names_in_list(names_list):\r\n    transformed_names = []\r\n    for name in names_list:\r\n        transformed_names.append(transform_name(name))\r\n    return transformed_names\r\n\r\n# Example usage:\r\ntransformed_list = transform_names_in_list(input_list)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = transformed_list",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "03419787c13d4102bfe7900c01724e32",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "1dbf1807b24544c7b43c368b65e4bda7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f5c76bf4125740c88ae0cc31af458d80",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nimport math\r\n\r\n# Assuming IN[0] is a list of lists\r\nlists_of_lists = IN[0]\r\n\r\n# Round each element in each sublist to two decimal places\r\nrounded_lists = [[round(elem, 2) for elem in sublist] for sublist in lists_of_lists]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = rounded_lists\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "d7fa4550582a47a7942022aa8d52f91c",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "307548b56ed44e288bd0764ae73af9b4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8940a41ea414557a5ce41a0907c83fe",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nimport math\r\n\r\n# Assuming IN[0] is a list of lists\r\nlists_of_lists = IN[0]\r\n\r\n# Round each element in each sublist to two decimal places\r\nrounded_lists = [[round(elem, 2) for elem in sublist] for sublist in lists_of_lists]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = rounded_lists\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "645481a705dc425ab2947e067275e174",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "777754fbce85445dafe5b8b8e9200583",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "daa56d74079e417789d85a126076fcf6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\n\r\n# Place your code below this line\r\nimport math\r\n\r\n# Assuming IN[0] is a list of lists\r\nlists_of_lists = IN[0]\r\n\r\n# Round each element in each sublist to two decimal places\r\nrounded_lists = [[round(elem, 2) for elem in sublist] for sublist in lists_of_lists]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = rounded_lists\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "5a7eb9a735244696926eae6263ea9033",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "fd33d269fc654e93891f67d5b5057f23",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8cf0196c973d4892bdc0c9fdcfff212a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 0  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "1fbd2b812c894657a6f4d524ab078fc5",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "960ed222fcec4a5c9a20ca790dae55be",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8dcd44fc26ce4f99830b39a6ee6a9825",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 0  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "16b32798fd15495ba687ad78fcebd250",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "00fdbf9dd9ff4e87b404db5abcd26404",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e3bf4d118804e38bf709246034b13ad",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 0  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "0c8e3cc2d886449eaa044df055c29764",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "92a5132719394b69a4e59a42c5cac03c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0bf5d5fbe8954910ac36436b27600100",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 0  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "2f4165dda9804abc92887737762f0dc1",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "81d9a94245e54e90a8d2b60e9c6efe80",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0198e39b65d64d74916cb2f5c7d67bb1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 0  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "80ac3635fd3f41678cab7c863e9c3014",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "21fc087f8f1040c2a8424a65211f4083",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "40c9bb6feb6a4d88af99543f256b1551",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 0  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "8c6c4564b75d452a92f5b6d04a81726a",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "2f14f58a216f42fa997ed19d65938de2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2a4b7cece534827a10422c2a0853861",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 0  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "03fb3153dea04856bd27b456ee0f67d3",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "a804bdb2d9ed491d93161b2e2f981abc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "937022d809cd4d0d9b65dbed5717f69e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Check if the incoming list is empty\r\nif not IN[0]:\r\n    OUT = 0  # Set the output to \"1\" if the incoming list is empty\r\nelse:\r\n    OUT = IN[0]  # Otherwise, keep the output the same as the incoming list\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "7d4a284a24814bac81cf8913978537d2",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "873cbc1b72d6409baec8190d84b2b465",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7361c89d11514b63895545aed1038a09",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "ebd3420b5e29406b9899f713f25a346b",
      "End": "dbb698c82a3045e793391e2b97d2703f",
      "Id": "356ddbb32ede4186ade96b2db3e7c43a",
      "IsHidden": "False"
    },
    {
      "Start": "b9ff2dca437a48ceb7bb4ecb0b2a9730",
      "End": "5b513cc5365843519c9ad49b8957d77d",
      "Id": "a31e4177f47442f4a55bd4376d007eb2",
      "IsHidden": "False"
    },
    {
      "Start": "144833ad46aa49e88f72bbeb5be609cd",
      "End": "7cf7ea764a0c4dec992364338eae20a1",
      "Id": "99ffcb4aabe24977ac648603e4adb2b8",
      "IsHidden": "False"
    },
    {
      "Start": "542a7ec5088f4c95a80228955940fb53",
      "End": "4b9a630c33c24a578625133b36dd8c36",
      "Id": "bb4ba1d2ed164a24bbeb1614b3a89b35",
      "IsHidden": "False"
    },
    {
      "Start": "542a7ec5088f4c95a80228955940fb53",
      "End": "722cfd01ce3c44b9a49f6ffe4c95d8fb",
      "Id": "cc5bc2eb771943bfacc105c10d6aa456",
      "IsHidden": "False"
    },
    {
      "Start": "a4161a57f0794a5295e4a72616a47016",
      "End": "c8d05e3127554b45b6bc199dbddfb56a",
      "Id": "55872a64cb7848c9834b14da395cc409",
      "IsHidden": "False"
    },
    {
      "Start": "01b960976da047baa0b36a81f30677ab",
      "End": "aa61a60969694ed1b8bed0ba1ee268a6",
      "Id": "93a321d21f2f4d61bf0faee95f09639d",
      "IsHidden": "False"
    },
    {
      "Start": "438bbefede2d435e852dd7f171176420",
      "End": "aa203bd2884548ce85b25cbf06bc64d2",
      "Id": "27e929a10f82453983770dfc2381e9fa",
      "IsHidden": "False"
    },
    {
      "Start": "ecbd6c03adf743719b06522fbfe4512e",
      "End": "f3832dae4d9349ac952927ee0fc78348",
      "Id": "e17657b7ae20438cb92bb80bfa57ff2f",
      "IsHidden": "False"
    },
    {
      "Start": "ecbd6c03adf743719b06522fbfe4512e",
      "End": "6ffd254c03734fb1a917aadf1c28b55f",
      "Id": "aceba5784fb94d5788f99d1fd939aced",
      "IsHidden": "False"
    },
    {
      "Start": "5a5446e2f89141dcbefe28c54e6fa486",
      "End": "2fa289bee8814499b283a43bf3428c2a",
      "Id": "e4b7627b9356425491a303e3d8ad05f5",
      "IsHidden": "False"
    },
    {
      "Start": "5d5bd91144d94fb1b261282cf52c8d0c",
      "End": "0f29a2f1fdd44f4eb4e128aebe2178d8",
      "Id": "32b2d4c4dcde4487aedc8af19d594d87",
      "IsHidden": "False"
    },
    {
      "Start": "933d5ae9fd7b4b1a9fe60abc41cf3627",
      "End": "307548b56ed44e288bd0764ae73af9b4",
      "Id": "3a2887c4f0ea4224ba28f7967f6677ae",
      "IsHidden": "False"
    },
    {
      "Start": "c87e220e487f4d12985bee8e0870b493",
      "End": "58bc5c23294b464faac2929cab0d8e59",
      "Id": "bba6f39064214e4b8df0c7bc8e1509fb",
      "IsHidden": "False"
    },
    {
      "Start": "dacfda3598204beda18899f95bd5a0af",
      "End": "fc18a772fb5442938b2ae4ed1fe8b9a0",
      "Id": "a5c72bbaa95b44a9a5fc24f54aee890c",
      "IsHidden": "False"
    },
    {
      "Start": "a22175edc98d47deba2ea2e7f88730b4",
      "End": "74d3d4e5117449a6ab93100f5c9fd237",
      "Id": "edc9063b20af416d88cf369a49a71469",
      "IsHidden": "False"
    },
    {
      "Start": "97d03041afd0459dbd1a51699fe75a0b",
      "End": "b2f9319574e64cf680a40c8f91d8b128",
      "Id": "f1ca34e58c2b4eae8ee81b4de16243cf",
      "IsHidden": "False"
    },
    {
      "Start": "97d03041afd0459dbd1a51699fe75a0b",
      "End": "6263bec9e5624205bd7856ec30e555d5",
      "Id": "af7978b13598449990e30fbc82eb015d",
      "IsHidden": "False"
    },
    {
      "Start": "97d03041afd0459dbd1a51699fe75a0b",
      "End": "9cf0e2b2dd654d6691ae01610fd20bf7",
      "Id": "62d5ba96b31a47b991fc01e83539cf73",
      "IsHidden": "False"
    },
    {
      "Start": "27cc0f4a9f4541d788faa6efb6fd1782",
      "End": "deeeccde59964521964b1625dae81093",
      "Id": "303af9ab22f54848af491d27002355e4",
      "IsHidden": "False"
    },
    {
      "Start": "27cc0f4a9f4541d788faa6efb6fd1782",
      "End": "7a3a3664cf1e45d0b10f5454aef7d833",
      "Id": "7b4232a0a87d4e79adccdeb7d64fa178",
      "IsHidden": "False"
    },
    {
      "Start": "bd26a0b50b8649428ef0ceae6e7e5c17",
      "End": "86de79244f7247a38516fea4785389b6",
      "Id": "8a29aa43cbfa47a6a9765e32f4036f1b",
      "IsHidden": "False"
    },
    {
      "Start": "bd26a0b50b8649428ef0ceae6e7e5c17",
      "End": "7105b4d4020e433998a0c8e356e680bc",
      "Id": "c88e48dc7b47479d8019ebc4f51ca66d",
      "IsHidden": "False"
    },
    {
      "Start": "bd26a0b50b8649428ef0ceae6e7e5c17",
      "End": "8d400307699a4b708110f8984feb8cf9",
      "Id": "fa1a38629a3146288e302b919aba1014",
      "IsHidden": "False"
    },
    {
      "Start": "b294c78a7ea74de78e3c2358e55cb212",
      "End": "21f43bba84a94c38b5a606ef920766d2",
      "Id": "713164b26e0e4c389da974662495ce09",
      "IsHidden": "False"
    },
    {
      "Start": "b294c78a7ea74de78e3c2358e55cb212",
      "End": "04a3fabf8a4d4043b098f6209f4b55fd",
      "Id": "f2eb2c84983040428ef63c7710b2e252",
      "IsHidden": "False"
    },
    {
      "Start": "1e515c2acd974163a509974ba30f5d72",
      "End": "02c0c29d18d145918e72c5919dae776b",
      "Id": "c081fb76d25849ceac055af662bc9e54",
      "IsHidden": "False"
    },
    {
      "Start": "23211c7c3282461aa063dd2aa3188481",
      "End": "b7fc14514b09459996f3228e262ae181",
      "Id": "13dd4154ba224c088c227ca9d805bab9",
      "IsHidden": "False"
    },
    {
      "Start": "8d3cb05cd1b84a0180d73898c7343d8c",
      "End": "8e9c3c17177143198fd879ae6b71c8d2",
      "Id": "8cb74e1228054e1588b5dc75079fc299",
      "IsHidden": "False"
    },
    {
      "Start": "8d3cb05cd1b84a0180d73898c7343d8c",
      "End": "6bf631d71894457cb771e5b245f21fc8",
      "Id": "9acfee2051c947588ac3d140409ceeaf",
      "IsHidden": "False"
    },
    {
      "Start": "5c60f7dfc4cd4a65a4e8ece0d6eeeee3",
      "End": "190eceaaad164b43bfa4ce6cbe50b541",
      "Id": "cf9d75dd6ae149769dda8a3448428b7c",
      "IsHidden": "False"
    },
    {
      "Start": "5f2d4ac6ba44436d835c2a016144a81b",
      "End": "9765943f068a4eb2972917ee5c601377",
      "Id": "bdcfdaed64c644ce9c1cd8fcc605a69d",
      "IsHidden": "False"
    },
    {
      "Start": "d8f0fbbe1f5d42bb8ddc62651a1f7bbe",
      "End": "dac8e9344d9341fba24999ac54bff22c",
      "Id": "be53690f27384c80b580722ab1a358be",
      "IsHidden": "False"
    },
    {
      "Start": "d8f0fbbe1f5d42bb8ddc62651a1f7bbe",
      "End": "eb42f8805c42480393bd22dc98586bd1",
      "Id": "54d1b4bccbd64f7da7646dd67a5e8572",
      "IsHidden": "False"
    },
    {
      "Start": "496bdf5dbcb94e71a40e3b6e20f5596d",
      "End": "158f018348aa4fd7b432fa4209b11d1e",
      "Id": "9e2ff18c6e2c4264b05282027b78c4ef",
      "IsHidden": "False"
    },
    {
      "Start": "2ef7882caff74ef0be40a0b6e220de24",
      "End": "4536725ab746458494a80425a0b6131d",
      "Id": "8221bb747fa34da0bce6ca35bb6fee4e",
      "IsHidden": "False"
    },
    {
      "Start": "fcac8d3cba1940269f128bd5486d9a5f",
      "End": "10aaed81308f4b5ea5eeb258c2579fe1",
      "Id": "a87b6c008b7d4280be587c8cbdf85f0b",
      "IsHidden": "False"
    },
    {
      "Start": "fcac8d3cba1940269f128bd5486d9a5f",
      "End": "cc237979884f46afa7cde92646315239",
      "Id": "2112336dae3f42a99d2f7733134fc3b3",
      "IsHidden": "False"
    },
    {
      "Start": "99f20ec0a8fa4b80ba0bee94973dde5f",
      "End": "0d010a29d7174c5b939f7a5db39e1ec9",
      "Id": "638ab9dd014945a8afc8379a0b8e6384",
      "IsHidden": "False"
    },
    {
      "Start": "a3ec03d1f5a44472bfff1cdb6a9f0708",
      "End": "0ed83efe951e4c22b2fa64326be926c0",
      "Id": "518169fcf494400fb905090c65a37e80",
      "IsHidden": "False"
    },
    {
      "Start": "47bebec519cb43faa02f2455603e5b82",
      "End": "f1f0ed9c6bb1461297ff13cf8f4432ab",
      "Id": "d17f68d174374442a373270362955986",
      "IsHidden": "False"
    },
    {
      "Start": "77ae0893b9da44d1a38ce7dcbaaa90ca",
      "End": "236a524804cd4762a807f100e6c83645",
      "Id": "c15be8277b1e46e0b96855063f36d2ed",
      "IsHidden": "False"
    },
    {
      "Start": "b1a28da287fb4695af58323fa6ba7981",
      "End": "975f769f14514a64b970dd3433a963dd",
      "Id": "f7864e26916343bc838fc9ceafd17890",
      "IsHidden": "False"
    },
    {
      "Start": "3501ee897f714eea9d6843a0d64ae51f",
      "End": "bb7dbc9bc84a444ebc50dbea640d07ae",
      "Id": "c3ad1c30992442d3900880e80ab987e3",
      "IsHidden": "False"
    },
    {
      "Start": "a94c6afffb8443918e31b841618b6e9b",
      "End": "ac7c6d428abc4e19ae787b2296e9e8ed",
      "Id": "d06fd5f88b7540a699d25aff6fbf6b67",
      "IsHidden": "False"
    },
    {
      "Start": "55fc6093d95d47b4ab209d1dca7dfa19",
      "End": "8667f90511aa47729995f42b6ecec93a",
      "Id": "70fc1149e12146acafa6dabd3059fadf",
      "IsHidden": "False"
    },
    {
      "Start": "735efaaf20ee4dfc95c1e5b9991faf0b",
      "End": "90f7ee40996b4ee6bab0481645d990b5",
      "Id": "f7b9b4f07954459fbe054390e93f154a",
      "IsHidden": "False"
    },
    {
      "Start": "3786d11fbc2c42cdb59997617e6257b1",
      "End": "4f0c7bfe35784e3ab99e2f791c9a4d45",
      "Id": "e91dbbc932b642edb75d7da8f471947c",
      "IsHidden": "False"
    },
    {
      "Start": "18f84385c2604d109a88b15b899413e3",
      "End": "a1f8fbb12f8f4c0dbacde9b7f88a62ec",
      "Id": "c4a61f7b60af421880b86ae83bc3f65a",
      "IsHidden": "False"
    },
    {
      "Start": "5664107981e14c48a67bd7aa7688ca69",
      "End": "426d01a0b8e0464cad981cc941f9a0a7",
      "Id": "244521dc2297492487e2270c57dac1c2",
      "IsHidden": "False"
    },
    {
      "Start": "7fcdc9f306534e968f6ab8399601a35c",
      "End": "eb493d4e384c477198146d9f624d7217",
      "Id": "c7020d3e96d14d09a04a9fbd562fd2f0",
      "IsHidden": "False"
    },
    {
      "Start": "add96527cbb14a8fa1a88f94ed8f7b92",
      "End": "a82081374928427cb733e41389cd26bf",
      "Id": "a1be9afa02c24d71a691359f59383b13",
      "IsHidden": "False"
    },
    {
      "Start": "2db2f4c54af042978bc5a7fe1063a625",
      "End": "ef35d95309c14d45a9d9b422ddc08382",
      "Id": "c9869082cf6a433c8642845a16335219",
      "IsHidden": "False"
    },
    {
      "Start": "d70b3f1161b84b13b607704280125961",
      "End": "66181bb5290c456783c5e8fdec5d5d46",
      "Id": "b60098e76e194b3dbf6949b08c324f72",
      "IsHidden": "False"
    },
    {
      "Start": "0ace266b170a4bbda39d7521456253fc",
      "End": "4f293d3bf98f4eed99ac533d67bb64ad",
      "Id": "5dab262a270844349a05570518f0a9c4",
      "IsHidden": "False"
    },
    {
      "Start": "04bc103f419c418c9e0ccc922b804b58",
      "End": "e2cd55e4e0d546d884316013b7a9610e",
      "Id": "885a27c88bab4574a1ca23f3c9f0d737",
      "IsHidden": "False"
    },
    {
      "Start": "874f6ca5975b4141aef7582f75644aa3",
      "End": "e2455d39443d4edd958347fcd2fc7841",
      "Id": "d2800ab0bda845c89bc48f16873c242c",
      "IsHidden": "False"
    },
    {
      "Start": "aa4c535614bc4f7b990888260b849f65",
      "End": "7987ba8ab4ae4fafbd5a06daa15de7f0",
      "Id": "8d61db3f39f845ec9cc5d2a53bbf41f3",
      "IsHidden": "False"
    },
    {
      "Start": "aa4c535614bc4f7b990888260b849f65",
      "End": "009d08f665c642bab14099a40b55ac30",
      "Id": "01140ec342b2483b89881b8e13970094",
      "IsHidden": "False"
    },
    {
      "Start": "a6e7ec6bdfd24221b163f9eb56931ed1",
      "End": "52ee6d41214f4d529953201f5077342d",
      "Id": "692250c66b494bd5bd979445dd392d1a",
      "IsHidden": "False"
    },
    {
      "Start": "bc76e6dde5744b62b14bcc482642f282",
      "End": "1ac391f40f4e48d398484e5b1448c821",
      "Id": "6d5a474b725e4316bf4e9526dc92f7df",
      "IsHidden": "False"
    },
    {
      "Start": "bbe2a6c11b8b435083154cb70343d841",
      "End": "acfcc54c74b34556829b39c9a9f6bea8",
      "Id": "c0a944cae88b44d5801fa25d9791e31f",
      "IsHidden": "False"
    },
    {
      "Start": "bbe2a6c11b8b435083154cb70343d841",
      "End": "b9c223c5d195445b97461792687193fb",
      "Id": "c8e51377d8104c7e9d7f42498054e3e8",
      "IsHidden": "False"
    },
    {
      "Start": "f1351a41053947a38a7ab7fd8be2a9ca",
      "End": "e95542850f354197a9f5e6c9d7715972",
      "Id": "79f3619753654d2382ec1b21179a0492",
      "IsHidden": "False"
    },
    {
      "Start": "d23f5e86e2754b49a34735995152bef9",
      "End": "c0cafc4f38674921bdd03507f12287e2",
      "Id": "cf82179e92ae4ad18531b46cc00c3476",
      "IsHidden": "False"
    },
    {
      "Start": "d23f5e86e2754b49a34735995152bef9",
      "End": "cce42e911f294d0ab140a1d6b83474dd",
      "Id": "1fb1233abced4f6d8c63448a867b29dd",
      "IsHidden": "False"
    },
    {
      "Start": "94ca09bb7c2d46058ffc9af6f41d836f",
      "End": "2f14f58a216f42fa997ed19d65938de2",
      "Id": "1742a8919ec848d282fb1bbabccefe4e",
      "IsHidden": "False"
    },
    {
      "Start": "7f83a74d4a6647258caad261f9502551",
      "End": "e42ec12f48054bb8973c99402c9ce5f5",
      "Id": "b89169a77a9e4ad99d30994197920ce7",
      "IsHidden": "False"
    },
    {
      "Start": "7f83a74d4a6647258caad261f9502551",
      "End": "ae4d2859364d4e5087e66491ea8df613",
      "Id": "cb8a0773dc0144bcb5c0f909c0bdae84",
      "IsHidden": "False"
    },
    {
      "Start": "cc213da47ac7462a9cc6d7658aafd513",
      "End": "81d9a94245e54e90a8d2b60e9c6efe80",
      "Id": "71121b58544a446385809a651bcdb1ba",
      "IsHidden": "False"
    },
    {
      "Start": "84dcdbf82ca24e93889700fd314bb104",
      "End": "0e279045b02e4ed8889d9d834a427bca",
      "Id": "163686f5c1414638a08e09bfb5ac2921",
      "IsHidden": "False"
    },
    {
      "Start": "5fa69358138240a0a270aec525bc6876",
      "End": "0249d378e3134c529577ca42963f5130",
      "Id": "52313d8bac8642c9858f72224df10fd4",
      "IsHidden": "False"
    },
    {
      "Start": "784d52d7cf7c4731b5cc1ba4270201e2",
      "End": "04e07b4b348e443aa26dd7ce8015ebfc",
      "Id": "63a1e4d0f69c4e2e9f88bc542594816d",
      "IsHidden": "False"
    },
    {
      "Start": "34aafbe1e745498cae5f581ae890f98e",
      "End": "257aa00d924e40feb251d4b1869c75a7",
      "Id": "56e106a75e9c4f6bac57bf813a67d13f",
      "IsHidden": "False"
    },
    {
      "Start": "692a8729cb8b48f08240d3ed7e7d18e1",
      "End": "1a56a7b5f86947a1b2497ea35a6fa934",
      "Id": "57fd0788a6334a1cb49a0178142fa8c3",
      "IsHidden": "False"
    },
    {
      "Start": "de4cb520c9d8470d9e318f20ad59e9b7",
      "End": "1b10763092334e67bb926261146d7087",
      "Id": "f9ac431f846a4e9c94a5f7be802d26c1",
      "IsHidden": "False"
    },
    {
      "Start": "cee4c88bdb8b4b1e950fef771f12ea38",
      "End": "491bd880c4ad414e88cb8eb710a4ffc9",
      "Id": "fc9beac16d344a9f83482294d62352ab",
      "IsHidden": "False"
    },
    {
      "Start": "c1c50fbce8f8421f88714112c5d333ac",
      "End": "d862df1c24ca4ec2a7374e8a0b345392",
      "Id": "82895526294c4a4abf12e09c06cf7f0d",
      "IsHidden": "False"
    },
    {
      "Start": "cb3637a584f74f4d92c56e89f512293a",
      "End": "17cf973637204267ab737093654d6ad6",
      "Id": "5978bb8e1b6e49458766d4074d7acd7b",
      "IsHidden": "False"
    },
    {
      "Start": "96857c8febda4507b7e0bebf3a0e907e",
      "End": "f12be7ea5bdb4884849fd31bbd4d938f",
      "Id": "607552f7771b4bb89dfc43630c63cdbd",
      "IsHidden": "False"
    },
    {
      "Start": "15e84f8bb8ce497382d85e36f17c4e90",
      "End": "e579589e21d7479a8b0deae2f1fc823a",
      "Id": "e683d4195a3c4c688b7eed06ec38355f",
      "IsHidden": "False"
    },
    {
      "Start": "15e84f8bb8ce497382d85e36f17c4e90",
      "End": "1fcf76d56b574209a37faf5d56317cb2",
      "Id": "1cf735705fa14aaa9d6d763a0308cead",
      "IsHidden": "False"
    },
    {
      "Start": "9377b48b48814e3bafeaf1642ff804e0",
      "End": "3b3f90ebee9446558654e8d22e589cda",
      "Id": "9722e4c7482b407d9bde9a624f432191",
      "IsHidden": "False"
    },
    {
      "Start": "9377b48b48814e3bafeaf1642ff804e0",
      "End": "05cedca862fe4391bc09508e820b7c38",
      "Id": "aaf4f410618d45029f47ab1252307eef",
      "IsHidden": "False"
    },
    {
      "Start": "9377b48b48814e3bafeaf1642ff804e0",
      "End": "46a61ff010294836b4af7f62fab5e5d1",
      "Id": "eac0fcfa0c94483a89f18c277c54a4c2",
      "IsHidden": "False"
    },
    {
      "Start": "5bb3b1ca2be14c33893939d03c642381",
      "End": "f53a5fc7d54440fba30e64c1d308a2fa",
      "Id": "e2cfd2aa950d471da3868567b3f95ec9",
      "IsHidden": "False"
    },
    {
      "Start": "4754f4e48d4f4c1db1bce694f5973373",
      "End": "5b79cf93a9dc4a8db2c98336cb2e2ac2",
      "Id": "b27a624e7c4c493ab0007f31933151be",
      "IsHidden": "False"
    },
    {
      "Start": "dbac25c052a147e1a87693dedf18e626",
      "End": "bda411e45abc42d1abb6b6e94a6b2321",
      "Id": "4051b94c16f74c1c9145957cfde8f00e",
      "IsHidden": "False"
    },
    {
      "Start": "39745c7eafea485bbc1ea2d0cd6a0fa2",
      "End": "21b13105e8f24fc9aaf20b9b0f4942ea",
      "Id": "ed8aa975ac944ae8838bf6a9f041a3e5",
      "IsHidden": "False"
    },
    {
      "Start": "f3c1940df633453eaff32562fdcb94c7",
      "End": "2bd1a0f126b94eecb0ac77c240227e48",
      "Id": "91f89b2eaa484d169defd84b7b9c4222",
      "IsHidden": "False"
    },
    {
      "Start": "f3c1940df633453eaff32562fdcb94c7",
      "End": "8cc904937c1144b381c15e7bf3ee3b50",
      "Id": "7bf1abc39f8847b1a70d48860f1f0c78",
      "IsHidden": "False"
    },
    {
      "Start": "f2fd3f4c0d4a4e38bf4a7fea50051af3",
      "End": "30aa8328d37940859e58de7c471eac86",
      "Id": "3ae76cbf36e048a09642771c25d26322",
      "IsHidden": "False"
    },
    {
      "Start": "81178fc943564c1583382568a7e59cbd",
      "End": "5e012fb300bb41f4a6cc382d0575fd9f",
      "Id": "8bc3ba36281c4ba0afd4e30528b972af",
      "IsHidden": "False"
    },
    {
      "Start": "4ed6e4dbbd094427beb3376c066528a8",
      "End": "9a0bb8a5550f4ca2b42ffc068733f6c3",
      "Id": "8897116f510b4bd3ade827237b67bab5",
      "IsHidden": "False"
    },
    {
      "Start": "7da06384f2114bd08794b1da7da49be4",
      "End": "f4f1b4c51aa54ef99f7add5578fa82e2",
      "Id": "c2002fd34bf14d739f7a5bf157e25567",
      "IsHidden": "False"
    },
    {
      "Start": "20f191d3a7944a42ae4f0e595d1001b4",
      "End": "2d0e85b3b2054f20aac8d7f22d8e2d17",
      "Id": "7ec7400a4993448ebabf35ffccc6060e",
      "IsHidden": "False"
    },
    {
      "Start": "a58e826bc4a54ee69f5f7deaf45d6d1f",
      "End": "661b5f0867ed40c893f01ffab4c7f584",
      "Id": "8fba57fde2454a0fb9104b64ce8e303d",
      "IsHidden": "False"
    },
    {
      "Start": "fa778b9b70f7458ab28bafa467157729",
      "End": "b744a752a5764734ad1146b476d0000f",
      "Id": "a210351bbfd14eb08da601abafb91027",
      "IsHidden": "False"
    },
    {
      "Start": "63f08792eec64b66afccd7cfe72344ff",
      "End": "0746020f010b40b18d12e8294d6d5803",
      "Id": "183ac879377542d99b9d28235660f296",
      "IsHidden": "False"
    },
    {
      "Start": "63f08792eec64b66afccd7cfe72344ff",
      "End": "831cb10d52de40aab19a25281cf79555",
      "Id": "69c79c14b486443b979d08f065f22e59",
      "IsHidden": "False"
    },
    {
      "Start": "20916a2f6ad14eb49a107562c739586d",
      "End": "bc707223a0a24328acf1d69d9e14ada8",
      "Id": "30ad5264e45a4828a20c58e57bfc6547",
      "IsHidden": "False"
    },
    {
      "Start": "217389dcd9c54507a0d9c8211c951483",
      "End": "2cad2d20c3534e3ea34b9e8801f62fda",
      "Id": "e2ab118ca3f64882b92e8e6e1739965c",
      "IsHidden": "False"
    },
    {
      "Start": "217389dcd9c54507a0d9c8211c951483",
      "End": "c6cdf46d54604449b5fe9f246bb98838",
      "Id": "53a477cdef51400881ebe273323fe955",
      "IsHidden": "False"
    },
    {
      "Start": "217389dcd9c54507a0d9c8211c951483",
      "End": "1e0686e947c54faa81c25cd90052091c",
      "Id": "b5c27a7de19e434e9777c9ba6b824c0d",
      "IsHidden": "False"
    },
    {
      "Start": "dcd0af535d014194a4a70ff69ca846bd",
      "End": "63dceede743e4ced94478b22199f9101",
      "Id": "97495037f6a8419d9ebfcdf00a578c14",
      "IsHidden": "False"
    },
    {
      "Start": "8cb4398a4638467c85bcd259d8b3c3d5",
      "End": "ca2103fbb05a4727808006bb9dd4773d",
      "Id": "c4c40d35cf85425eb6ce5adbfaea1d68",
      "IsHidden": "False"
    },
    {
      "Start": "5b8b2d39343f4148bfe7a443b5d37d08",
      "End": "dceb26fb856448c69f598a82ae11f45a",
      "Id": "688001aa3f1e4224ad7f1e9701d2f8e5",
      "IsHidden": "False"
    },
    {
      "Start": "bb53cfaa64d44812bad514c0d174ff63",
      "End": "facaabdf0175414e96e8ba312d38cc93",
      "Id": "57d01f7229194df2a9b46a955227e691",
      "IsHidden": "False"
    },
    {
      "Start": "bb53cfaa64d44812bad514c0d174ff63",
      "End": "344ed406cd52455b88a04fa226290c16",
      "Id": "c398e13945364ba2998113e0908e603d",
      "IsHidden": "False"
    },
    {
      "Start": "e515ee163839419d936e2904833b9037",
      "End": "fa8d0e2ccefa4e84a164c56d83c3523a",
      "Id": "93a7f75cafec431abe9c7325f2062a6d",
      "IsHidden": "False"
    },
    {
      "Start": "5bf533d6984c4280ad1ab3c0aaeea357",
      "End": "783f1ec75b274c53b493a6482dcc7889",
      "Id": "4d2fdd1db95247dfa70422d108765563",
      "IsHidden": "False"
    },
    {
      "Start": "d31e1ae7c51444f6b40909c3b85afabb",
      "End": "d24e37db80004305b39c84b4d9858992",
      "Id": "e7dde73de4b149899309f146a0293881",
      "IsHidden": "False"
    },
    {
      "Start": "25cabde6782744eaa53f7727540c9696",
      "End": "c30ae3b289cf459198929a075b7fbd5e",
      "Id": "d56452b77a7845708ed092c0660dff45",
      "IsHidden": "False"
    },
    {
      "Start": "deb80e1729a04e1495971043197a7a97",
      "End": "dcaec83f1e9c4f759cc01f3b0db1c334",
      "Id": "df5b08b3c80c4c0db27fb456685e6b5e",
      "IsHidden": "False"
    },
    {
      "Start": "c930442174c04674b73e5ade76c43dff",
      "End": "c6e0390706b5486984a860602bcf63c8",
      "Id": "69e0f8d9e1aa4d0ebdfd7da64eeb765d",
      "IsHidden": "False"
    },
    {
      "Start": "82174ec7aebd47d7972769025d3d9e24",
      "End": "92a5132719394b69a4e59a42c5cac03c",
      "Id": "894f73e3a2404ad6afd542446bf40ba4",
      "IsHidden": "False"
    },
    {
      "Start": "96dc621563884d96abeb5b9d02b2d156",
      "End": "21fc087f8f1040c2a8424a65211f4083",
      "Id": "603a33f06a914092a98078d5f161e1dd",
      "IsHidden": "False"
    },
    {
      "Start": "2789f1bd8dfc40b8b3c7244ce4c258e2",
      "End": "73f0c5bfbec24bc2ae8718f806ae606c",
      "Id": "568ab3c472eb45c78599e42314658a70",
      "IsHidden": "False"
    },
    {
      "Start": "6d8a81aa546f4c96baaf636bcea2a506",
      "End": "3362ca59b95340ac9590f94477f959a0",
      "Id": "a5c9100f476d4a2dbb1c57e740c4b415",
      "IsHidden": "False"
    },
    {
      "Start": "12605238fe574208b215f8eef3f5f6af",
      "End": "960ed222fcec4a5c9a20ca790dae55be",
      "Id": "669bdba8a3314d5bbc8500e940bb53f8",
      "IsHidden": "False"
    },
    {
      "Start": "8803d1ef0337421ba1d139ce54b20d00",
      "End": "d4c8cc06a58d4f739d8e6599de264aa4",
      "Id": "c69cdf5d086649049d3cdc494f8c3c82",
      "IsHidden": "False"
    },
    {
      "Start": "8803d1ef0337421ba1d139ce54b20d00",
      "End": "9332704e473347e4948b6e498fc425a2",
      "Id": "2b9a10a4f358407ab7a4bdfcbaad333a",
      "IsHidden": "False"
    },
    {
      "Start": "5711809868d44ff98df98c5d5e3838fc",
      "End": "0ba6798c53184e29b5fceaac09d5d818",
      "Id": "6b0cd24db8de45d39d82fb1adfe1e5e2",
      "IsHidden": "False"
    },
    {
      "Start": "c1db8ddc91d2484ca40388bb3e950349",
      "End": "b63df2addd7646f280bb26578879ff5e",
      "Id": "9489567394114e1dbea44a96a0206a99",
      "IsHidden": "False"
    },
    {
      "Start": "fbb3332ece1a4a4ab2ea5ee10c87f022",
      "End": "b9425c8cb3f840a6805cd23407ada47d",
      "Id": "da88160677004a47ba8afc71fa0a646c",
      "IsHidden": "False"
    },
    {
      "Start": "fbb3332ece1a4a4ab2ea5ee10c87f022",
      "End": "1ee50d5652be410f8cc4eb389eb96362",
      "Id": "fe3fbc736a824b11a2894e0181e73d56",
      "IsHidden": "False"
    },
    {
      "Start": "1d5f149768534f83aa0c078e5911c4d2",
      "End": "2ccd817db9ff4375828abdddd8a62403",
      "Id": "8f5c9d48c6524cd3a1f2e9e33715fb38",
      "IsHidden": "False"
    },
    {
      "Start": "af40552f2b6f4b3b8a2a2418d40d6a89",
      "End": "777754fbce85445dafe5b8b8e9200583",
      "Id": "fd27294035f847f4aa762f617b436736",
      "IsHidden": "False"
    },
    {
      "Start": "70b1a97a21324bd19d2debb4cc9b8923",
      "End": "58050bfa88304666a3b1639a841a025f",
      "Id": "9291c0a011304749b636729110497bc5",
      "IsHidden": "False"
    },
    {
      "Start": "e23acdb784a74f03a29d7a2a2fa46ee7",
      "End": "6f10043f235c4c0689d46506925f639f",
      "Id": "47f6c342b8dc4ef5b062c188ec5b2bdc",
      "IsHidden": "False"
    },
    {
      "Start": "e23acdb784a74f03a29d7a2a2fa46ee7",
      "End": "810987cec7c344398744859e69ebd0be",
      "Id": "7c332911360d4bbca134e1557a9beca8",
      "IsHidden": "False"
    },
    {
      "Start": "8d8cbedbf8d04660bca8b5837dd24ff9",
      "End": "4afc608a1ea94b0e9be6c7cb444e860f",
      "Id": "e172e15008f5431fb096c8ec047584af",
      "IsHidden": "False"
    },
    {
      "Start": "8ddd94b71df14662bb72beb737036dd2",
      "End": "42ec41bffa924c27ad523602a25b2c25",
      "Id": "25af10eb2b3e4de1babf09a9dc7c001d",
      "IsHidden": "False"
    },
    {
      "Start": "e356a8000e3740ad8228302563a6aab5",
      "End": "b06ef7b198b14b83af0f0cbc18e63fc6",
      "Id": "7d8b6896a7d54fc68837e95e34662e4e",
      "IsHidden": "False"
    },
    {
      "Start": "e356a8000e3740ad8228302563a6aab5",
      "End": "0490c987124c4333afef6b2fd23e4919",
      "Id": "886ab9c68fd14e78b9f57fc13cf55a19",
      "IsHidden": "False"
    },
    {
      "Start": "380d1e593d134848b655186ea01429b9",
      "End": "b39e407e8b5c41f786e8ddbdbfb3d640",
      "Id": "a1632c9620174516812157a400d9706f",
      "IsHidden": "False"
    },
    {
      "Start": "9f99ca65ff074551a0ec4f849d0e79c7",
      "End": "d5472f2d4de94e1e8ca79c791ef8477f",
      "Id": "8e2c5b98633348ac97aafdbb4d99cd31",
      "IsHidden": "False"
    },
    {
      "Start": "ffce78cc5fd94be4b9bab156f88a6a21",
      "End": "9b73d08e5cf949a7ac001b7b1ba4da5e",
      "Id": "825882edb5b44388a421e37afddce79f",
      "IsHidden": "False"
    },
    {
      "Start": "ffce78cc5fd94be4b9bab156f88a6a21",
      "End": "ba4499fb9a7d43478a29bfc201c00f0b",
      "Id": "6414fc95dbc34dc785f20719a6ee72e2",
      "IsHidden": "False"
    },
    {
      "Start": "ffce78cc5fd94be4b9bab156f88a6a21",
      "End": "819f98357135418e9bfcca3966499380",
      "Id": "98630f9f60144b92838147f0e2cbca04",
      "IsHidden": "False"
    },
    {
      "Start": "67fc4ce935af4e23a75c498c62d373df",
      "End": "66742c9865a4486b8f21a366937f623e",
      "Id": "232f680d12b54eb19d958e708b5325ba",
      "IsHidden": "False"
    },
    {
      "Start": "2653bbb15a7d435d9f4597b4f9e930a3",
      "End": "00fdbf9dd9ff4e87b404db5abcd26404",
      "Id": "6d267cf82bf24cec90ebd58baf085808",
      "IsHidden": "False"
    },
    {
      "Start": "326838d989cd4f0fa1678ebaecba8164",
      "End": "3b8ecdaf831f487b8c8f86ae5d410bcd",
      "Id": "94dfec1f649a4fdb999b0a5588af494e",
      "IsHidden": "False"
    },
    {
      "Start": "7746e3d24cdc4b2ba1eae9364c75a144",
      "End": "59dc7b0a203a43f284a095dc248fd4c2",
      "Id": "148cdeb1bc344984be531e656b451809",
      "IsHidden": "False"
    },
    {
      "Start": "0b181175aa6a4d01917422a53d59bb22",
      "End": "b7f18289929c4b718a53efa8a5b9e8bb",
      "Id": "af1749ff4ffe494eac2b8fa21dddbaf5",
      "IsHidden": "False"
    },
    {
      "Start": "3e7f6f3223e545f8944bbd1c4edf8b84",
      "End": "77764e0f0f4b4935ab73c2736e0d01f5",
      "Id": "092226da5fde47beb8a9829ec1fa5469",
      "IsHidden": "False"
    },
    {
      "Start": "5519d5a0420d4b468dc4710061f8f7d3",
      "End": "bcdeb5d7666f478f802d94d4fc594ce0",
      "Id": "98b6c8d8083f4ae69c57edccd10aa7f0",
      "IsHidden": "False"
    },
    {
      "Start": "0bba07cd9bf143ca83fb84ddcc08fbac",
      "End": "fdb1582510aa48afac972552669e0bb3",
      "Id": "5578d204de434e5ca058b369a589c2b9",
      "IsHidden": "False"
    },
    {
      "Start": "fa608a39a1ff4e328aaf83fa9d783fc1",
      "End": "71ed4c6c30194e0ab6db101df5f6c896",
      "Id": "1b7081f11bb34c7688e0c0d7c7d33205",
      "IsHidden": "False"
    },
    {
      "Start": "40213240e31c4406bf720c2a9aabda18",
      "End": "f5c305ae57414f63b9ed86a6918aa302",
      "Id": "d3ea44e1038742bd98cda1140835835d",
      "IsHidden": "False"
    },
    {
      "Start": "eec4759c087b4ea4b69690a46eb9ec24",
      "End": "8f677f6e86bd4348b6593ccceef14565",
      "Id": "b84e392885a44fad826c4f4189e2ff37",
      "IsHidden": "False"
    },
    {
      "Start": "18d7797729094ccb89573b5715f905d1",
      "End": "7d86d47ec3a04428831e1762cd372a22",
      "Id": "ce631dbae92446cc8a1c11191d7800f8",
      "IsHidden": "False"
    },
    {
      "Start": "8fc92692570b49b99bfae8f205bb78ba",
      "End": "9dc9dcfde22545bb9128c04de46e9c14",
      "Id": "30fd26523b504cffb7602f2cd1ad8873",
      "IsHidden": "False"
    },
    {
      "Start": "8fc92692570b49b99bfae8f205bb78ba",
      "End": "da7ebd93130c46eeae028c1250650141",
      "Id": "8d10210f596842b4ba8e84a1d40407e3",
      "IsHidden": "False"
    },
    {
      "Start": "e6d07fd3dcd04c64a591751a44516f65",
      "End": "27e0df6d923a411397da918ba6515b62",
      "Id": "767fa19890b4443dba29e6603d389644",
      "IsHidden": "False"
    },
    {
      "Start": "3584e715bc444210a2cfb80acfd86567",
      "End": "4673402fea43485d9e1b54a9b445c22b",
      "Id": "a9f1058332e84ab5b41bd0172ab85605",
      "IsHidden": "False"
    },
    {
      "Start": "3584e715bc444210a2cfb80acfd86567",
      "End": "753bb6c421fd4e7cbb82a69b0685df59",
      "Id": "eee95785808046f1961d36708ec7be85",
      "IsHidden": "False"
    },
    {
      "Start": "e3fa2637a0144961a3234c3f62ca28cb",
      "End": "6a53856c3a2a4dfb9c67c25ace7f9dd4",
      "Id": "b3d0298978344509b6da4c4d05f1e21d",
      "IsHidden": "False"
    },
    {
      "Start": "b1b10bcb7db440d68a2c291d8490c394",
      "End": "08f6a70988764dc28b5e31ed414fce58",
      "Id": "4402b5a28bd0440aaa6cd5b6a503bf5a",
      "IsHidden": "False"
    },
    {
      "Start": "6baab637c8c6458b96a0b19cff2af5eb",
      "End": "a6cb841786ea42e8af09b309fc79e46c",
      "Id": "f6439fd4f66946b099e46f10fba0e884",
      "IsHidden": "False"
    },
    {
      "Start": "dbdc70cb0da54bb3aca2b726ef3933eb",
      "End": "8bbb1b9013eb40f69315d60b557665ce",
      "Id": "98fc48aefaa345b8ac18ef325e4930e2",
      "IsHidden": "False"
    },
    {
      "Start": "dbdc70cb0da54bb3aca2b726ef3933eb",
      "End": "9a7a193706a141b2962b019988f16609",
      "Id": "7d042fb75d1749a282b5406b3845980e",
      "IsHidden": "False"
    },
    {
      "Start": "e31dc00a560546c1865e8c016136f2e7",
      "End": "4ce460cab9ee48ef8d85492cbdfc442c",
      "Id": "e80aa297d5b5421281a63b70bc8b5139",
      "IsHidden": "False"
    },
    {
      "Start": "43dff7833abc4d51a93773a08f83457e",
      "End": "fd33d269fc654e93891f67d5b5057f23",
      "Id": "f3181579396649acabec7ad8386d853f",
      "IsHidden": "False"
    },
    {
      "Start": "4697e84ee55943c5be37ce087b8420d7",
      "End": "b4c973350cbc492db1302a6dc3dca4fc",
      "Id": "1ee71f39495440bf9066072ae19da987",
      "IsHidden": "False"
    },
    {
      "Start": "59adfe2667e34256ba11df767f5e5c5f",
      "End": "c99285c2d1544d9bac9c572fc1a5f723",
      "Id": "e97c37caeb1c45f885725e7a157f51bb",
      "IsHidden": "False"
    },
    {
      "Start": "aae3cfa4996645008f15422e270252d2",
      "End": "a804bdb2d9ed491d93161b2e2f981abc",
      "Id": "7f819b55142f4983bfd6e9b6ad53f5b2",
      "IsHidden": "False"
    },
    {
      "Start": "5a09900e13a54fbcbdbeab43609ddee8",
      "End": "67ec7fbb33484d4b93ac518d45db5fb7",
      "Id": "d4384776e41e43f18403e0eadab04557",
      "IsHidden": "False"
    },
    {
      "Start": "5a09900e13a54fbcbdbeab43609ddee8",
      "End": "6fa9a7a014164f63a2b425439d2b5fe6",
      "Id": "a7be6c20c8b24e66948b05425a2b0711",
      "IsHidden": "False"
    },
    {
      "Start": "5a09900e13a54fbcbdbeab43609ddee8",
      "End": "85d1a7eeec304f05acb475dc232aea01",
      "Id": "75dcddea575741d0a8d410c99b208c94",
      "IsHidden": "False"
    },
    {
      "Start": "e2ea90195ea84ac1a5f8974c59d5b4c9",
      "End": "79d9def6d7aa4909a5b216f7f7946697",
      "Id": "3545db93c81345e7bd9db778dd0c08fd",
      "IsHidden": "False"
    },
    {
      "Start": "e2ea90195ea84ac1a5f8974c59d5b4c9",
      "End": "14f5ca0bcce04d139737b660765b0269",
      "Id": "5a35135006f347d88610bc8e2f9a83de",
      "IsHidden": "False"
    },
    {
      "Start": "19437d9280e5453aa600b5fcb0cadf3b",
      "End": "33b515b781f34b0fb3f790eb4f78698f",
      "Id": "c624246ac79b433495af11c219db660d",
      "IsHidden": "False"
    },
    {
      "Start": "19437d9280e5453aa600b5fcb0cadf3b",
      "End": "584c6cdb788a4457ada7c7b176363805",
      "Id": "c0dd2dc5f6e6455cb5ee5645a3071256",
      "IsHidden": "False"
    },
    {
      "Start": "df91bfac55204ae2aa6c9297b5ae69c3",
      "End": "9f92a4b9fae442b1ada262d15db6efa7",
      "Id": "020e55bcb0904bb48ed6e14aa881770d",
      "IsHidden": "False"
    },
    {
      "Start": "919217eae1dc4785a5269a306338124e",
      "End": "4a8f9d940cb941aa9ff789f78f70c473",
      "Id": "be77f535f58e4dfcb97a9d5fae48c238",
      "IsHidden": "False"
    },
    {
      "Start": "2097f3b4a33d435b8291a874e42a9d21",
      "End": "f082a190c71d49aba6f4e51a75a75af9",
      "Id": "63023a72cea7407a860ba54ae05aa50d",
      "IsHidden": "False"
    },
    {
      "Start": "48534c0083d04a1fb485e99a99d96915",
      "End": "73d9aee056894a75a35a879d6731dc45",
      "Id": "85fb39f0465c438e95c37e5040a57c53",
      "IsHidden": "False"
    },
    {
      "Start": "d443af27905548f8ad3f584e4fdb624c",
      "End": "873cbc1b72d6409baec8190d84b2b465",
      "Id": "2a75cc92578142b8a17a60df44462f51",
      "IsHidden": "False"
    },
    {
      "Start": "b6007ea2834d44d0b6dd5d314aaccc99",
      "End": "c8167f4088af4de3917b1b56419f2594",
      "Id": "3e50e330ed1449b88942fa5b4c599c05",
      "IsHidden": "False"
    },
    {
      "Start": "0064c700a08547f78a028884ae9a4681",
      "End": "436f67f8896d43ddbdb770deafdae790",
      "Id": "07964842581849cb8ce286ed69dcf2b4",
      "IsHidden": "False"
    },
    {
      "Start": "dceb22f332e4427ab7599a5c83be1b2e",
      "End": "cdd6990f1b6e4ec78c333bab54023207",
      "Id": "c602129779984ea4a610a5ae7c13a992",
      "IsHidden": "False"
    },
    {
      "Start": "af3d4599302641eba5aa3166dab6b374",
      "End": "c5eaa295cc214d6e80c5246ec21e6c83",
      "Id": "87316e621eb048969b187b6d5c8d6483",
      "IsHidden": "False"
    },
    {
      "Start": "d13f0cd45f6641e2b3dfabf36363355f",
      "End": "f8d9ac071a4347b086bf8c64e71be565",
      "Id": "b7616a9b959147eea1c64a0322afdd7d",
      "IsHidden": "False"
    },
    {
      "Start": "915d7fd6870d4083a937f2aabdb8c37e",
      "End": "281f2ed2c63a4454954ef198fdac3ac9",
      "Id": "28997f8c1e7a471b934b883d1a9221f4",
      "IsHidden": "False"
    },
    {
      "Start": "915d7fd6870d4083a937f2aabdb8c37e",
      "End": "57dc6a2297114ed586621948f3960565",
      "Id": "f7c6fa755d7a4cc0a42e5586c79838aa",
      "IsHidden": "False"
    },
    {
      "Start": "c7a63ae19d6a4008877ea5f1830bbed6",
      "End": "884ff5c4597845409344a3c14049a5cd",
      "Id": "7ed0f9dd168242158d56e8943e9a14df",
      "IsHidden": "False"
    },
    {
      "Start": "4697c70a81e94842b4c6a7fd786701fc",
      "End": "44717376d0e14e55b5b9dc690cb8567c",
      "Id": "befd980d75354be8883adc69dcfe1a8e",
      "IsHidden": "False"
    },
    {
      "Start": "2a59f0040f0d4ef2b2db43ed3e5cbb64",
      "End": "74c542dcef424ab29624c6f645fbc064",
      "Id": "f4c173b554c04cecb2a98411b43bd415",
      "IsHidden": "False"
    },
    {
      "Start": "ef80de3c7c2d4ad586993390238af930",
      "End": "f85cad814a854613b08e57d5d21c26b1",
      "Id": "f4f136b3de9444d383c9aa17bbd7d5e5",
      "IsHidden": "False"
    },
    {
      "Start": "ac62337ecdac4a138f9d2730938d11a7",
      "End": "b912792530bb4dbb8744a45c99f1aeba",
      "Id": "0a74b6035dbc4392808e9acf104f2418",
      "IsHidden": "False"
    },
    {
      "Start": "f71831f298714c258d11fd8f425fdd52",
      "End": "d3576b94ecdb41c0acf04c399be9bca2",
      "Id": "d1a9aff3647c4b86b53a1ccd24ed87a4",
      "IsHidden": "False"
    },
    {
      "Start": "f8551317d0ac4c0ba099c02f42d753bd",
      "End": "f43bc3b25316441498ac2ff8c7915737",
      "Id": "153724aec8e14019b903c073f3e006d1",
      "IsHidden": "False"
    },
    {
      "Start": "cc74106310f54489a76272da3c2a9bd9",
      "End": "212fb9ac6e77487eab7d703ef84f21ac",
      "Id": "1dbbbecb213c4cc69269fcbf1871f648",
      "IsHidden": "False"
    },
    {
      "Start": "de1e9821f2d647bb85fa05a2de1e936b",
      "End": "c40588d22b444c3a81846afc4e00d25b",
      "Id": "7325f8e56dfb4590867b54f572dcf4e7",
      "IsHidden": "False"
    },
    {
      "Start": "de1e9821f2d647bb85fa05a2de1e936b",
      "End": "65d97881128b41fd8ffa2e93ccf37fa1",
      "Id": "dc59fd6f95c44693890cb651c6c0169a",
      "IsHidden": "False"
    },
    {
      "Start": "c658f4b3826247ae83a667af014687f0",
      "End": "052aa9b96354497e921004080485edc6",
      "Id": "982cebe01acc4756a06f900ae05c4347",
      "IsHidden": "False"
    },
    {
      "Start": "9fca93a4014843cea1a04959cfc8e9bb",
      "End": "f98237957199494fb8544db7032217de",
      "Id": "9d2daf3b971c4da5a1d47a3f1072ee90",
      "IsHidden": "False"
    },
    {
      "Start": "d52acf738dcd4e5aa49ba5972a5d4867",
      "End": "99056c8923dc4f4a8c5e77d531c3cc9d",
      "Id": "36ab1ffbe48a4654a5fb22412133f85e",
      "IsHidden": "False"
    },
    {
      "Start": "0b888629fe934dbe8068585404a4b7e2",
      "End": "a0630ea799154ba5a592e1dc756bfd3a",
      "Id": "73c43da75f6d4e91a1743443a6acc8e0",
      "IsHidden": "False"
    },
    {
      "Start": "fa083c008adc4a819ed040f89551d100",
      "End": "5dd4fc48a1bd49fe8c0d9ec582cf7fdf",
      "Id": "8a1a9c02239541829818a7a11bcc03b8",
      "IsHidden": "False"
    },
    {
      "Start": "3acb77011071414e9b60c5113afe60d1",
      "End": "8f242ff2d84542619e58942650923334",
      "Id": "1f902b4388b14a0890d358dcfc3a2b4e",
      "IsHidden": "False"
    },
    {
      "Start": "c84466c11d8f4af29fd4a7ec9880fb36",
      "End": "302eb7da78cc482d99cfeb92c74de6dc",
      "Id": "2cba74b0c01c477595219d0a5c6c2340",
      "IsHidden": "False"
    },
    {
      "Start": "d808a81dea36454ea23a2e42a7276559",
      "End": "207656a274d042fe8ae55fe8765eec48",
      "Id": "4aff5c6c850b47a8805bd4857c00935e",
      "IsHidden": "False"
    },
    {
      "Start": "e7fcc1b3ebc3482eab09edb271b5a21f",
      "End": "69e65147799a46a2bf2275f3192f79f3",
      "Id": "97055e0e95f4498eb477c60c7e3930c9",
      "IsHidden": "False"
    },
    {
      "Start": "84d0d5eb56554e5fb7be1b910da8a472",
      "End": "c695ec7d3af945b48109402af041aefd",
      "Id": "acfa9b9fc1f64e69ba18b37441095943",
      "IsHidden": "False"
    },
    {
      "Start": "159376534c314bde863ecb795ff2b56e",
      "End": "f008eec30ae54b32971d3be3e861e17a",
      "Id": "809ed9f5632d4ddfb47ffb8c43ef39a2",
      "IsHidden": "False"
    },
    {
      "Start": "519c87080b0c476ea1dc8a27dc939f23",
      "End": "8fed9b28e5284ea489cd0c8011b0f319",
      "Id": "35291c051107464e8fbab8fc2538e679",
      "IsHidden": "False"
    },
    {
      "Start": "011800d6fb444638a33265aba82a9033",
      "End": "a945a3660c4d43e2aa96f7920cf16602",
      "Id": "51f249c83a3e43cab50200805396bf49",
      "IsHidden": "False"
    },
    {
      "Start": "37793f2616d44c30a709e6b1336d1ae0",
      "End": "8bea3db8d01d47779c5fa75ac70be2b2",
      "Id": "1de973cb8e9543bcabc97e92c8554c34",
      "IsHidden": "False"
    },
    {
      "Start": "9fafcf05caf9462a8205064c60e3d802",
      "End": "906c8abf91b1476faee998f6bb143693",
      "Id": "f8efb191eb7446daa2988e014aadaaed",
      "IsHidden": "False"
    },
    {
      "Start": "4256df9916254effb8de56aa13163182",
      "End": "24e7a21172ba4df6981d3a920118d71e",
      "Id": "05b4fc4c1d3b495084337ba91689542f",
      "IsHidden": "False"
    },
    {
      "Start": "6f938dcb12364ab98e433c060f15df25",
      "End": "e65faf68fc544d5ba471d935a900cff4",
      "Id": "13bd725293444f0ab2f257b707a98d49",
      "IsHidden": "False"
    },
    {
      "Start": "ccdc8d5ef2b645c4ae2af0c1f76f6264",
      "End": "f8afad5d545d48a583e794e66d8a98ae",
      "Id": "7fbf7c9df6514fec83292db3d5956e86",
      "IsHidden": "False"
    },
    {
      "Start": "01f7936f3fbf4a958818c25e01e198be",
      "End": "71c54b360eda40a6be5b17fc534663ac",
      "Id": "3d2b6a4302834e059ed2f6c28aab18aa",
      "IsHidden": "False"
    },
    {
      "Start": "70e4201b49354da59d5d4d0c2cfb04b8",
      "End": "ed4ce7b92c9e4ccda1990f0fd1ef320c",
      "Id": "16fdb9db995d411681ba2bbb47178e35",
      "IsHidden": "False"
    },
    {
      "Start": "98164ff4b2624e09be377430ca4c4eb5",
      "End": "96e4aa520c324c4b89c46ae6e70b83e5",
      "Id": "e665cdb89a5b44c287b970511f2cee4d",
      "IsHidden": "False"
    },
    {
      "Start": "17a8b3e712e6430f83c0b8d66f627052",
      "End": "1e6f7b319ff642ec9a5baf86cce88211",
      "Id": "3d56cddc188c415e9c01c1bb60c79741",
      "IsHidden": "False"
    },
    {
      "Start": "50c90d8d134d4cb5b1968ea0b63e885d",
      "End": "d84627bde8d5480ba3f9b9334a8cfd13",
      "Id": "99aae6024163455b9f97d0ac2e97bfeb",
      "IsHidden": "False"
    },
    {
      "Start": "751e9881d7c942e3a50c3897ee4a99df",
      "End": "88d40557bbdb4ac4a293f64f97300bda",
      "Id": "23424dd5df434ed79385017f59e5f55f",
      "IsHidden": "False"
    },
    {
      "Start": "8d1f46cc3b7a4e7893b9494a5c70ffd4",
      "End": "164a268282f74c088c8abb0184581718",
      "Id": "0c0d2dddaba04a0eb3320a44a41fadfc",
      "IsHidden": "False"
    },
    {
      "Start": "74d4855e3de84bcd841a534b9e951d8b",
      "End": "d09d851699884950a4b778996134d4cb",
      "Id": "570d63c8d2464d91afa82aa30f1f06ad",
      "IsHidden": "False"
    },
    {
      "Start": "57755f4a34bb4874ae0dbf1f2569deda",
      "End": "4f68ff23063a4cbbb0239623c400f375",
      "Id": "6c6b471010ff440f8aed60aad4f25a0f",
      "IsHidden": "False"
    },
    {
      "Start": "c72b8a536ba04755aaef2231eb868678",
      "End": "66c6c1449c104d9da4483b2e1e5c2dec",
      "Id": "2223b551af2c45fbb96e6b7a40c39475",
      "IsHidden": "False"
    },
    {
      "Start": "3e0b6ecd27964be19e088eca97c8b8de",
      "End": "e2d334a1a0284551a8d642ae97c980bc",
      "Id": "bad20ba792f54d27bc19916af8fac7af",
      "IsHidden": "False"
    },
    {
      "Start": "5b17c677c7c44a7d969c88652db1eb28",
      "End": "bb8141527b6d41d0b350da72f48f79f5",
      "Id": "27a4b2ed841d42739d0ed6464d61c6d4",
      "IsHidden": "False"
    },
    {
      "Start": "55f3249ab652452097d0579534069240",
      "End": "7a2f7bedac6e428b936af27de8f48316",
      "Id": "89be89be044840889f4d03e2c8df330c",
      "IsHidden": "False"
    },
    {
      "Start": "70d51c73ae6544d3b7693caf7aac3082",
      "End": "7551e29783bb4b8695e1f30124c9f464",
      "Id": "8ce66514eb09486a8ed807ce8f830b6f",
      "IsHidden": "False"
    },
    {
      "Start": "a1682611a55d47079159ab86888064f2",
      "End": "8820cd1982f548468211873a0541593c",
      "Id": "9637568ae0f5477e8f1789e271d2a786",
      "IsHidden": "False"
    },
    {
      "Start": "bc6412cfec9c47b484b0ef030854cf61",
      "End": "63c471e1798b41c9a64513f3ab36f1e9",
      "Id": "90dcf2b84a1b44ad9af29cead4be53b9",
      "IsHidden": "False"
    },
    {
      "Start": "63fff93be86e4af296e6403febca8015",
      "End": "dd7fc1556749462e84e3f5bcca6859e8",
      "Id": "c3e89e01e8ac4f2f8316e2620edc99d4",
      "IsHidden": "False"
    },
    {
      "Start": "c154a0d8a32348088045ffbd6ad05ab4",
      "End": "b00bea2cdef549dd861813cbd5683602",
      "Id": "a23e59af854143a8b86161c93b472408",
      "IsHidden": "False"
    },
    {
      "Start": "f503affe4bdc48dd87b8733c1df9e321",
      "End": "9aa68274cf384ee1ad70ab67f4688d7b",
      "Id": "20c819ce3dae4f17b85f766b39dec2f2",
      "IsHidden": "False"
    },
    {
      "Start": "b8eb29c90105430699b7d0f279684a6b",
      "End": "83aaa3279930411cacd98fc62cbaca64",
      "Id": "1419f29723d5424bbc98efb0d9fa5cbd",
      "IsHidden": "False"
    },
    {
      "Start": "158c813758214db3a5d3c816623356f9",
      "End": "55a741d6b80245a7b6387e4d9d4fab2c",
      "Id": "387b8d780ac64e4b863d63f3f8c44272",
      "IsHidden": "False"
    },
    {
      "Start": "ed505ee1b25641399c0e59a3a28f934f",
      "End": "f30695149b064321a744f042aee2e147",
      "Id": "e4ebc28b969a469dab0030a0cf282fb2",
      "IsHidden": "False"
    },
    {
      "Start": "2e40696937774d9589b30dbcef985be8",
      "End": "6eff19d4f3404f85b6715b0e1f196372",
      "Id": "6bddc01ef6ff4a98853dfc55ce6b34e8",
      "IsHidden": "False"
    },
    {
      "Start": "680b61bb8b394c5890d56591f3ed1b3b",
      "End": "59e997fa7c184a9a95f25282f19f74c4",
      "Id": "57423ada25a94003be949c2743351cd9",
      "IsHidden": "False"
    },
    {
      "Start": "76860ea62f174e95a9c7625d67b6c1b0",
      "End": "f9f8dbbf107141b18f0954d297e5756b",
      "Id": "53a9f8fab89841a3a48daef9ad5fe8ac",
      "IsHidden": "False"
    },
    {
      "Start": "195c9315033343b3851e438af9dd9b3f",
      "End": "59fcaeaead1e4ebfaf5e002a60514a96",
      "Id": "624e71f3aaf047679d55a6325b9753f0",
      "IsHidden": "False"
    },
    {
      "Start": "9d13314b48f24fabba23fdf55c1df445",
      "End": "4be8f9af73a64e0e89696ecb3d5e8d1f",
      "Id": "076087dfcb024cc2bc8c009a545b89ba",
      "IsHidden": "False"
    },
    {
      "Start": "1f87559c42434076bb37f28e4a2a562f",
      "End": "1dbf1807b24544c7b43c368b65e4bda7",
      "Id": "37e1fc986acc4fe199d7009ab3283e3c",
      "IsHidden": "False"
    },
    {
      "Start": "2d3db4da2f814acfb851d231df108a26",
      "End": "4619a1684f1a4300a41bf1a8ab964141",
      "Id": "6140b8f44471496494b00085090bbd4e",
      "IsHidden": "False"
    },
    {
      "Start": "dbf5b32de65b4da8aeed2c36a7d88a5f",
      "End": "ae6d2c3fd55644f1b5f34e245b4d2d51",
      "Id": "3e9a14909f6140178349734832f4c858",
      "IsHidden": "False"
    },
    {
      "Start": "dbf5b32de65b4da8aeed2c36a7d88a5f",
      "End": "ba6b22a638b847df954fc4dc92c29747",
      "Id": "2aa1aa4a294e48dba20762461c2e6df6",
      "IsHidden": "False"
    },
    {
      "Start": "dbf5b32de65b4da8aeed2c36a7d88a5f",
      "End": "287ea668156b4eebb1ae249e4a24f811",
      "Id": "80cc167ce3704602abd0ea84752a2d9b",
      "IsHidden": "False"
    },
    {
      "Start": "9c46894a0b874acb91d5c5ce5e63e0a6",
      "End": "7dbf6de7424444488db6d0ce0d3b0443",
      "Id": "153e08deb21043a9bff79ac6bcbf579a",
      "IsHidden": "False"
    },
    {
      "Start": "8def11a3f0a1477ebf590dae7dc01f8b",
      "End": "9c02e579ad7d43489db71d9c6d70405f",
      "Id": "9614f42a4e00432e91412595bec617ef",
      "IsHidden": "False"
    },
    {
      "Start": "27df731047834fb694adf2e9caf286a7",
      "End": "b7d875fc3e83444da6c10ef28e1f8cd0",
      "Id": "ec90304679354e118bcc3ea90d85a3c9",
      "IsHidden": "False"
    },
    {
      "Start": "27df731047834fb694adf2e9caf286a7",
      "End": "7b72af982b934c30a95df3a04745d51d",
      "Id": "9cdc1fc090df438bbb137a2a4ccccc6d",
      "IsHidden": "False"
    },
    {
      "Start": "27df731047834fb694adf2e9caf286a7",
      "End": "00cffa79fcab4d549038c991d7b54542",
      "Id": "53be696feee2409e8b527d2da7464421",
      "IsHidden": "False"
    },
    {
      "Start": "03642be597c048dfac8996265495ef53",
      "End": "a754f9b7574642228cdc0f047e4a246e",
      "Id": "84a05dd27d694b3185237779e4f47f02",
      "IsHidden": "False"
    },
    {
      "Start": "03642be597c048dfac8996265495ef53",
      "End": "a3ddb8dffdce4041b5f27f87294abeac",
      "Id": "dbe73f717f6145b4b2bcdd2648be5539",
      "IsHidden": "False"
    },
    {
      "Start": "03642be597c048dfac8996265495ef53",
      "End": "885f46175b15450babe5d55daa45972c",
      "Id": "39c8bac1d95f49cab91baf17bf55074c",
      "IsHidden": "False"
    },
    {
      "Start": "e28628c95e544b03bc67081b9e9d8e49",
      "End": "4fdb9636ff8b458db9fcdd32a890c21b",
      "Id": "1c207a410399431ea41c136030cc5e9b",
      "IsHidden": "False"
    },
    {
      "Start": "e28628c95e544b03bc67081b9e9d8e49",
      "End": "6ec3020959454f05ba77200c43b8c728",
      "Id": "125c947c4c87421784a55475ef759ac3",
      "IsHidden": "False"
    },
    {
      "Start": "e28628c95e544b03bc67081b9e9d8e49",
      "End": "0b53ef80c5644057be17fe17428ee3e8",
      "Id": "8d91349c556a470c8e85c4c8ff524266",
      "IsHidden": "False"
    },
    {
      "Start": "379a38e303c14c43919a1c6394b659c3",
      "End": "81d07b3e483141b783951d21bfe932c4",
      "Id": "43122603967f49299975824ad4e900bb",
      "IsHidden": "False"
    },
    {
      "Start": "454ee545b5d744b6a8177cde8f8652cc",
      "End": "a13edef2ffb644adb805c1910b14aff5",
      "Id": "5a8bc76a0f254088a73d502c380e6b50",
      "IsHidden": "False"
    },
    {
      "Start": "9da7a55268794841834413bb5aa10918",
      "End": "466a8399a4144ae18369171759015518",
      "Id": "feba071505b54f9cb714a393ccb71e44",
      "IsHidden": "False"
    },
    {
      "Start": "2cb29a2ee75a44b6a44d6135d6110c1c",
      "End": "9f28499fc94c4e629794008eb42040dc",
      "Id": "b88abea6ef66478e804d046583728f6a",
      "IsHidden": "False"
    },
    {
      "Start": "d4b6ffe228d44272b7ea64393a4ad3a1",
      "End": "d25834b72fcd43acb9c7957cd08322a9",
      "Id": "6011c2934f1940ebad0d1ccf28965a98",
      "IsHidden": "False"
    },
    {
      "Start": "dceb68e534e041309d5892ec8c539fb7",
      "End": "682c9c5593214827900e72b8ec3a9061",
      "Id": "1538cb8c3ed845729dbaba0e8e7924ca",
      "IsHidden": "False"
    },
    {
      "Start": "8ed46648b72f4b1a99f3945df46cd249",
      "End": "25ad730a1916465ba7e4be64d06ef0cc",
      "Id": "e971825c0f464a1f86737b853c572069",
      "IsHidden": "False"
    },
    {
      "Start": "f9d735488e844e948dc6d2e97d2a9eef",
      "End": "f85541cba4c3492da4484f82a70d5691",
      "Id": "599f294e89914aa4943b45edef140c8e",
      "IsHidden": "False"
    },
    {
      "Start": "cc6a09dd4b7c4c1e8b16f068596c836e",
      "End": "aa872138ebe14ded9f454afd703e481b",
      "Id": "920a1fdfbee4448e9978280b5d767265",
      "IsHidden": "False"
    },
    {
      "Start": "377d47a99b0447078cc0e92753ca70e3",
      "End": "3c5074bb4a29465cba27ee3aa26c52db",
      "Id": "407387a57eea49be98308d94e1e52d75",
      "IsHidden": "False"
    },
    {
      "Start": "c75ab1599f004dccad0e3569b11bd61f",
      "End": "bcc0f57592bf400d802b71e8d520c5f9",
      "Id": "524afdf5be2c4213ae69c826e74bc2e2",
      "IsHidden": "False"
    },
    {
      "Start": "8a09e7a66c8545aa93b9bcdbd570d6e4",
      "End": "95f55f301be34287a7c71b612a629138",
      "Id": "7d605ed7572546149f03ed0b14f46a45",
      "IsHidden": "False"
    },
    {
      "Start": "dd28b52a87f84a418ae868ed7c3e02e5",
      "End": "3cdd606922364403949adef2e367aba6",
      "Id": "f2bb7c496fcf47ce8c67c015f070738c",
      "IsHidden": "False"
    },
    {
      "Start": "dd28b52a87f84a418ae868ed7c3e02e5",
      "End": "1f372b1432904ee3bae62d41d01e44b1",
      "Id": "0e4993d5f7524e65a2c692ec95401f3a",
      "IsHidden": "False"
    },
    {
      "Start": "f5c76bf4125740c88ae0cc31af458d80",
      "End": "db28ee14215140058710c534833d28f3",
      "Id": "9d48663299c3495896108db51bca3e0b",
      "IsHidden": "False"
    },
    {
      "Start": "d8940a41ea414557a5ce41a0907c83fe",
      "End": "d18a4072cdfc4949af62eb2cab5aa82a",
      "Id": "ba116e8631304f39a39778264d9d3d31",
      "IsHidden": "False"
    },
    {
      "Start": "daa56d74079e417789d85a126076fcf6",
      "End": "06bbae1e61d14a11984fe3cc5aefe2e0",
      "Id": "badcc16bbbf74c1ba23c78dd865d7474",
      "IsHidden": "False"
    },
    {
      "Start": "8cf0196c973d4892bdc0c9fdcfff212a",
      "End": "f8f1f064fc274215b071b6fcae57339b",
      "Id": "49d90176011c496c949e7fec051f5af5",
      "IsHidden": "False"
    },
    {
      "Start": "8dcd44fc26ce4f99830b39a6ee6a9825",
      "End": "155c1c924919498dad828cfd5f2b3d14",
      "Id": "3426e28f3b9b4ae3acf06d26af8a069e",
      "IsHidden": "False"
    },
    {
      "Start": "8e3bf4d118804e38bf709246034b13ad",
      "End": "4b38710b4a0948339431d1f0bea183a9",
      "Id": "43cfbc56cf25469f88bdce9f15778b84",
      "IsHidden": "False"
    },
    {
      "Start": "0bf5d5fbe8954910ac36436b27600100",
      "End": "8161da4c9c8c41499b8c96f38fb8a5bd",
      "Id": "19b031e00eb04192806a0fd5453dbe0a",
      "IsHidden": "False"
    },
    {
      "Start": "0198e39b65d64d74916cb2f5c7d67bb1",
      "End": "89678d1d974f46d998bfb1c1670a653d",
      "Id": "65889de6c89d45c7a5d0785552aaafa7",
      "IsHidden": "False"
    },
    {
      "Start": "40c9bb6feb6a4d88af99543f256b1551",
      "End": "794545cda55f485ebfda3fecb8165a35",
      "Id": "8c11726c767143b1abae7458b72ffc25",
      "IsHidden": "False"
    },
    {
      "Start": "b2a4b7cece534827a10422c2a0853861",
      "End": "45d305f09f67439d9ae3421cadfe641c",
      "Id": "cd1036cd235a4c59a7ee0baf5c912e3e",
      "IsHidden": "False"
    },
    {
      "Start": "937022d809cd4d0d9b65dbed5717f69e",
      "End": "6b4b7b31ba56435582d02fcf0c147700",
      "Id": "46cfaab174d748a4a0e5a08647fc60e3",
      "IsHidden": "False"
    },
    {
      "Start": "7361c89d11514b63895545aed1038a09",
      "End": "3d51892cd3334a05b5ee968afafec1f8",
      "Id": "3c3e284bf7c146aba339b45ac780bbc8",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "1e3b5d82-c924-4649-a653-7fa7ead9cd1c"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.6.0",
      "ReferenceType": "Package",
      "Nodes": [
        "a975e6b79f8a4068972a73d99999a2f6",
        "22796d8cfc1b4864ae62a00255262743",
        "b3d8cf9e75f646469bdc3154df538dc7",
        "996460e1f3c9423a857a45d6935c8b6d"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.19",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "6.1",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.19.3.6394",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -157.20586204528809,
      "EyeY": 64.388980865478516,
      "EyeZ": 11.939237594604492,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "a975e6b79f8a4068972a73d99999a2f6",
        "Name": "FamilyType.CompoundStructureLayers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1423.8651125197312,
        "Y": -940.63745303414794
      },
      {
        "Id": "5c5b52526f8c46a7805cd9f1aa57b6fb",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 520.63492622360343,
        "Y": -943.29563546597058
      },
      {
        "Id": "1d81ce4cbed34cc094082864e2830842",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 789.72267094060521,
        "Y": -942.79828554664573
      },
      {
        "Id": "8d0706a8455e4025938c3ec51bef2877",
        "Name": "Element.ElementType",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1098.9807000428145,
        "Y": -942.01058899821146
      },
      {
        "Id": "0f42916b474b460db609a1cc7fe81d1a",
        "Name": "Material.Name",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1883.7940133880986,
        "Y": -961.65664620316352
      },
      {
        "Id": "df296e0a91ad49a0b6747af37157bb72",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 480.38628552760474,
        "Y": 84.036853319963711
      },
      {
        "Id": "69e3ee7f12c74e7d91324ddca16a0311",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 757.99833932516958,
        "Y": 84.959394190879038
      },
      {
        "Id": "a33ae200948e4b38be754515f3e53a1e",
        "Name": "Element.ElementType",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1120.0980749083246,
        "Y": 82.491615727739031
      },
      {
        "Id": "22796d8cfc1b4864ae62a00255262743",
        "Name": "FamilyType.CompoundStructureLayers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1431.1529969657358,
        "Y": 79.269945439043568
      },
      {
        "Id": "7012804b290d429fa70ff0126f871775",
        "Name": "Material.Name",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1870.9363941933059,
        "Y": 76.726468861237663
      },
      {
        "Id": "55c5a1fd2a474c3a8474ab5d8d8a8690",
        "Name": "Python Script: Assign Revit materials to material categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2136.6472789750537,
        "Y": -969.06969822073552
      },
      {
        "Id": "88f0fa71830944cc95eb553dd98e6294",
        "Name": "Python Script: Join thickness and material lists",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2759.5978309268689,
        "Y": -972.75547364784438
      },
      {
        "Id": "931bc355c2c448c18ef78b2b922682ea",
        "Name": "Python Script: Remove elements belonigng to category OTHER",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3243.5370752514591,
        "Y": -974.91706323545668
      },
      {
        "Id": "6f4c62ff056d49c0937963fd3fd9a0e3",
        "Name": "Python Script: Assign Revit material layers to TOTEM element types",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4065.485658402451,
        "Y": -963.28286864369534
      },
      {
        "Id": "7ad21306b8574aecbe348ba16898a334",
        "Name": "Python Script: Remove elements belonging to category OTHER",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3227.0646883814011,
        "Y": 73.127575578592655
      },
      {
        "Id": "087bb1e2c69246bcb92818ae458a89a2",
        "Name": "Python Script: Assign Revit  material layers to TOTEM element types",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4049.8933070856842,
        "Y": 59.466441532937779
      },
      {
        "Id": "10cc29e69b374d3b916e9ded897dd23f",
        "Name": "Python Script: Join thickness and material lists",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2746.8533780570192,
        "Y": 72.392070505631978
      },
      {
        "Id": "3df28d2cc6b544e083d060d8f8d046a3",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 716.81066076748129,
        "Y": -515.37689808006462
      },
      {
        "Id": "fa4ef2679f11478593ec27c0b0ef9461",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1401.4876264703528,
        "Y": -546.278100505262
      },
      {
        "Id": "b579bf5b27024521b2cf90a412388aa2",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8512.0242697395424,
        "Y": 1561.82779038401
      },
      {
        "Id": "088ae7061e96410baca2a18a4ba90836",
        "Name": "List.Transpose",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8500.0834642085028,
        "Y": 1430.6475637034503
      },
      {
        "Id": "2fbacf3fb3194bd5a63fa74a450f6253",
        "Name": "Data.ExportToExcel",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8883.2616531704425,
        "Y": 1184.4290679146
      },
      {
        "Id": "72c5cad1fefc492293f312d0f43c389b",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8518.3642264681821,
        "Y": 1307.2197491663203
      },
      {
        "Id": "27a8d8b4e0594a72bb1211a112f6f7b1",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8218.2394163706831,
        "Y": 1053.0852020497678
      },
      {
        "Id": "bda07696a17949ee926ec6e1fad5f086",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8514.6501542832921,
        "Y": 1186.40415681119
      },
      {
        "Id": "42f77b38a5c548c085fb9a5cb3eb9456",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8511.8363825318411,
        "Y": 1062.04137528251
      },
      {
        "Id": "ce6c483604b54a27895ab91ae2f68d66",
        "Name": "File Path",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8461.1750957228833,
        "Y": 910.42260344033025
      },
      {
        "Id": "5608cb51ead74ac6a8d65528d221b3a5",
        "Name": "List.Join_Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7722.8005728620183,
        "Y": 870.05397885682464
      },
      {
        "Id": "17ed9339974a4e72af05b4e91bf29e51",
        "Name": "List.Join_Surface",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7727.3016397336332,
        "Y": 1204.6665188185493
      },
      {
        "Id": "aa7d57a1a901450aa43702c9d0d41238",
        "Name": "List.Join_Length",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7733.2593103842419,
        "Y": 1534.0430028733083
      },
      {
        "Id": "5a25a2191cbf4c7b93e5b01836374649",
        "Name": "List.Join_Type",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7746.6509594067411,
        "Y": 2226.22710558526
      },
      {
        "Id": "2be3422d122044cb8ddb0e96cec10275",
        "Name": "List.Join_Number",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7734.2139793163778,
        "Y": 1875.4359058170558
      },
      {
        "Id": "828d07cc5ae14fe6bcc0c28b6f5ee72f",
        "Name": "List.Join_Name",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7737.471077167198,
        "Y": 535.43243010976425
      },
      {
        "Id": "7505a4f3a33b4c128f61eab8cc063da9",
        "Name": "List.Join_ID",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7750.6502639256614,
        "Y": 206.26366885792993
      },
      {
        "Id": "e84928e55c34410ea2e680a365cffb53",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7426.4354607884688,
        "Y": 2226.3970810956253
      },
      {
        "Id": "5190b62c61c942fc810ab3f05891b703",
        "Name": "List.Cycle_Number",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6099.4651942793853,
        "Y": -522.87459424229314
      },
      {
        "Id": "3100f7a31cbb47a3ae8b103c36a3cc5f",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7434.3592554851193,
        "Y": 495.01688588843433
      },
      {
        "Id": "a83877eadb274bf691e09f3fc4a61e43",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7506.2962468597034,
        "Y": 212.57979437912451
      },
      {
        "Id": "ec09e5d8f8344cc09c0fb2b1b1243ae0",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7495.4440833465605,
        "Y": 1866.02162787532
      },
      {
        "Id": "df07be3636254d47bd0d13f279b30b56",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7478.11269586072,
        "Y": 1219.1704046317209
      },
      {
        "Id": "5dbfed54f9c142da94db28def06eb3a5",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7505.3353721672311,
        "Y": 1527.8078728829853
      },
      {
        "Id": "5313b933b62d41d49b815d7f12f0e416",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7484.2761950020049,
        "Y": 872.87599435413483
      },
      {
        "Id": "e63feaa12e974736912340647bb8385f",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 746.39902118021223,
        "Y": 483.50398480261856
      },
      {
        "Id": "4ab78c5bce36424cbba618c7e8104d0e",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1411.4565456643038,
        "Y": 470.52661428292527
      },
      {
        "Id": "1dc7ff49935c4508bc9ee8698f55f10a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5833.9267067173832,
        "Y": -487.66166473681926
      },
      {
        "Id": "ffe7e1fbdd6240a1a47d6c7665ebcbf6",
        "Name": "Python Script: Length of list",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4870.4001363017123,
        "Y": -954.65560064561532
      },
      {
        "Id": "704fde05c8b747c2a44149441944e111",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4744.5445226273432,
        "Y": -639.27937840696029
      },
      {
        "Id": "ac7ff8e2e7784eebb948b65364980e02",
        "Name": "Python Script: Length of list",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4847.8120991924307,
        "Y": 58.051394803952462
      },
      {
        "Id": "07b0d3804cd44e92997e1a0bc409ed4d",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4733.1513747106974,
        "Y": 430.2588747159042
      },
      {
        "Id": "69827da524eb49069455c3509d0e004b",
        "Name": "List.Cycle",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6123.1450257139686,
        "Y": -718.51941362486184
      },
      {
        "Id": "c776cd2fd22648a9b6f5168cf8874c45",
        "Name": "List.Cycle",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6155.7718343914048,
        "Y": 388.91998798929194
      },
      {
        "Id": "1f7434e1253442d5b0770fab3457f64d",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5849.7798631441265,
        "Y": -675.25538912756315
      },
      {
        "Id": "57a5609ed5c341d387ab3cd720738564",
        "Name": "List.Cycle",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4745.719968847262,
        "Y": 619.11303796793368
      },
      {
        "Id": "e2f8fda0a5fc4afa8dba7e6511a740a7",
        "Name": "List.Cycle",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4785.6373850019063,
        "Y": -437.95804620274328
      },
      {
        "Id": "416184afdd0e4a7eb511dc64bcb5bb43",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4445.91256285876,
        "Y": -508.22149466150273
      },
      {
        "Id": "fffa4f3e28ea42938ce27f9deefeed02",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4445.6145414758939,
        "Y": 557.88683288386835
      },
      {
        "Id": "914ad6fc76c64fc2bd5e1c2a37decea2",
        "Name": "Python Script: Add letter to UniqueID",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5193.3437638232945,
        "Y": -831.09260971079641
      },
      {
        "Id": "c5c87a3b15c042398b825cc133ce3714",
        "Name": "Python Script: Add letter to UniqueID",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5236.3344844775729,
        "Y": 231.58085292761598
      },
      {
        "Id": "bb05da2aaf72482ab2f7293a742a1f2d",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1311.5383373551911,
        "Y": 3734.5191398244206
      },
      {
        "Id": "0f727c362c6242f482c5168d1becdc2f",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2090.6565686927024,
        "Y": 3719.2001021382807
      },
      {
        "Id": "6482684b313d4264b1cc702a2d5710d8",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 986.6288333597131,
        "Y": 3739.0721881408263
      },
      {
        "Id": "b4dd0b7d3e5a4bd39643882efca52afb",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 672.66558945362681,
        "Y": 3739.9730100957922
      },
      {
        "Id": "78d20b6b3e2d4fac8716431e2b5fbf79",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 688.11603727011175,
        "Y": 4854.3751935770042
      },
      {
        "Id": "7b3bde0c94624f5b94bc5b141f386322",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1015.4763878437068,
        "Y": 4857.3873046955041
      },
      {
        "Id": "e1ed349ab790433a9b6d6f63a337b1f8",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1325.5038008883578,
        "Y": 4849.229547598211
      },
      {
        "Id": "ac6933419c1d4682836c24c45cd3a799",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2100.9327905362452,
        "Y": 4830.9506516025594
      },
      {
        "Id": "1ae00912519e4fae8325e1a6031ff35e",
        "Name": "Python Script: Lengthen Family and type list for all element layers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4027.8840240672744,
        "Y": -779.14775619097259
      },
      {
        "Id": "cc8217525f4a46dbaecc229b0243a345",
        "Name": "Python Script: Lengthen Family and type lists for all element layers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3978.7135196769777,
        "Y": 261.813909970676
      },
      {
        "Id": "fe577cfd310142d98ac81272779f6234",
        "Name": "Python Script: Obtain total length of all lists",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5590.2221521979409,
        "Y": 62.3755834819774
      },
      {
        "Id": "6d721c8d75f145a598700f6af7342c01",
        "Name": "Python Script: Obtain total length of all lists",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5611.6419942505845,
        "Y": -976.649449518308
      },
      {
        "Id": "79bba4d65c754bdfab6e8669fd92ea7d",
        "Name": "Python Script: Lengthen area list for all element layers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3315.3519873107534,
        "Y": 519.65766744446
      },
      {
        "Id": "3837f707df6c405099d90d9f5bbd989e",
        "Name": "Python Script: Lengthen area list for all element layers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3365.1282838787151,
        "Y": -530.21194892962944
      },
      {
        "Id": "1b5ab5ec7eec4c97bed4da1295b7197d",
        "Name": "Python Script: Lengthen Family and type lists for all element layers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3985.8562091141202,
        "Y": 1372.6916122169914
      },
      {
        "Id": "43639c70c13540d7a3bd9bb1e64a70dc",
        "Name": "Python Script: Add letter to alter UniqueID",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5205.1742336450352,
        "Y": 1284.9499690450061
      },
      {
        "Id": "c858a6c7a2d043758f653df541b7f54f",
        "Name": "Python Script: Lengthen area list for all element layers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3334.2910814000525,
        "Y": 1541.1472214071962
      },
      {
        "Id": "71490e41cc79484ebbae384e74a3186e",
        "Name": "Python Script: Length of list",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4811.8315144886265,
        "Y": 1148.7648348192042
      },
      {
        "Id": "17c05d244ae347efa353fd96588dcfb3",
        "Name": "Python Script: Obtain total length of all lists",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5604.7169464835752,
        "Y": 1125.1942845059573
      },
      {
        "Id": "3dbaee4f09d24f888a58d423f2dbf237",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1422.6158095210144,
        "Y": 1546.4338918849187
      },
      {
        "Id": "b3d8cf9e75f646469bdc3154df538dc7",
        "Name": "FamilyType.CompoundStructureLayers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1451.7092779609748,
        "Y": 1145.3971162154555
      },
      {
        "Id": "dc1bb84ff612438a90e486a143f3ba38",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 759.51258233158251,
        "Y": 1537.4406964296047
      },
      {
        "Id": "d88d6b191060473c9b2b2d6795af55b0",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 431.33064275650577,
        "Y": 1138.4618595019044
      },
      {
        "Id": "3b52460c4d254ad8acf724eaffb1ea81",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 756.39655774967969,
        "Y": 1131.5489440622785
      },
      {
        "Id": "031f99e390564be7b354b48fad96f312",
        "Name": "Element.ElementType",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1150.7940456240558,
        "Y": 1134.5868604098853
      },
      {
        "Id": "14e30cbd154c4547a4fd38904c35169b",
        "Name": "Material.Name",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1883.7699954409479,
        "Y": 1143.7534031651428
      },
      {
        "Id": "c3bd046e7427449d92c5192cd558ae09",
        "Name": "Python Script: Remove elements belonging to category OTHER",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3222.8858572533263,
        "Y": 1143.1989049474039
      },
      {
        "Id": "7460f07099ac45fbafb219392f01c05f",
        "Name": "Python Script: Join thickness and material lists",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2736.0192624041692,
        "Y": 1142.2070514056259
      },
      {
        "Id": "073477b06d7b49fb8ab4844470d542d3",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4723.0123902208607,
        "Y": 1548.5383855374255
      },
      {
        "Id": "2785d5d6e9e4409e8464dc240a3b540a",
        "Name": "List.Cycle_Number",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6112.86277646185,
        "Y": 569.522892916432
      },
      {
        "Id": "0db6f7f5ed264f0e84c7f6cdff9ed09b",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4453.7106527064579,
        "Y": 1700.9986930915936
      },
      {
        "Id": "d3bee63053dc45ce8211937608af2cce",
        "Name": "List.Cycle",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4711.2813508637855,
        "Y": 1727.8141565541946
      },
      {
        "Id": "f09e60f1dfca4fcbbd4350fa00974b15",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5858.5719338102508,
        "Y": 385.36641518596747
      },
      {
        "Id": "b76df0a328d34efe936eacdb22298ade",
        "Name": "List.Cycle",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6113.9970554947058,
        "Y": 1445.2554613439979
      },
      {
        "Id": "1cd376cb528c4e1ba76767575de0d4e5",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5869.6781125875032,
        "Y": 1454.2041326434237
      },
      {
        "Id": "ce901ea759a14ec985f64f1855dc0bce",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5870.7773600890469,
        "Y": 580.82432123164324
      },
      {
        "Id": "69c8afb0f3f24356ae2b9edc68dd7361",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5867.1905630980937,
        "Y": 1627.9021133454737
      },
      {
        "Id": "3b7a293910b6471aaeecacf2fa89a84f",
        "Name": "List.Cycle_Number",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6105.0913949340975,
        "Y": 1615.9075360514003
      },
      {
        "Id": "7175c5b4e07349daaafc281c78ef563a",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 434.93805260665204,
        "Y": 2378.81336113511
      },
      {
        "Id": "d1f2d0b7273941b1bddaebac51123294",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 711.0221636076335,
        "Y": 2378.3068722549165
      },
      {
        "Id": "9ded324208b84c4b99428a2b65260f71",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 739.72994704927169,
        "Y": 2764.731288023399
      },
      {
        "Id": "ff3a3d2ea845449aa067967661f7e457",
        "Name": "Element.ElementType",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1138.1959022053625,
        "Y": 2376.7540664660828
      },
      {
        "Id": "0d28148d9c584220b45ad2f548b07669",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1407.3013865188514,
        "Y": 2779.44878864472
      },
      {
        "Id": "996460e1f3c9423a857a45d6935c8b6d",
        "Name": "FamilyType.CompoundStructureLayers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1433.2051843702334,
        "Y": 2377.809678862106
      },
      {
        "Id": "abdc9d376af44e71a01f13959179288d",
        "Name": "Material.Name",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1854.2413806446884,
        "Y": 2376.7853413294929
      },
      {
        "Id": "36a12f2ec68e4c72a9b94a7a0afd6159",
        "Name": "Python Script: Join thickness and material lists",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2703.8709304821532,
        "Y": 2374.5965183106964
      },
      {
        "Id": "c765b218c33c4f979b1575b8ec90c20d",
        "Name": "Python Script: Lengthen area list for all element layers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3249.3298806916696,
        "Y": 2711.8840676652489
      },
      {
        "Id": "98204f8f18da40d6ada73b6441cf2bf0",
        "Name": "Python Script: Remove elements belonging to category OTHER",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3226.7369472291239,
        "Y": 2387.3636675653665
      },
      {
        "Id": "79e3b53ff5b8467abe53b868fa07bd40",
        "Name": "Python Script: Length of list",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4757.9860711083247,
        "Y": 2381.0916400184205
      },
      {
        "Id": "d9d347a9edb24a88bbbe7ce60e5c4f11",
        "Name": "Python Script: Assign Revit material layers to TOTEM element types",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3965.0926969086076,
        "Y": 2385.9645227173128
      },
      {
        "Id": "47108b09884c4bbea3da5c20f1aa4a05",
        "Name": "Python Script: Add letter to alter UniqueID",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5157.572115554749,
        "Y": 2522.8505912715
      },
      {
        "Id": "04462f0bbb7d4402836784f229563ee8",
        "Name": "Python Script: Lengthen Family and type lists for all element layers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3919.1456439603371,
        "Y": 2555.2909293430266
      },
      {
        "Id": "bcd27202fe01491d8e0ad5c5ecb4e45f",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4407.2902348952321,
        "Y": 2856.3668546179697
      },
      {
        "Id": "a67d591cd0484471ab6b058ae1b04bc6",
        "Name": "Python Script: Obtain total length of all lists",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5577.274233977425,
        "Y": 2372.3406961028641
      },
      {
        "Id": "cf659e4c37d1426cb18736d7b40f993e",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4661.4980301333126,
        "Y": 2707.7865227099037
      },
      {
        "Id": "cdf3763bd2a24d1087d64c44a54aa0de",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5843.8879942506328,
        "Y": 2654.4978922216355
      },
      {
        "Id": "2e8b92074778467a8bbd3f712bbfd9a4",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5843.5912390164449,
        "Y": 2850.5772007951082
      },
      {
        "Id": "8c36c72fbc3543389ecf90d7035ad747",
        "Name": "List.Cycle",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4653.569525795976,
        "Y": 2887.0643525263281
      },
      {
        "Id": "8180696d274d4a93bb3f5b24cce4e770",
        "Name": "List.Cycle",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6093.1885127321029,
        "Y": 2647.7845546916665
      },
      {
        "Id": "f10c86d2cf434803969a476f23702a38",
        "Name": "List.Cycle_Number",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6083.8084147355748,
        "Y": 2843.0122537872585
      },
      {
        "Id": "7b4d5388967045d5a9af4506c99adcd6",
        "Name": "Python script: Round lengths",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2703.6192577241122,
        "Y": 3905.2883708660952
      },
      {
        "Id": "707d9f63710b4264b8d149c8246f9e4c",
        "Name": "Python Script: Assign letters according to lengths",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3015.2359105241326,
        "Y": 3911.0682480703754
      },
      {
        "Id": "4853de1886ce4cf9a4767e3414027e37",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3059.1394564251527,
        "Y": 3747.9147380865329
      },
      {
        "Id": "4d214b04ef0947c888281eeb1d049ff0",
        "Name": "List.Combine",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3523.0258394976518,
        "Y": 3710.2268618457351
      },
      {
        "Id": "fdff27a7041441aca41979f03b51ddc1",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2893.3404971450727,
        "Y": 3532.9817838615331
      },
      {
        "Id": "b359000105c34285bd381ba9596328f0",
        "Name": "String.Concat",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3082.2520587780227,
        "Y": 3505.3504584766329
      },
      {
        "Id": "d4c895ebe9ad47b5adea534032a4c0f0",
        "Name": "Python Script: Assign letters according to lengths",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3069.8691287756328,
        "Y": 4978.7326815938941
      },
      {
        "Id": "034c0bf71fd346fe92a53764635537c6",
        "Name": "List.Combine",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3549.4999014063478,
        "Y": 4776.3442354039835
      },
      {
        "Id": "6be481a367fd43cc8adeb509d9111f9b",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3111.9107557572875,
        "Y": 4833.0245608950427
      },
      {
        "Id": "d0658a039e264a31a23745bda17e9250",
        "Name": "Python Script: Rounded lengths",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2732.6385345471658,
        "Y": 4982.3871325612254
      },
      {
        "Id": "7f7e91215524438fa25a345b5cace7f9",
        "Name": "String.Concat",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3157.90185995601,
        "Y": 4596.8154206867684
      },
      {
        "Id": "4cb99e3b7b224956826d555b0827c444",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2946.1117964772075,
        "Y": 4618.0916066700429
      },
      {
        "Id": "6280223bdc6b454db0e1fcdb6cdc57bc",
        "Name": "List.Cycle_Number",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4123.75745705736,
        "Y": 4019.3075758010991
      },
      {
        "Id": "bbeb4183ae804632bb2e731a6744d1c1",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3881.6720406845498,
        "Y": 4030.6090041163097
      },
      {
        "Id": "c03928f7792d40d98838b81180cbd5bb",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3881.9687959187395,
        "Y": 3896.1816371142791
      },
      {
        "Id": "6a17c8a784364248b8468fec74adf6ef",
        "Name": "List.Cycle",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4162.3978485320595,
        "Y": 3805.632118542539
      },
      {
        "Id": "70f76a32d9b64705bc496edcbb648d00",
        "Name": "List.Cycle_Number",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4141.4838354151234,
        "Y": 5085.7746631507853
      },
      {
        "Id": "a7381936199a4cf5850f034874015641",
        "Name": "List.Cycle",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4157.3785201520532,
        "Y": 4919.2925174509865
      },
      {
        "Id": "27e02d42e8d3464b9294dd610a7c7a05",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3894.792781377324,
        "Y": 5080.1887533610379
      },
      {
        "Id": "e941d96353734eb0b5f38978172ca6df",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3888.94868639153,
        "Y": 4944.2261738040115
      },
      {
        "Id": "471765eb41374260b05ce07efa0133f7",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3885.5403053657469,
        "Y": 3539.60545169197
      },
      {
        "Id": "701da6648b0d4d87be1520e56a7d2dea",
        "Name": "List.Cycle",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4162.6366777795229,
        "Y": 3601.854244611678
      },
      {
        "Id": "4a77b70d38d94d4bac8eace64f5c0aa6",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3819.3142211733311,
        "Y": 4643.0610569804521
      },
      {
        "Id": "54661bc7a5494714ab3218aaebd948ed",
        "Name": "List.Cycle",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4145.5796711374614,
        "Y": 4701.3763236961322
      },
      {
        "Id": "897aaf5a5606448d835866272bfd0b70",
        "Name": "String.Concat",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2163.6797866045645,
        "Y": -705.7082932236948
      },
      {
        "Id": "f110b0be94fb46eb8530a0a2f5121d00",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2140.5671842516945,
        "Y": -463.14401361379475
      },
      {
        "Id": "3d729d0d1a8444c6bf30cb9bf5953424",
        "Name": "Python Script: Round areas",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1819.0131287332179,
        "Y": -302.75183061189972
      },
      {
        "Id": "b1d3da2679ab4a4bae3afe1fb7d529a1",
        "Name": "Python Script: Assign letters according to area",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2113.6434213184357,
        "Y": -301.16665499017
      },
      {
        "Id": "f5a69ec9da1b45d380fe934523cfbdbc",
        "Name": "List.Combine",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2463.5517413243811,
        "Y": -521.94559533752135
      },
      {
        "Id": "5efb2080d9f54e20816501b249dd7211",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1959.3417210619082,
        "Y": 382.88381348876987
      },
      {
        "Id": "04c57fa96c4b4270b14d75d2ab1a153b",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2131.9107586558348,
        "Y": 591.04668939992257
      },
      {
        "Id": "94145df51cbd4a418ed71d5517778bb3",
        "Name": "String.Concat",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2143.7398971522939,
        "Y": 357.5091808751522
      },
      {
        "Id": "ae13a9466efa41cc93af93a9878f16fe",
        "Name": "Python Script: Round areas",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1945.0812228175928,
        "Y": 745.08457370560791
      },
      {
        "Id": "cb0204d13e2b47079d49e306dd023015",
        "Name": "Python Script: Assign letters according to area",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2240.5040262557404,
        "Y": 751.29987608430906
      },
      {
        "Id": "a41dfb8799a545b8a9e4be1cb353964a",
        "Name": "List.Combine",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2591.7811551414284,
        "Y": 500.07082375833738
      },
      {
        "Id": "52da282d341347e182e336888c8ac0a1",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2116.9615464420108,
        "Y": 1593.2880329326456
      },
      {
        "Id": "3d620c4914524ed0be63db72fb7dce13",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2282.7605057220908,
        "Y": 1808.2209871576456
      },
      {
        "Id": "f8b28dd666ad4dc7aca5d93921816600",
        "Name": "String.Concat",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2305.8731080749608,
        "Y": 1565.6567075477456
      },
      {
        "Id": "8dc779a525d343c5acae8c93b85913af",
        "Name": "Python Script: Rounded areas",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1928.7860706098031,
        "Y": 1973.8196258440646
      },
      {
        "Id": "5a5f5b7145a949369d3bc91766b12a9e",
        "Name": "Python Script: Assign letters according to area",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2249.9500758079034,
        "Y": 1968.1905569970227
      },
      {
        "Id": "0c9882bb45514dd7bc5de7e9c349f381",
        "Name": "List.Combine",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2708.7111976831811,
        "Y": 1761.1497245984206
      },
      {
        "Id": "b1871f4d20b043499b5356e9b3a2eaa5",
        "Name": "List.Combine",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2696.62597499913,
        "Y": 2966.8719497593088
      },
      {
        "Id": "5806ecc563e749d98d2e1c6fc5298052",
        "Name": "Python Script: Assign letters according to area",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2251.2673700510027,
        "Y": 3171.7375120272545
      },
      {
        "Id": "83326c1ec49f491d9e10194d5020528e",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2249.3429315416538,
        "Y": 3002.5301218164859
      },
      {
        "Id": "871efa9154ce431e94f6fb792152a7ba",
        "Name": "Python Script: Rounded areas",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1929.7037877926805,
        "Y": 3173.9192490916339
      },
      {
        "Id": "722a77888166477bb7072cf4ea9fb357",
        "Name": "String.Concat",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2272.4555338945238,
        "Y": 2759.9658422065859
      },
      {
        "Id": "bfd2f8b4ec9d4828a3286facbb4a7b88",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2083.5439722615738,
        "Y": 2787.5971675914857
      },
      {
        "Id": "109dc6bb7d5b4b48af1fbb82568e04ae",
        "Name": "Material.Name",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2735.7231780657648,
        "Y": 5141.0373514003859
      },
      {
        "Id": "c4616780af1c49ff86322c53038c259b",
        "Name": "Material.Name",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2709.6362842262497,
        "Y": 4062.4177215079817
      },
      {
        "Id": "68a7ed89beea488ebbc7afea7657ecea",
        "Name": "Python Script: Calculate cross-sectional area from volume and length",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2753.4170258048644,
        "Y": 5290.7545317682325
      },
      {
        "Id": "bf55e8bf574d44758c16dbcad0adf9d2",
        "Name": "Python Script: Round areas in list",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3398.6520854003247,
        "Y": 5293.2161953746
      },
      {
        "Id": "34e62b5b4a724797aa206ceaaf8e53ce",
        "Name": "Python Script: Calculate cross-sectional area from volume and length",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2756.1493265110239,
        "Y": 4217.1201272151065
      },
      {
        "Id": "dc266c186ef94872bf3af4e9bb92794a",
        "Name": "Python Script: Round areas in list",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3397.405920512072,
        "Y": 4217.4071221646664
      },
      {
        "Id": "ddf1020c59404505b36fd1839ab21271",
        "Name": "Python Script: Join length and material lists",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3932.1231167984224,
        "Y": 4186.1608793005144
      },
      {
        "Id": "18ea073df09b43999f9996a619f93942",
        "Name": "Python Script: Assign Revit materials to material categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3134.0862983091265,
        "Y": 4068.4471814775607
      },
      {
        "Id": "73509c22d60043718e6c9eca81e61fd6",
        "Name": "Python Script: Join length and material lists",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3934.4643703054462,
        "Y": 5285.3478179699669
      },
      {
        "Id": "20635dfc5ed549ff9c538442a44db40d",
        "Name": "Python Script: Assign Revit material layers to TOTEM element types",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4424.7270652082534,
        "Y": 4187.8672646794421
      },
      {
        "Id": "072b924f5bd4489fa94cdc2f5a739e7c",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6052.2810109880229,
        "Y": 1132.4261816876426
      },
      {
        "Id": "0bef823df1b545749a5deb1d512335fb",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5669.3537928543683,
        "Y": 1288.0703548044614
      },
      {
        "Id": "68418b52c0f64dd5adc3a8018ad9baef",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4733.2489461193936,
        "Y": 1376.5757140831106
      },
      {
        "Id": "6b0029de073944c5bbb25f9092c93553",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6060.2312012528673,
        "Y": 65.0133485334145
      },
      {
        "Id": "bd62feb4c6bd4ab991756efa8c333759",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6061.9167967382546,
        "Y": -973.6210438936962
      },
      {
        "Id": "75e3bb4066bf4b0ba8d2a2b2c0eeb111",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6014.4794159378444,
        "Y": 2371.6398267553627
      },
      {
        "Id": "2ed24ab373794171b666384a7c0861eb",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4681.6520940907558,
        "Y": 2563.3747060458049
      },
      {
        "Id": "12843a0cb86a45029b681b1120a66d6b",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4730.8291755897772,
        "Y": 271.27643286159673
      },
      {
        "Id": "a495dfa869484934ac0ba0dd26d2c24e",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4730.8297888365014,
        "Y": -778.32470634831088
      },
      {
        "Id": "a610cfce10ed4261a3f5a818e72ed404",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5589.0868047607473,
        "Y": -831.08947731018588
      },
      {
        "Id": "c9c9f4519f17411db50782133ffa24b1",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5647.9526234279583,
        "Y": 238.70937602161422
      },
      {
        "Id": "a1ae765ff8224deea44c56b8d0fc1976",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5610.3598290970685,
        "Y": 2529.7345395607445
      },
      {
        "Id": "275015e37d7e4dfaaf16003cd59b16a0",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1974.76822497161,
        "Y": -678.076967838795
      },
      {
        "Id": "69ed4f36943c47deaf56871d3d77c4e5",
        "Name": "Python Script: Round layer thicknesses",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2193.4539834873731,
        "Y": -835.62416345032614
      },
      {
        "Id": "669527a2bbc044f2b530480bba0cadca",
        "Name": "Python Script: Assign Revit materials to material categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2114.4688618309574,
        "Y": 76.347860906521987
      },
      {
        "Id": "75c8e839643b44e7a1c53db4f23b9910",
        "Name": "Python Script: Assign Revit materials to material categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2125.1606381704923,
        "Y": 1142.8703086929925
      },
      {
        "Id": "9b1fee2f4c5f49ea889e2894e77cf10c",
        "Name": "Python Script: Assign Revit materials to material categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2099.3803657080166,
        "Y": 2377.9102055477183
      },
      {
        "Id": "14661f8b2a9443099753f5a3edf50cc0",
        "Name": "Python Script: Assign Revit materials to material categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3124.8646879837593,
        "Y": 5138.453233291707
      },
      {
        "Id": "beba10139fe94f09949e0a242be2cbbf",
        "Name": "Python Script: Assign Revit material layers to TOTEM element types",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4039.0072734899227,
        "Y": 1143.4538449062322
      },
      {
        "Id": "03419787c13d4102bfe7900c01724e32",
        "Name": "Python Script: Assign Revit material layers to TOTEM element types",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4403.433418194415,
        "Y": 5290.5398953055928
      },
      {
        "Id": "d7fa4550582a47a7942022aa8d52f91c",
        "Name": "Python Script: Round layer thicknesses",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2154.73175651083,
        "Y": 217.80885257270097
      },
      {
        "Id": "645481a705dc425ab2947e067275e174",
        "Name": "Python Script: Round layer thicknesses",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2145.2608854338782,
        "Y": 1302.4296761983217
      },
      {
        "Id": "5a7eb9a735244696926eae6263ea9033",
        "Name": "Python Script: Round layer thicknesses",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2129.1460391422761,
        "Y": 2518.0089498548696
      },
      {
        "Id": "1fbd2b812c894657a6f4d524ab078fc5",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3886.69845105442,
        "Y": 1541.7729458195404
      },
      {
        "Id": "16b32798fd15495ba687ad78fcebd250",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4991.3978908015924,
        "Y": 1553.3381142738244
      },
      {
        "Id": "0c8e3cc2d886449eaa044df055c29764",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3861.5977541900747,
        "Y": 521.15845464294216
      },
      {
        "Id": "2f4165dda9804abc92887737762f0dc1",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4992.5086396650831,
        "Y": 440.15653684014615
      },
      {
        "Id": "80ac3635fd3f41678cab7c863e9c3014",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3902.4121468988455,
        "Y": -525.5230119084265
      },
      {
        "Id": "8c6c4564b75d452a92f5b6d04a81726a",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5001.9604811666841,
        "Y": -629.00991395716323
      },
      {
        "Id": "03fb3153dea04856bd27b456ee0f67d3",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3781.3864351130796,
        "Y": 2717.890386009311
      },
      {
        "Id": "7d4a284a24814bac81cf8913978537d2",
        "Name": "If IN = null",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4914.2193223418844,
        "Y": 2714.9545232532187
      }
    ],
    "Annotations": [
      {
        "Id": "0759cb0ca71841b28f398252faa2620c",
        "Title": "Floors",
        "DescriptionText": "Obtain parameters",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3df28d2cc6b544e083d060d8f8d046a3"
        ],
        "HasNestedGroups": false,
        "Left": 706.81066076748129,
        "Top": -587.7768980800646,
        "Width": 621.59999999999991,
        "Height": 229.79999999999995,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -515.37689808006462,
        "InitialHeight": 145.0,
        "TextblockHeight": 62.4,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "912b5dd74f66482c807a02553e0c7a5a",
        "Title": "Walls",
        "DescriptionText": "Obtain parameters",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e63feaa12e974736912340647bb8385f"
        ],
        "HasNestedGroups": false,
        "Left": 736.39902118021223,
        "Top": 411.10398480261858,
        "Width": 621.60000000000014,
        "Height": 229.79999999999995,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 483.50398480261856,
        "InitialHeight": 145.0,
        "TextblockHeight": 62.4,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "bafad00477c14816a1075115db224c40",
        "Title": "Columns",
        "DescriptionText": "Obtain parameters",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "bb05da2aaf72482ab2f7293a742a1f2d"
        ],
        "HasNestedGroups": false,
        "Left": 1301.5383373551911,
        "Top": 3662.1191398244205,
        "Width": 652.0,
        "Height": 311.40000000000009,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 3734.5191398244206,
        "InitialHeight": 145.0,
        "TextblockHeight": 62.4,
        "Background": "#FFFFC999"
      },
      {
        "Id": "10e8412a27f649d5b9df63ba8ece7e8e",
        "Title": "Beams",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e1ed349ab790433a9b6d6f63a337b1f8"
        ],
        "HasNestedGroups": false,
        "Left": 1315.5038008883578,
        "Top": 4776.8295475982113,
        "Width": 652.0,
        "Height": 311.39999999999964,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 4849.229547598211,
        "InitialHeight": 145.0,
        "TextblockHeight": 62.4,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "150764b1ea7948b880ae71035a0d31c4",
        "Title": "Foundations",
        "DescriptionText": "Obtain parameters",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "dc1bb84ff612438a90e486a143f3ba38"
        ],
        "HasNestedGroups": false,
        "Left": 749.51258233158251,
        "Top": 1465.0406964296046,
        "Width": 621.59999999999991,
        "Height": 229.80000000000018,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1537.4406964296047,
        "InitialHeight": 145.0,
        "TextblockHeight": 62.4,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "b972096a54d0429db990fde27ea49524",
        "Title": "Roofs",
        "DescriptionText": "Obtain parameters",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9ded324208b84c4b99428a2b65260f71"
        ],
        "HasNestedGroups": false,
        "Left": 729.72994704927169,
        "Top": 2692.3312880233989,
        "Width": 621.59999999999991,
        "Height": 229.80000000000018,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 2764.731288023399,
        "InitialHeight": 145.0,
        "TextblockHeight": 62.4,
        "Background": "#FFD4B6DB"
      }
    ],
    "X": -1804.7550807168618,
    "Y": -2854.253924851686,
    "Zoom": 0.82103293483226825
  }
}